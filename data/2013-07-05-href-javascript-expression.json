{"year":"2013","month":"07","day":"05","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/07/05/href-javascript-expression.html","fileName":"href-javascript-expression","layout":"post","title":"Href中的JavaScript link","description":"","tags":["html","JavaScript"],"markdownText":"\n\n\n在`A`标签的`href`属性写上JavaScript“表达式”，其中一个目的就是为了那些不是链接的`A`标签通过HTML验证，[参考这里](http://stackoverflow.com/questions/7755088/href-expression-a-href-javascript-a)。*（注：刚才试了一下在最新的W3C的HTML在线校验里面没有`name`和`href`属性的`A`标签也能通过校验）*\n\n不能写“#”，因为会跳到页面的头部*（可以通过取消浏览器默认事件防止该行为，[参考这里](http://dafeizizhu.github.io/2013/07/03/a-tag/)）*。也不能写空字符串，在IE下会刷新页面。那只能写一个JavaScript表达式，该表达式什么也不做。最常见的就是以下这个代码：\n\n    <a href=\"javascript:void(0)\">Do not refresh or go to the top of this page.</a>\n\nJavaScrit提供了一种机制，供页面与JavaScript方法进行交互，其中一种机制就是`href`中的JavaScript链接（JavaScript link）。一个最简单的JavaScript链接示例如下：\n\n    <a href=\"javascript:MyFunction();\">Text to Click</a>\n\n其中`MyFunction`是全局的一个函数，当单击这个`A`标签的时候，对应JavaScript链接的语句会被执行。\n\n如果同时设置了`href`上的JavaScript链接，又设置了`onclick`属性*（当然这个应该存在于黑暗之中永远不让它出来o(╯□╰)o）*，会是怎样的一个场景呢？立马做一个实验，[参考这里](http://jsfiddle.net/b7YLJ/1/)。\n\n    <a href=\"javascript:alert(1);\" onclick=\"alert(2);\">Text to Click</a>\n\n结果是先弹出了2，再弹出1。仔细思考一下，其实这个结果是跟前天写的内容是吻合的。事件处理函数先执行，再执行浏览器的默认行为，在这里浏览器的默认行为就是弹出1。\n\n最后简单看看JavaScript中一个被忽略的运算符：`void`。这个运算符有两种使用方式：\n\n    void (expression)\n\n    void expression\n\n这个运算符的作用是执行JavaScript语句，但是不返回任何东西。可以作为`href`的值，当单击`A`标签的时候会执行该JavaScript语句。详细情况可以[参考这里](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#void)。\n","htmlText":"<p>在<code>A</code>标签的<code>href</code>属性写上JavaScript“表达式”，其中一个目的就是为了那些不是链接的<code>A</code>标签通过HTML验证，<a href=\"http://stackoverflow.com/questions/7755088/href-expression-a-href-javascript-a\">参考这里</a>。<em>（注：刚才试了一下在最新的W3C的HTML在线校验里面没有<code>name</code>和<code>href</code>属性的<code>A</code>标签也能通过校验）</em></p>\n<p>不能写“#”，因为会跳到页面的头部<em>（可以通过取消浏览器默认事件防止该行为，<a href=\"http://dafeizizhu.github.io/2013/07/03/a-tag/\">参考这里</a>）</em>。也不能写空字符串，在IE下会刷新页面。那只能写一个JavaScript表达式，该表达式什么也不做。最常见的就是以下这个代码：</p>\n<pre><code>&lt;a href=&quot;javascript:void(0)&quot;&gt;Do not refresh or go to the top of this page.&lt;/a&gt;\n</code></pre><p>JavaScrit提供了一种机制，供页面与JavaScript方法进行交互，其中一种机制就是<code>href</code>中的JavaScript链接（JavaScript link）。一个最简单的JavaScript链接示例如下：</p>\n<pre><code>&lt;a href=&quot;javascript:MyFunction();&quot;&gt;Text to Click&lt;/a&gt;\n</code></pre><p>其中<code>MyFunction</code>是全局的一个函数，当单击这个<code>A</code>标签的时候，对应JavaScript链接的语句会被执行。</p>\n<p>如果同时设置了<code>href</code>上的JavaScript链接，又设置了<code>onclick</code>属性<em>（当然这个应该存在于黑暗之中永远不让它出来o(╯□╰)o）</em>，会是怎样的一个场景呢？立马做一个实验，<a href=\"http://jsfiddle.net/b7YLJ/1/\">参考这里</a>。</p>\n<pre><code>&lt;a href=&quot;javascript:alert(1);&quot; onclick=&quot;alert(2);&quot;&gt;Text to Click&lt;/a&gt;\n</code></pre><p>结果是先弹出了2，再弹出1。仔细思考一下，其实这个结果是跟前天写的内容是吻合的。事件处理函数先执行，再执行浏览器的默认行为，在这里浏览器的默认行为就是弹出1。</p>\n<p>最后简单看看JavaScript中一个被忽略的运算符：<code>void</code>。这个运算符有两种使用方式：</p>\n<pre><code>void (expression)\n\nvoid expression\n</code></pre><p>这个运算符的作用是执行JavaScript语句，但是不返回任何东西。可以作为<code>href</code>的值，当单击<code>A</code>标签的时候会执行该JavaScript语句。详细情况可以<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#void\">参考这里</a>。</p>\n","summaryMarkdownText":"\n\n\n在`A`标签的`href`属性写上JavaScript“表达式”，其中一个目的就是为了那些不是链接的`A`标签通过HTML验证，[参考这里](http://stackoverflow.com/questions/7755088/href-expression-a-href-javascript-a)。*（注：刚才试了一下在最新的W3C的HTML在线校验里面没有`name`和`href`属性的`A`标签也能通过校验）*\n\n不能写“#”，因为会跳到页面的头部*（可以通过取消浏览器默认事件防止该行为，[参考这里](http://dafeizizhu.github.io/2013/07/03/a-tag/)）*。也不能写空字符串，在IE下会刷新页面。那只能写一个JavaScript表达式，该表达式什么也不做。最常见的就是以下这个代码：\n\n    <a href=\"javascript:void(0)\">Do not refresh or go to the top of this page.</a>\n\nJavaScrit提供了一种机制，供页面与JavaScript方法进行交互，其中一种机制就是`href`中的JavaScript链接（JavaScript link）。一个最简单的JavaScript链接示例如下：\n\n    <a href=\"javascript:MyFunction();\">Text to Click</a>\n\n其中`MyFunction`是全局的一个函数，当单击这个`A`标签的时候，对应JavaScript链接的语句会被执行。\n\n如果同时设置了`href`上的JavaScript链接，又设置了`onclick`属性*（当然这个应该存在于黑暗之中永远不让它出来o(╯□╰)o）*，会是怎样的一个场景呢？立马做一个实验，[参考这里](http://jsfiddle.net/b7YLJ/1/)。\n\n    <a href=\"javascript:alert(1);\" onclick=\"alert(2);\">Text to Click</a>\n\n结果是先弹出了2，再弹出1。仔细思考一下，其实这个结果是跟前天写的内容是吻合的。事件处理函数先执行，再执行浏览器的默认行为，在这里浏览器的默认行为就是弹出1。\n\n最后简单看看JavaScript中一个被忽略的运算符：`void`。这个运算符有两种使用方式：\n\n    void (expression)\n","summaryHtmlText":"<p>在<code>A</code>标签的<code>href</code>属性写上JavaScript“表达式”，其中一个目的就是为了那些不是链接的<code>A</code>标签通过HTML验证，<a href=\"http://stackoverflow.com/questions/7755088/href-expression-a-href-javascript-a\">参考这里</a>。<em>（注：刚才试了一下在最新的W3C的HTML在线校验里面没有<code>name</code>和<code>href</code>属性的<code>A</code>标签也能通过校验）</em></p>\n<p>不能写“#”，因为会跳到页面的头部<em>（可以通过取消浏览器默认事件防止该行为，<a href=\"http://dafeizizhu.github.io/2013/07/03/a-tag/\">参考这里</a>）</em>。也不能写空字符串，在IE下会刷新页面。那只能写一个JavaScript表达式，该表达式什么也不做。最常见的就是以下这个代码：</p>\n<pre><code>&lt;a href=&quot;javascript:void(0)&quot;&gt;Do not refresh or go to the top of this page.&lt;/a&gt;\n</code></pre><p>JavaScrit提供了一种机制，供页面与JavaScript方法进行交互，其中一种机制就是<code>href</code>中的JavaScript链接（JavaScript link）。一个最简单的JavaScript链接示例如下：</p>\n<pre><code>&lt;a href=&quot;javascript:MyFunction();&quot;&gt;Text to Click&lt;/a&gt;\n</code></pre><p>其中<code>MyFunction</code>是全局的一个函数，当单击这个<code>A</code>标签的时候，对应JavaScript链接的语句会被执行。</p>\n<p>如果同时设置了<code>href</code>上的JavaScript链接，又设置了<code>onclick</code>属性<em>（当然这个应该存在于黑暗之中永远不让它出来o(╯□╰)o）</em>，会是怎样的一个场景呢？立马做一个实验，<a href=\"http://jsfiddle.net/b7YLJ/1/\">参考这里</a>。</p>\n<pre><code>&lt;a href=&quot;javascript:alert(1);&quot; onclick=&quot;alert(2);&quot;&gt;Text to Click&lt;/a&gt;\n</code></pre><p>结果是先弹出了2，再弹出1。仔细思考一下，其实这个结果是跟前天写的内容是吻合的。事件处理函数先执行，再执行浏览器的默认行为，在这里浏览器的默认行为就是弹出1。</p>\n<p>最后简单看看JavaScript中一个被忽略的运算符：<code>void</code>。这个运算符有两种使用方式：</p>\n<pre><code>void (expression)\n</code></pre>"}