{"year":"2013","month":"08","day":"12","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/08/12/dom-getattribute.html","fileName":"dom-getattribute","layout":"post","title":"DOM的getAttribute方法","description":"","tags":["JavaScript"],"markdownText":"\n\n\n获取一个DOM元素的特性（Attribute），相信也是一个前端攻城师天天都要涉及的问题。虽然日常我们都被jQuery宠坏了，还是要了解一下原生的应该如何获取一个DOM元素的特性值的方法。\n\n> getAttribute() returns the value of the named attribute on the specified element.\n\n`getAttribute`返回特定DOM元素上的特性的值。该方法接受一个参数，就是表示特性的名称的字符串。当该特性存在时返回该特性的字符串的值，否则返回`null`或者空字符串。\n\n### 标准\n\n调用`getAttribute`，传入的代表特性名称的字符串是大小写不敏感的，内部实现先会把参数转换成小写再进行操作。\n\n大部分浏览器在没有找到该特性值的时候会返回`null`，例子[参考这里](http://jsfiddle.net/GVT4E/)。但是，在DOM 3 Core的标准下应该返回的是**空字符串**，而某些浏览器是按照标准去实现的。所以，当`getAttribute`返回一个空字符串的时候，可能是该特性没有找到，也可能是该特性的值就是一个空字符串。此时，应该使用`hasAttribute`去判断一个元素上的某个特性是否存在，如：\n\n    function getAttr(test) {\n      if (test.hasAttribute(\"a\")) {\n        alert(\"has attribute a, value is \" + test.getAttribute(\"a\"));\n      } else {\n        alert(\"has not attribute a\");\n      }\n    }\n\n例子[参考这里](http://jsfiddle.net/crctX/)。P.S. IE 7不支持`hasAttribute`……\n\n### 奇葩的IE\n\nIE对`getAttribute`有着自己一套实现（这太可怕了……）。在IE7以及之前的版本，`getAttribute`接受两个参数：\n\n1. 需要获取的特性名字的字符串。\n2. 一个标志位，规定返回特性值的方式。\n\n该标志位接受4个值：\n\n1. `0`，默认值，特性名称大小写不敏感，并根据需要转化特性值（例如把`href`转成完整的URL）。\n2. `1`，特性名称大小写敏感。\n3. `2`，返回特性值的字符串值，即不做任何转换。\n4. `4`，返回完整的URL对象，仅针对返回URL的特性，如`href`、`background`等。\n\n还有一些需要注意的：\n\n1. 在IE8之前的版本，特性（Attribute）的名称必须与元素对应的属性（Property）对应。\n2. 在IE8及其之后的版本，第二个参数已经没用了。\n\n在IE中，还有一些跟别的浏览器（甚至IE高版本和低版本之间）的区别。例如：\n\n    <input id=\"test\" readonly=\"readonly\" />\n\nJavaScript\n\n    alert(document.getElementById(\"test\").getAttribute(\"readonly\"));\n\n以上的代码，在IE7以及之前的IE版本返回的是`true`，而IE8、IE9、Chrome、Firefox返回的是`readonly`这个字符串。例子[参考这里](http://jsfiddle.net/rSDhp/)。\n\n由于IE的特殊实现，导致`getAttribute`在某些情况下返回的结果会不一致，例如获取一个`a`的`href`特性：\n\n    var href = document.getElementById(\"id\").getAttribute(\"href\"); // 123.html\n\n在Chrome、Firefox、IE8、IE9返回的都是`href`特性上面的字符串，而IE7返回的则是完整的URL（例如`http://host:port/path/to/123.html`）。要避免这个问题，得在调用`getAttribute`中加入第二个参数`2`，保证`getAttribute`返回的是原始的字符串。例子[参考这里](http://jsfiddle.net/xEA3B/2/)。P.S. 据说加入第二个参数Opera会崩溃，暂时无法验证……\n","htmlText":"<p>获取一个DOM元素的特性（Attribute），相信也是一个前端攻城师天天都要涉及的问题。虽然日常我们都被jQuery宠坏了，还是要了解一下原生的应该如何获取一个DOM元素的特性值的方法。</p>\n<blockquote>\n<p>getAttribute() returns the value of the named attribute on the specified element.</p>\n</blockquote>\n<p><code>getAttribute</code>返回特定DOM元素上的特性的值。该方法接受一个参数，就是表示特性的名称的字符串。当该特性存在时返回该特性的字符串的值，否则返回<code>null</code>或者空字符串。</p>\n<h3 id=\"-\">标准</h3>\n<p>调用<code>getAttribute</code>，传入的代表特性名称的字符串是大小写不敏感的，内部实现先会把参数转换成小写再进行操作。</p>\n<p>大部分浏览器在没有找到该特性值的时候会返回<code>null</code>，例子<a href=\"http://jsfiddle.net/GVT4E/\">参考这里</a>。但是，在DOM 3 Core的标准下应该返回的是<strong>空字符串</strong>，而某些浏览器是按照标准去实现的。所以，当<code>getAttribute</code>返回一个空字符串的时候，可能是该特性没有找到，也可能是该特性的值就是一个空字符串。此时，应该使用<code>hasAttribute</code>去判断一个元素上的某个特性是否存在，如：</p>\n<pre><code>function getAttr(test) {\n  if (test.hasAttribute(&quot;a&quot;)) {\n    alert(&quot;has attribute a, value is &quot; + test.getAttribute(&quot;a&quot;));\n  } else {\n    alert(&quot;has not attribute a&quot;);\n  }\n}\n</code></pre><p>例子<a href=\"http://jsfiddle.net/crctX/\">参考这里</a>。P.S. IE 7不支持<code>hasAttribute</code>……</p>\n<h3 id=\"-ie\">奇葩的IE</h3>\n<p>IE对<code>getAttribute</code>有着自己一套实现（这太可怕了……）。在IE7以及之前的版本，<code>getAttribute</code>接受两个参数：</p>\n<ol>\n<li>需要获取的特性名字的字符串。</li>\n<li>一个标志位，规定返回特性值的方式。</li>\n</ol>\n<p>该标志位接受4个值：</p>\n<ol>\n<li><code>0</code>，默认值，特性名称大小写不敏感，并根据需要转化特性值（例如把<code>href</code>转成完整的URL）。</li>\n<li><code>1</code>，特性名称大小写敏感。</li>\n<li><code>2</code>，返回特性值的字符串值，即不做任何转换。</li>\n<li><code>4</code>，返回完整的URL对象，仅针对返回URL的特性，如<code>href</code>、<code>background</code>等。</li>\n</ol>\n<p>还有一些需要注意的：</p>\n<ol>\n<li>在IE8之前的版本，特性（Attribute）的名称必须与元素对应的属性（Property）对应。</li>\n<li>在IE8及其之后的版本，第二个参数已经没用了。</li>\n</ol>\n<p>在IE中，还有一些跟别的浏览器（甚至IE高版本和低版本之间）的区别。例如：</p>\n<pre><code>&lt;input id=&quot;test&quot; readonly=&quot;readonly&quot; /&gt;\n</code></pre><p>JavaScript</p>\n<pre><code>alert(document.getElementById(&quot;test&quot;).getAttribute(&quot;readonly&quot;));\n</code></pre><p>以上的代码，在IE7以及之前的IE版本返回的是<code>true</code>，而IE8、IE9、Chrome、Firefox返回的是<code>readonly</code>这个字符串。例子<a href=\"http://jsfiddle.net/rSDhp/\">参考这里</a>。</p>\n<p>由于IE的特殊实现，导致<code>getAttribute</code>在某些情况下返回的结果会不一致，例如获取一个<code>a</code>的<code>href</code>特性：</p>\n<pre><code>var href = document.getElementById(&quot;id&quot;).getAttribute(&quot;href&quot;); // 123.html\n</code></pre><p>在Chrome、Firefox、IE8、IE9返回的都是<code>href</code>特性上面的字符串，而IE7返回的则是完整的URL（例如<code>http://host:port/path/to/123.html</code>）。要避免这个问题，得在调用<code>getAttribute</code>中加入第二个参数<code>2</code>，保证<code>getAttribute</code>返回的是原始的字符串。例子<a href=\"http://jsfiddle.net/xEA3B/2/\">参考这里</a>。P.S. 据说加入第二个参数Opera会崩溃，暂时无法验证……</p>\n","summaryMarkdownText":"\n\n\n获取一个DOM元素的特性（Attribute），相信也是一个前端攻城师天天都要涉及的问题。虽然日常我们都被jQuery宠坏了，还是要了解一下原生的应该如何获取一个DOM元素的特性值的方法。\n\n> getAttribute() returns the value of the named attribute on the specified element.\n\n`getAttribute`返回特定DOM元素上的特性的值。该方法接受一个参数，就是表示特性的名称的字符串。当该特性存在时返回该特性的字符串的值，否则返回`null`或者空字符串。\n\n### 标准\n\n调用`getAttribute`，传入的代表特性名称的字符串是大小写不敏感的，内部实现先会把参数转换成小写再进行操作。\n\n大部分浏览器在没有找到该特性值的时候会返回`null`，例子[参考这里](http://jsfiddle.net/GVT4E/)。但是，在DOM 3 Core的标准下应该返回的是**空字符串**，而某些浏览器是按照标准去实现的。所以，当`getAttribute`返回一个空字符串的时候，可能是该特性没有找到，也可能是该特性的值就是一个空字符串。此时，应该使用`hasAttribute`去判断一个元素上的某个特性是否存在，如：\n\n    function getAttr(test) {\n      if (test.hasAttribute(\"a\")) {\n        alert(\"has attribute a, value is \" + test.getAttribute(\"a\"));\n      } else {\n        alert(\"has not attribute a\");\n      }\n    }\n\n例子[参考这里](http://jsfiddle.net/crctX/)。P.S. IE 7不支持`hasAttribute`……\n","summaryHtmlText":"<p>获取一个DOM元素的特性（Attribute），相信也是一个前端攻城师天天都要涉及的问题。虽然日常我们都被jQuery宠坏了，还是要了解一下原生的应该如何获取一个DOM元素的特性值的方法。</p>\n<blockquote>\n<p>getAttribute() returns the value of the named attribute on the specified element.</p>\n</blockquote>\n<p><code>getAttribute</code>返回特定DOM元素上的特性的值。该方法接受一个参数，就是表示特性的名称的字符串。当该特性存在时返回该特性的字符串的值，否则返回<code>null</code>或者空字符串。</p>\n<h3 id=\"-\">标准</h3>\n<p>调用<code>getAttribute</code>，传入的代表特性名称的字符串是大小写不敏感的，内部实现先会把参数转换成小写再进行操作。</p>\n<p>大部分浏览器在没有找到该特性值的时候会返回<code>null</code>，例子<a href=\"http://jsfiddle.net/GVT4E/\">参考这里</a>。但是，在DOM 3 Core的标准下应该返回的是<strong>空字符串</strong>，而某些浏览器是按照标准去实现的。所以，当<code>getAttribute</code>返回一个空字符串的时候，可能是该特性没有找到，也可能是该特性的值就是一个空字符串。此时，应该使用<code>hasAttribute</code>去判断一个元素上的某个特性是否存在，如：</p>\n<pre><code>function getAttr(test) {\n  if (test.hasAttribute(&quot;a&quot;)) {\n    alert(&quot;has attribute a, value is &quot; + test.getAttribute(&quot;a&quot;));\n  } else {\n    alert(&quot;has not attribute a&quot;);\n  }\n}\n</code></pre><p>例子<a href=\"http://jsfiddle.net/crctX/\">参考这里</a>。P.S. IE 7不支持<code>hasAttribute</code>……</p>\n"}