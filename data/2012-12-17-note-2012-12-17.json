{"year":"2012","month":"12","day":"17","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2012/12/17/note-2012-12-17.html","fileName":"note-2012-12-17","layout":"post","title":"Note 2012 12 17","description":"","tags":["notes"],"markdownText":"\n\n\n###  FF jQuery.ajax 默认的dataType属性不生效\n\n在FF10以上的环境，使用jQuery的ajax方法，如果没有配置dataType属性，返回的结果类型不可遇见（经调试发现是Document），例如：\n\n\t$.ajax({\n\t\t\"url\": \"xxx\",\n\t\t\"success\": function (result) {\n\t\t\tconsole.log(result);\t// In FF, it may be Document if has no dataType...\n\t\t}\n\t\t// This is nessery\n\t\t\"dataType\": \"text\"\n\t});\n\n###  在IE8下使用jQuery的attr方法，最好能使用明确的boolean值\n\n在IE8下使用attr，如果使用例如空字符串或者undefined之类的去设置对应attr的值，可能会有意想不到的结果，例如：\n\n\tfunction test(booleanValue) {\n\t\t// This is nessery\n\t\tbooleanValue = !!booleanValue;\t\t\n\n\t\t$(\"#id\").attr(\"someAttr\", booleanValue);\n\t}\n\t\n","htmlText":"<h3 id=\"ff-jquery-ajax-datatype-\">FF jQuery.ajax 默认的dataType属性不生效</h3>\n<p>在FF10以上的环境，使用jQuery的ajax方法，如果没有配置dataType属性，返回的结果类型不可遇见（经调试发现是Document），例如：</p>\n<pre><code>$.ajax({\n    &quot;url&quot;: &quot;xxx&quot;,\n    &quot;success&quot;: function (result) {\n        console.log(result);    // In FF, it may be Document if has no dataType...\n    }\n    // This is nessery\n    &quot;dataType&quot;: &quot;text&quot;\n});\n</code></pre><h3 id=\"-ie8-jquery-attr-boolean-\">在IE8下使用jQuery的attr方法，最好能使用明确的boolean值</h3>\n<p>在IE8下使用attr，如果使用例如空字符串或者undefined之类的去设置对应attr的值，可能会有意想不到的结果，例如：</p>\n<pre><code>function test(booleanValue) {\n    // This is nessery\n    booleanValue = !!booleanValue;        \n\n    $(&quot;#id&quot;).attr(&quot;someAttr&quot;, booleanValue);\n}\n</code></pre>","summaryMarkdownText":"\n\n\n###  FF jQuery.ajax 默认的dataType属性不生效\n\n在FF10以上的环境，使用jQuery的ajax方法，如果没有配置dataType属性，返回的结果类型不可遇见（经调试发现是Document），例如：\n\n\t$.ajax({\n\t\t\"url\": \"xxx\",\n\t\t\"success\": function (result) {\n\t\t\tconsole.log(result);\t// In FF, it may be Document if has no dataType...\n\t\t}\n\t\t// This is nessery\n\t\t\"dataType\": \"text\"\n\t});\n\n###  在IE8下使用jQuery的attr方法，最好能使用明确的boolean值\n\n在IE8下使用attr，如果使用例如空字符串或者undefined之类的去设置对应attr的值，可能会有意想不到的结果，例如：\n\n\tfunction test(booleanValue) {\n\t\t// This is nessery\n\t\tbooleanValue = !!booleanValue;\t\t\n\n\t\t$(\"#id\").attr(\"someAttr\", booleanValue);","summaryHtmlText":"<h3 id=\"ff-jquery-ajax-datatype-\">FF jQuery.ajax 默认的dataType属性不生效</h3>\n<p>在FF10以上的环境，使用jQuery的ajax方法，如果没有配置dataType属性，返回的结果类型不可遇见（经调试发现是Document），例如：</p>\n<pre><code>$.ajax({\n    &quot;url&quot;: &quot;xxx&quot;,\n    &quot;success&quot;: function (result) {\n        console.log(result);    // In FF, it may be Document if has no dataType...\n    }\n    // This is nessery\n    &quot;dataType&quot;: &quot;text&quot;\n});\n</code></pre><h3 id=\"-ie8-jquery-attr-boolean-\">在IE8下使用jQuery的attr方法，最好能使用明确的boolean值</h3>\n<p>在IE8下使用attr，如果使用例如空字符串或者undefined之类的去设置对应attr的值，可能会有意想不到的结果，例如：</p>\n<pre><code>function test(booleanValue) {\n    // This is nessery\n    booleanValue = !!booleanValue;        \n\n    $(&quot;#id&quot;).attr(&quot;someAttr&quot;, booleanValue);\n</code></pre>"}