{"year":"2013","month":"08","day":"13","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/08/13/dom-setattribute.html","fileName":"dom-setattribute","layout":"post","title":"DOM的setAttribute方法","description":"","tags":["JavaScript"],"markdownText":"\n\n\n昨天讨论了`getAttribute`，今天继续讨论`setAttribute`的使用方法。\n\n### 标准\n\n> Adds a new attribute or changes the value of an existing attribute on the specified element.\n\n`setAttribute`这个方法就是用来增加或者修改一个DOM元素上的特性（Attribute）。当指定名称的特性不存在，则会新增一个该名称的特性；如果该特性已经存在，则会修改现有特性的值。这个方法接受两个参数：\n\n1. 表示特性名称的字符串。\n2. 这个特性的新的值。当传入的参数不是字符串的时候会隐式调用参数的`toString`方法。例子[参考这里](http://jsfiddle.net/7Tenq/)。IE7貌似有不一样的行为，下面会提到。\n\n使用的例子如下:\n\n    var d = document.getElementById(\"d1\"); \n    d.setAttribute(\"align\", \"center\");\n\n与`getAttribute`类似，在HTML DOM里面`setAttribute`也是大小写不敏感的。当需要删除一个特性的时候不应该使用`setAttribute(\"someAttr\", null)`，而是应该使用`removeAttribute`。\n\n### 又是IE\n\n与`getAttribute`类似，IE7以及更早的版本有一套自己的实现。在比较早的IE的版本又可以传入第三个参数：`lflag`，这个标志位接受以下两个值：\n\n1. `0`，默认值，对特性的名称大小写不敏感。\n2. `1`，对特性的名称是大小写敏感的。\n\n同样，在IE8之前的版本特性（Attribute）与属性（Property）的名称必须一致（例如`className`等）、在IE8以及更高版本的IE上第三个参数已经不支持了，不要使用。这个方法甚至可以绑定事件处理程序，如：\n\n    document.getElementById(\"test\").setAttribute('onclick', 'alert(1)');\n\n经测试，IE7不支持，例子[参考这里](http://jsfiddle.net/M3PLw/2/)。\n\n有一个比较有趣的现象，就是第二个参数`val`的取值类型。标准里面应该是传入字符串的，会隐式调用这个参数的`toString`方法。但是，在IE7，通过`getAttribute`返回的特性值与标准实现是不一样的，如以下代码：\n    \n    function test(attr, val) {\n      var el = document.getElementById(\"test\");\n      el.setAttribute(attr, val);\n      alert(\"Set Attr: \" + attr + \n        \" value: \" + el.getAttribute(attr) + \n        \" valute type: \" + typeof el.getAttribute(attr));\n    }\n\n    test(\"a\", null); // null\n    test(\"b\", undefined); // undefeined\n    test(\"c\", {}); // object\n    test(\"d\", [1, 2, 3]); // Array\n    test(\"e\", /test/); // RegExp\n    test(\"f\", 0); // Number\n    test(\"g\", true); // Boolean\n\n在IE7上面，通过`getAttribute`返回的值的类型竟然跟`setAttribute`的第二个参数的类型一样的！而在高版本的IE或者Chrome等现代浏览器里面`getAttribute`返回的都是字符串。说明在IE7上，`setAttribute`并没有把第二个参数转化成字符串，而是把参数直接存在DOM上面了。例子[参考这里](http://jsfiddle.net/7Tenq/show/)。\n","htmlText":"<p>昨天讨论了<code>getAttribute</code>，今天继续讨论<code>setAttribute</code>的使用方法。</p>\n<h3 id=\"-\">标准</h3>\n<blockquote>\n<p>Adds a new attribute or changes the value of an existing attribute on the specified element.</p>\n</blockquote>\n<p><code>setAttribute</code>这个方法就是用来增加或者修改一个DOM元素上的特性（Attribute）。当指定名称的特性不存在，则会新增一个该名称的特性；如果该特性已经存在，则会修改现有特性的值。这个方法接受两个参数：</p>\n<ol>\n<li>表示特性名称的字符串。</li>\n<li>这个特性的新的值。当传入的参数不是字符串的时候会隐式调用参数的<code>toString</code>方法。例子<a href=\"http://jsfiddle.net/7Tenq/\">参考这里</a>。IE7貌似有不一样的行为，下面会提到。</li>\n</ol>\n<p>使用的例子如下:</p>\n<pre><code>var d = document.getElementById(&quot;d1&quot;); \nd.setAttribute(&quot;align&quot;, &quot;center&quot;);\n</code></pre><p>与<code>getAttribute</code>类似，在HTML DOM里面<code>setAttribute</code>也是大小写不敏感的。当需要删除一个特性的时候不应该使用<code>setAttribute(&quot;someAttr&quot;, null)</code>，而是应该使用<code>removeAttribute</code>。</p>\n<h3 id=\"-ie\">又是IE</h3>\n<p>与<code>getAttribute</code>类似，IE7以及更早的版本有一套自己的实现。在比较早的IE的版本又可以传入第三个参数：<code>lflag</code>，这个标志位接受以下两个值：</p>\n<ol>\n<li><code>0</code>，默认值，对特性的名称大小写不敏感。</li>\n<li><code>1</code>，对特性的名称是大小写敏感的。</li>\n</ol>\n<p>同样，在IE8之前的版本特性（Attribute）与属性（Property）的名称必须一致（例如<code>className</code>等）、在IE8以及更高版本的IE上第三个参数已经不支持了，不要使用。这个方法甚至可以绑定事件处理程序，如：</p>\n<pre><code>document.getElementById(&quot;test&quot;).setAttribute(&#39;onclick&#39;, &#39;alert(1)&#39;);\n</code></pre><p>经测试，IE7不支持，例子<a href=\"http://jsfiddle.net/M3PLw/2/\">参考这里</a>。</p>\n<p>有一个比较有趣的现象，就是第二个参数<code>val</code>的取值类型。标准里面应该是传入字符串的，会隐式调用这个参数的<code>toString</code>方法。但是，在IE7，通过<code>getAttribute</code>返回的特性值与标准实现是不一样的，如以下代码：</p>\n<pre><code>function test(attr, val) {\n  var el = document.getElementById(&quot;test&quot;);\n  el.setAttribute(attr, val);\n  alert(&quot;Set Attr: &quot; + attr + \n    &quot; value: &quot; + el.getAttribute(attr) + \n    &quot; valute type: &quot; + typeof el.getAttribute(attr));\n}\n\ntest(&quot;a&quot;, null); // null\ntest(&quot;b&quot;, undefined); // undefeined\ntest(&quot;c&quot;, {}); // object\ntest(&quot;d&quot;, [1, 2, 3]); // Array\ntest(&quot;e&quot;, /test/); // RegExp\ntest(&quot;f&quot;, 0); // Number\ntest(&quot;g&quot;, true); // Boolean\n</code></pre><p>在IE7上面，通过<code>getAttribute</code>返回的值的类型竟然跟<code>setAttribute</code>的第二个参数的类型一样的！而在高版本的IE或者Chrome等现代浏览器里面<code>getAttribute</code>返回的都是字符串。说明在IE7上，<code>setAttribute</code>并没有把第二个参数转化成字符串，而是把参数直接存在DOM上面了。例子<a href=\"http://jsfiddle.net/7Tenq/show/\">参考这里</a>。</p>\n","summaryMarkdownText":"\n\n\n昨天讨论了`getAttribute`，今天继续讨论`setAttribute`的使用方法。\n\n### 标准\n\n> Adds a new attribute or changes the value of an existing attribute on the specified element.\n\n`setAttribute`这个方法就是用来增加或者修改一个DOM元素上的特性（Attribute）。当指定名称的特性不存在，则会新增一个该名称的特性；如果该特性已经存在，则会修改现有特性的值。这个方法接受两个参数：\n\n1. 表示特性名称的字符串。\n2. 这个特性的新的值。当传入的参数不是字符串的时候会隐式调用参数的`toString`方法。例子[参考这里](http://jsfiddle.net/7Tenq/)。IE7貌似有不一样的行为，下面会提到。\n\n使用的例子如下:\n\n    var d = document.getElementById(\"d1\"); \n    d.setAttribute(\"align\", \"center\");\n\n与`getAttribute`类似，在HTML DOM里面`setAttribute`也是大小写不敏感的。当需要删除一个特性的时候不应该使用`setAttribute(\"someAttr\", null)`，而是应该使用`removeAttribute`。\n\n### 又是IE\n\n与`getAttribute`类似，IE7以及更早的版本有一套自己的实现。在比较早的IE的版本又可以传入第三个参数：`lflag`，这个标志位接受以下两个值：\n","summaryHtmlText":"<p>昨天讨论了<code>getAttribute</code>，今天继续讨论<code>setAttribute</code>的使用方法。</p>\n<h3 id=\"-\">标准</h3>\n<blockquote>\n<p>Adds a new attribute or changes the value of an existing attribute on the specified element.</p>\n</blockquote>\n<p><code>setAttribute</code>这个方法就是用来增加或者修改一个DOM元素上的特性（Attribute）。当指定名称的特性不存在，则会新增一个该名称的特性；如果该特性已经存在，则会修改现有特性的值。这个方法接受两个参数：</p>\n<ol>\n<li>表示特性名称的字符串。</li>\n<li>这个特性的新的值。当传入的参数不是字符串的时候会隐式调用参数的<code>toString</code>方法。例子<a href=\"http://jsfiddle.net/7Tenq/\">参考这里</a>。IE7貌似有不一样的行为，下面会提到。</li>\n</ol>\n<p>使用的例子如下:</p>\n<pre><code>var d = document.getElementById(&quot;d1&quot;); \nd.setAttribute(&quot;align&quot;, &quot;center&quot;);\n</code></pre><p>与<code>getAttribute</code>类似，在HTML DOM里面<code>setAttribute</code>也是大小写不敏感的。当需要删除一个特性的时候不应该使用<code>setAttribute(&quot;someAttr&quot;, null)</code>，而是应该使用<code>removeAttribute</code>。</p>\n<h3 id=\"-ie\">又是IE</h3>\n<p>与<code>getAttribute</code>类似，IE7以及更早的版本有一套自己的实现。在比较早的IE的版本又可以传入第三个参数：<code>lflag</code>，这个标志位接受以下两个值：</p>\n"}