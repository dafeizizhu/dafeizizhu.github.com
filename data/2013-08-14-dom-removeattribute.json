{"year":"2013","month":"08","day":"14","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/08/14/dom-removeattribute.html","fileName":"dom-removeattribute","layout":"post","title":"DOM 的removeAttribute方法","description":"","tags":["JavaScript"],"markdownText":"\n\n\n今天是Attribute系列的最后一篇。前面两篇讨论了如何获取、增加、修改一个DOM元素的特性。今天轻松一下，把删除讨论完。\n\n> removeAttribute removes an attribute from the specified element.\n\n`removeAttribute`的功能很简单，就是删除指定名称的特性。该方法只接受一个参数，就是指定特性名称的字符串。以下是一个使用的例子：\n\n    document.getElementById(\"div1\").removeAttribute(\"align\");\n\n昨天也讨论过类似的例子，就是如果需要删除一个特性的话，使用`removeAttribute`比使用`setAttribute`把该特性置成`null`或者空字符串要好。尝试删除一个不存在的特性不会抛出任何异常。\n\n既然用`setAttribute`可以为一个DOM元素绑定事件处理程序，那么对应使用`removeAttribute`也可以解除事件绑定，如以下代码：\n\n    <div id=\"test\" onclick=\"alert(1);\">Test</div>\n\nJavaScript：\n\n    document.getElementById(\"test\").removeAttribute(\"onclick\");\n\n单击该`div`元素不会弹出消息框。可惜IE7又再一次华丽地失败了。例子[参考这里](http://jsfiddle.net/PnKh6/show/)。\n\n最后一个要注意的点是，如果删除的特性有默认值，则调用`removeAttribute`删除该特性之后会把该特性重置成该特性的默认值，如以下代码：\n\n    <input id=\"test\" type=\"radio\" value=\"hello\" />\n\nJavaScript\n\n    var test = document.getElementById(\"test\");\n    test.removeAttribute(\"type\");\n\n在Chrome上，执行完以上的代码，该`input`会变成一个输入框，并有默认值`hello`显示在里面。该例子在IE7、IE8上执行失败，仍然是一个`radio`，而在IE9上，虽然变成了输入框，但是默认值`hello`没有显示在里面。P.S. 我们日常也不会这么用，这里当作一个小偏门知识介绍给大家吧。\n\n关于Attribute，我们日常还是会依赖于jQuery去做相关的操作，包括`attr`、`prop`、`data`等，看来一篇jQuery源码分析又要来啦！\n","htmlText":"<p>今天是Attribute系列的最后一篇。前面两篇讨论了如何获取、增加、修改一个DOM元素的特性。今天轻松一下，把删除讨论完。</p>\n<blockquote>\n<p>removeAttribute removes an attribute from the specified element.</p>\n</blockquote>\n<p><code>removeAttribute</code>的功能很简单，就是删除指定名称的特性。该方法只接受一个参数，就是指定特性名称的字符串。以下是一个使用的例子：</p>\n<pre><code>document.getElementById(&quot;div1&quot;).removeAttribute(&quot;align&quot;);\n</code></pre><p>昨天也讨论过类似的例子，就是如果需要删除一个特性的话，使用<code>removeAttribute</code>比使用<code>setAttribute</code>把该特性置成<code>null</code>或者空字符串要好。尝试删除一个不存在的特性不会抛出任何异常。</p>\n<p>既然用<code>setAttribute</code>可以为一个DOM元素绑定事件处理程序，那么对应使用<code>removeAttribute</code>也可以解除事件绑定，如以下代码：</p>\n<pre><code>&lt;div id=&quot;test&quot; onclick=&quot;alert(1);&quot;&gt;Test&lt;/div&gt;\n</code></pre><p>JavaScript：</p>\n<pre><code>document.getElementById(&quot;test&quot;).removeAttribute(&quot;onclick&quot;);\n</code></pre><p>单击该<code>div</code>元素不会弹出消息框。可惜IE7又再一次华丽地失败了。例子<a href=\"http://jsfiddle.net/PnKh6/show/\">参考这里</a>。</p>\n<p>最后一个要注意的点是，如果删除的特性有默认值，则调用<code>removeAttribute</code>删除该特性之后会把该特性重置成该特性的默认值，如以下代码：</p>\n<pre><code>&lt;input id=&quot;test&quot; type=&quot;radio&quot; value=&quot;hello&quot; /&gt;\n</code></pre><p>JavaScript</p>\n<pre><code>var test = document.getElementById(&quot;test&quot;);\ntest.removeAttribute(&quot;type&quot;);\n</code></pre><p>在Chrome上，执行完以上的代码，该<code>input</code>会变成一个输入框，并有默认值<code>hello</code>显示在里面。该例子在IE7、IE8上执行失败，仍然是一个<code>radio</code>，而在IE9上，虽然变成了输入框，但是默认值<code>hello</code>没有显示在里面。P.S. 我们日常也不会这么用，这里当作一个小偏门知识介绍给大家吧。</p>\n<p>关于Attribute，我们日常还是会依赖于jQuery去做相关的操作，包括<code>attr</code>、<code>prop</code>、<code>data</code>等，看来一篇jQuery源码分析又要来啦！</p>\n","summaryMarkdownText":"\n\n\n今天是Attribute系列的最后一篇。前面两篇讨论了如何获取、增加、修改一个DOM元素的特性。今天轻松一下，把删除讨论完。\n\n> removeAttribute removes an attribute from the specified element.\n\n`removeAttribute`的功能很简单，就是删除指定名称的特性。该方法只接受一个参数，就是指定特性名称的字符串。以下是一个使用的例子：\n\n    document.getElementById(\"div1\").removeAttribute(\"align\");\n\n昨天也讨论过类似的例子，就是如果需要删除一个特性的话，使用`removeAttribute`比使用`setAttribute`把该特性置成`null`或者空字符串要好。尝试删除一个不存在的特性不会抛出任何异常。\n\n既然用`setAttribute`可以为一个DOM元素绑定事件处理程序，那么对应使用`removeAttribute`也可以解除事件绑定，如以下代码：\n\n    <div id=\"test\" onclick=\"alert(1);\">Test</div>\n\nJavaScript：\n\n    document.getElementById(\"test\").removeAttribute(\"onclick\");\n\n单击该`div`元素不会弹出消息框。可惜IE7又再一次华丽地失败了。例子[参考这里](http://jsfiddle.net/PnKh6/show/)。\n\n最后一个要注意的点是，如果删除的特性有默认值，则调用`removeAttribute`删除该特性之后会把该特性重置成该特性的默认值，如以下代码：\n","summaryHtmlText":"<p>今天是Attribute系列的最后一篇。前面两篇讨论了如何获取、增加、修改一个DOM元素的特性。今天轻松一下，把删除讨论完。</p>\n<blockquote>\n<p>removeAttribute removes an attribute from the specified element.</p>\n</blockquote>\n<p><code>removeAttribute</code>的功能很简单，就是删除指定名称的特性。该方法只接受一个参数，就是指定特性名称的字符串。以下是一个使用的例子：</p>\n<pre><code>document.getElementById(&quot;div1&quot;).removeAttribute(&quot;align&quot;);\n</code></pre><p>昨天也讨论过类似的例子，就是如果需要删除一个特性的话，使用<code>removeAttribute</code>比使用<code>setAttribute</code>把该特性置成<code>null</code>或者空字符串要好。尝试删除一个不存在的特性不会抛出任何异常。</p>\n<p>既然用<code>setAttribute</code>可以为一个DOM元素绑定事件处理程序，那么对应使用<code>removeAttribute</code>也可以解除事件绑定，如以下代码：</p>\n<pre><code>&lt;div id=&quot;test&quot; onclick=&quot;alert(1);&quot;&gt;Test&lt;/div&gt;\n</code></pre><p>JavaScript：</p>\n<pre><code>document.getElementById(&quot;test&quot;).removeAttribute(&quot;onclick&quot;);\n</code></pre><p>单击该<code>div</code>元素不会弹出消息框。可惜IE7又再一次华丽地失败了。例子<a href=\"http://jsfiddle.net/PnKh6/show/\">参考这里</a>。</p>\n<p>最后一个要注意的点是，如果删除的特性有默认值，则调用<code>removeAttribute</code>删除该特性之后会把该特性重置成该特性的默认值，如以下代码：</p>\n"}