{"year":"2013","month":"09","day":"09","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/09/09/css-expression.html","fileName":"css-expression","layout":"post","title":"CSS表达式","description":"","tags":["css"],"markdownText":"\n\n\n对于一些呈现型的网站（例如门户、资讯类的），在国内还是必须照顾一大部分使用IE6的用户。这样导致我们的代码为了兼容很多IE6，需要在IE6上模拟一些高级浏览器的功能，例如`fixed`的CSS样式，还有`max-width`等。在不希望使用JavaScript的时候，css表达式还是可以作为一个不错的向下兼容的方案的。\n\nCSS表达式，严格来说应该是CSS中的动态属性，在MSDN中的定义是这样的：\n\n    Using the power of dynamic properties, it is now possible to declare property values not only as constants, but also as formulas. \n\n使用CSS表达式，使得CSS样式中的值不仅仅只有常量，如`10px`、`100%`等，还可以是变量、可以通过N条语句计算出来的值。由于IE8及更高版本已经完全支持CSS 2.1的全部功能，像上述说的`fixed`和`max-width`等都可以直接使用CSS来实现了。而其他更具体的功能还是推荐使用JavaScript去完成。\n\n### 接口\n____\n\n1. `getExpression`，获取CSS表达式。\n2. `recalc`，强制刷新CSS表达式的值。\n3. `removeExpression`，删除CSS表达式。\n4. `setExpression`，设置CSS表达式。\n\n可以在JavaScript脚本中使用以上的命令操作CSS表达式，例如：\n\n    oDiv.style.setExpression(\"left\",\n      \"document.body.clientWidth/2 - oDiv.offsetWidth/2\"\n    );\n\n    oDiv.style.setExpression(\"top\",\n      \"document.body.clientHeight/2 - oDiv.offsetHeight/2\"\n    );\n    document.recalc(true);\n\n也可以在`style`特性的内联样式、`style`标签块、甚至是外部CSS样式表中书写CSS表达式，例如：\n\n    <DIV ID=\"oDiv\"\n    STYLE=\"background-color: #CFCFCF; position: absolute; \n         left:expression(document.body.clientWidth/2-oDiv.offsetWidth/2);\n         top:expression(document.body.clientHeight/2-oDiv.offsetHeight/2)\">\n    Example DIV\n    </DIV>\n\n以上的代码实现了一个无论怎么`resize`一个浏览器窗口，该`div`始终保持居中的这么一个功能。注意哦，没用任何一段“脚本”。\n\n### 问题\n____\n\n既然CSS表达式可以省去一大堆代码，例如上例中绑定`window`的`resize`事件等代码，那为什么现代的CSS教程、书籍、规范都不约而同的要我们不要去使用CSS表达式呢？\n\n其中一个最重要的原因是它不是标准的CSS实现，在现代的浏览器中是不支持的。\n\n另外一个重要的原因，就是性能问题。有没有考虑过，这些写在CSS样式中的代码什么时候会被执行？这个是摘自YUI的一篇文档的翻译：\n\n> 表达式的问题就在于它的计算频率要比我们想象的多。不仅仅是在页面显示和缩放时，就是在页面滚动、乃至移动鼠标时都会要重新计算一次。给CSS表达式增加一个计数器可以跟踪表达式的计算频率。在页面中随便移动鼠标都可以轻松达到10000次以上的计算量。\n\n这里有一个[例子](http://www.17css.com/works/09/03/CSS%20Expressions1.html)供大家参考。当鼠标随便移动几下，在IE6上CSS表达式就被执行超过1000次。就算执行的逻辑十分简单，随着执行的次数增大，性能消耗也是相当高的，尤其是IE6这些蹩脚的浏览器。\n\n### 总结\n____\n\n虽然CSS表达式有兼容性和性能等问题，使用它有时候对代码的简洁以及可靠性也是有一定帮助的。例如解决IE6上`fixed`的方案，使用JavaScript脚本就不能完美解决（会造成`fixed`元素的抖动），而使用CSS表达式就可以比较完美地解决。\n\n请记住，只能在IE6上使用对应的CSS表达式哦亲！这时候条件注释或者是对应的CSS hack就要出场啦！\n","htmlText":"<p>对于一些呈现型的网站（例如门户、资讯类的），在国内还是必须照顾一大部分使用IE6的用户。这样导致我们的代码为了兼容很多IE6，需要在IE6上模拟一些高级浏览器的功能，例如<code>fixed</code>的CSS样式，还有<code>max-width</code>等。在不希望使用JavaScript的时候，css表达式还是可以作为一个不错的向下兼容的方案的。</p>\n<p>CSS表达式，严格来说应该是CSS中的动态属性，在MSDN中的定义是这样的：</p>\n<pre><code>Using the power of dynamic properties, it is now possible to declare property values not only as constants, but also as formulas. \n</code></pre><p>使用CSS表达式，使得CSS样式中的值不仅仅只有常量，如<code>10px</code>、<code>100%</code>等，还可以是变量、可以通过N条语句计算出来的值。由于IE8及更高版本已经完全支持CSS 2.1的全部功能，像上述说的<code>fixed</code>和<code>max-width</code>等都可以直接使用CSS来实现了。而其他更具体的功能还是推荐使用JavaScript去完成。</p>\n<h3 id=\"-\">接口</h3>\n<hr>\n<ol>\n<li><code>getExpression</code>，获取CSS表达式。</li>\n<li><code>recalc</code>，强制刷新CSS表达式的值。</li>\n<li><code>removeExpression</code>，删除CSS表达式。</li>\n<li><code>setExpression</code>，设置CSS表达式。</li>\n</ol>\n<p>可以在JavaScript脚本中使用以上的命令操作CSS表达式，例如：</p>\n<pre><code>oDiv.style.setExpression(&quot;left&quot;,\n  &quot;document.body.clientWidth/2 - oDiv.offsetWidth/2&quot;\n);\n\noDiv.style.setExpression(&quot;top&quot;,\n  &quot;document.body.clientHeight/2 - oDiv.offsetHeight/2&quot;\n);\ndocument.recalc(true);\n</code></pre><p>也可以在<code>style</code>特性的内联样式、<code>style</code>标签块、甚至是外部CSS样式表中书写CSS表达式，例如：</p>\n<pre><code>&lt;DIV ID=&quot;oDiv&quot;\nSTYLE=&quot;background-color: #CFCFCF; position: absolute; \n     left:expression(document.body.clientWidth/2-oDiv.offsetWidth/2);\n     top:expression(document.body.clientHeight/2-oDiv.offsetHeight/2)&quot;&gt;\nExample DIV\n&lt;/DIV&gt;\n</code></pre><p>以上的代码实现了一个无论怎么<code>resize</code>一个浏览器窗口，该<code>div</code>始终保持居中的这么一个功能。注意哦，没用任何一段“脚本”。</p>\n<h3 id=\"-\">问题</h3>\n<hr>\n<p>既然CSS表达式可以省去一大堆代码，例如上例中绑定<code>window</code>的<code>resize</code>事件等代码，那为什么现代的CSS教程、书籍、规范都不约而同的要我们不要去使用CSS表达式呢？</p>\n<p>其中一个最重要的原因是它不是标准的CSS实现，在现代的浏览器中是不支持的。</p>\n<p>另外一个重要的原因，就是性能问题。有没有考虑过，这些写在CSS样式中的代码什么时候会被执行？这个是摘自YUI的一篇文档的翻译：</p>\n<blockquote>\n<p>表达式的问题就在于它的计算频率要比我们想象的多。不仅仅是在页面显示和缩放时，就是在页面滚动、乃至移动鼠标时都会要重新计算一次。给CSS表达式增加一个计数器可以跟踪表达式的计算频率。在页面中随便移动鼠标都可以轻松达到10000次以上的计算量。</p>\n</blockquote>\n<p>这里有一个<a href=\"http://www.17css.com/works/09/03/CSS%20Expressions1.html\">例子</a>供大家参考。当鼠标随便移动几下，在IE6上CSS表达式就被执行超过1000次。就算执行的逻辑十分简单，随着执行的次数增大，性能消耗也是相当高的，尤其是IE6这些蹩脚的浏览器。</p>\n<h3 id=\"-\">总结</h3>\n<hr>\n<p>虽然CSS表达式有兼容性和性能等问题，使用它有时候对代码的简洁以及可靠性也是有一定帮助的。例如解决IE6上<code>fixed</code>的方案，使用JavaScript脚本就不能完美解决（会造成<code>fixed</code>元素的抖动），而使用CSS表达式就可以比较完美地解决。</p>\n<p>请记住，只能在IE6上使用对应的CSS表达式哦亲！这时候条件注释或者是对应的CSS hack就要出场啦！</p>\n","summaryMarkdownText":"\n\n\n对于一些呈现型的网站（例如门户、资讯类的），在国内还是必须照顾一大部分使用IE6的用户。这样导致我们的代码为了兼容很多IE6，需要在IE6上模拟一些高级浏览器的功能，例如`fixed`的CSS样式，还有`max-width`等。在不希望使用JavaScript的时候，css表达式还是可以作为一个不错的向下兼容的方案的。\n\nCSS表达式，严格来说应该是CSS中的动态属性，在MSDN中的定义是这样的：\n\n    Using the power of dynamic properties, it is now possible to declare property values not only as constants, but also as formulas. \n\n使用CSS表达式，使得CSS样式中的值不仅仅只有常量，如`10px`、`100%`等，还可以是变量、可以通过N条语句计算出来的值。由于IE8及更高版本已经完全支持CSS 2.1的全部功能，像上述说的`fixed`和`max-width`等都可以直接使用CSS来实现了。而其他更具体的功能还是推荐使用JavaScript去完成。\n\n### 接口\n____\n\n1. `getExpression`，获取CSS表达式。\n2. `recalc`，强制刷新CSS表达式的值。\n3. `removeExpression`，删除CSS表达式。\n4. `setExpression`，设置CSS表达式。\n\n可以在JavaScript脚本中使用以上的命令操作CSS表达式，例如：\n\n    oDiv.style.setExpression(\"left\",\n      \"document.body.clientWidth/2 - oDiv.offsetWidth/2\"\n    );\n","summaryHtmlText":"<p>对于一些呈现型的网站（例如门户、资讯类的），在国内还是必须照顾一大部分使用IE6的用户。这样导致我们的代码为了兼容很多IE6，需要在IE6上模拟一些高级浏览器的功能，例如<code>fixed</code>的CSS样式，还有<code>max-width</code>等。在不希望使用JavaScript的时候，css表达式还是可以作为一个不错的向下兼容的方案的。</p>\n<p>CSS表达式，严格来说应该是CSS中的动态属性，在MSDN中的定义是这样的：</p>\n<pre><code>Using the power of dynamic properties, it is now possible to declare property values not only as constants, but also as formulas. \n</code></pre><p>使用CSS表达式，使得CSS样式中的值不仅仅只有常量，如<code>10px</code>、<code>100%</code>等，还可以是变量、可以通过N条语句计算出来的值。由于IE8及更高版本已经完全支持CSS 2.1的全部功能，像上述说的<code>fixed</code>和<code>max-width</code>等都可以直接使用CSS来实现了。而其他更具体的功能还是推荐使用JavaScript去完成。</p>\n<h3 id=\"-\">接口</h3>\n<hr>\n<ol>\n<li><code>getExpression</code>，获取CSS表达式。</li>\n<li><code>recalc</code>，强制刷新CSS表达式的值。</li>\n<li><code>removeExpression</code>，删除CSS表达式。</li>\n<li><code>setExpression</code>，设置CSS表达式。</li>\n</ol>\n<p>可以在JavaScript脚本中使用以上的命令操作CSS表达式，例如：</p>\n<pre><code>oDiv.style.setExpression(&quot;left&quot;,\n  &quot;document.body.clientWidth/2 - oDiv.offsetWidth/2&quot;\n);\n</code></pre>"}