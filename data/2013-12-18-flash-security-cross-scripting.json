{"year":"2013","month":"12","day":"18","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/12/18/flash-security-cross-scripting.html","fileName":"flash-security-cross-scripting","layout":"post","title":"Flash安全性之跨脚本访问","description":"","tags":["Flash"],"markdownText":"\n\n\n如果使用AS3.0编写的两个`swf`文件来自同一个域，那么它们是可以互相访问和修改另一个文件的变量、对象、属性和方法。反之则视为是跨脚本访问。\n\n在默认情况下，Flash Player不允许这种跨域的脚本访问。通过调用`Security.allowDomain`，可以授予其他域的`swf`文件编写其脚本的权限。例如：\n\n    Security.allowDomain(\"siteA.com\");\n\n这样，这个`swf`文件就可以被`siteA.com`中的`swf`访问其变量、对象、属性和方法。\n\n注意，调用`Security.allowDomain`是不对称的，这个`swf`文件想要访问`siteA.com`中的`swf`文件需要在`siteA.com`的`swf`文件中也调用`allowDomain`。\n\n### Stage安全性\n\n`stage`对象的所有者是地一个加载的`swf`文件。`stage`对象的一些属性和方法只能用于在所有者同一安全沙箱中的`swf`文件，例如`stage.align`或者`stage.addChild`等。\n\n在所这者的`swf`文件中调用`allowDomain`可以授予其他安全沙箱中的`swf`访问`stage`的这些属性和方法。\n\n### 遍历显示列表\n\n一个`swf`文件能够访问从其他沙箱中加载的显示对象也受到一定的限制。如果需要能访问到其他沙箱中的`swf`文件，需要在目标文件中调用`allowDomain`授予相应的权限。\n\n### 事件安全性\n\n与显示列表相关的事件具有一定的安全性限制。如果父对象和源显示对象位于不同的安全沙箱，则不或阶段和冒泡阶段在父对象的下方停止，除非两个对象的所有者是互相信任的，例如通过调用`allowDomain`。\n","htmlText":"<p>如果使用AS3.0编写的两个<code>swf</code>文件来自同一个域，那么它们是可以互相访问和修改另一个文件的变量、对象、属性和方法。反之则视为是跨脚本访问。</p>\n<p>在默认情况下，Flash Player不允许这种跨域的脚本访问。通过调用<code>Security.allowDomain</code>，可以授予其他域的<code>swf</code>文件编写其脚本的权限。例如：</p>\n<pre><code>Security.allowDomain(&quot;siteA.com&quot;);\n</code></pre><p>这样，这个<code>swf</code>文件就可以被<code>siteA.com</code>中的<code>swf</code>访问其变量、对象、属性和方法。</p>\n<p>注意，调用<code>Security.allowDomain</code>是不对称的，这个<code>swf</code>文件想要访问<code>siteA.com</code>中的<code>swf</code>文件需要在<code>siteA.com</code>的<code>swf</code>文件中也调用<code>allowDomain</code>。</p>\n<h3 id=\"stage-\">Stage安全性</h3>\n<p><code>stage</code>对象的所有者是地一个加载的<code>swf</code>文件。<code>stage</code>对象的一些属性和方法只能用于在所有者同一安全沙箱中的<code>swf</code>文件，例如<code>stage.align</code>或者<code>stage.addChild</code>等。</p>\n<p>在所这者的<code>swf</code>文件中调用<code>allowDomain</code>可以授予其他安全沙箱中的<code>swf</code>访问<code>stage</code>的这些属性和方法。</p>\n<h3 id=\"-\">遍历显示列表</h3>\n<p>一个<code>swf</code>文件能够访问从其他沙箱中加载的显示对象也受到一定的限制。如果需要能访问到其他沙箱中的<code>swf</code>文件，需要在目标文件中调用<code>allowDomain</code>授予相应的权限。</p>\n<h3 id=\"-\">事件安全性</h3>\n<p>与显示列表相关的事件具有一定的安全性限制。如果父对象和源显示对象位于不同的安全沙箱，则不或阶段和冒泡阶段在父对象的下方停止，除非两个对象的所有者是互相信任的，例如通过调用<code>allowDomain</code>。</p>\n","summaryMarkdownText":"\n\n\n如果使用AS3.0编写的两个`swf`文件来自同一个域，那么它们是可以互相访问和修改另一个文件的变量、对象、属性和方法。反之则视为是跨脚本访问。\n\n在默认情况下，Flash Player不允许这种跨域的脚本访问。通过调用`Security.allowDomain`，可以授予其他域的`swf`文件编写其脚本的权限。例如：\n\n    Security.allowDomain(\"siteA.com\");\n\n这样，这个`swf`文件就可以被`siteA.com`中的`swf`访问其变量、对象、属性和方法。\n\n注意，调用`Security.allowDomain`是不对称的，这个`swf`文件想要访问`siteA.com`中的`swf`文件需要在`siteA.com`的`swf`文件中也调用`allowDomain`。\n\n### Stage安全性\n\n`stage`对象的所有者是地一个加载的`swf`文件。`stage`对象的一些属性和方法只能用于在所有者同一安全沙箱中的`swf`文件，例如`stage.align`或者`stage.addChild`等。\n\n在所这者的`swf`文件中调用`allowDomain`可以授予其他安全沙箱中的`swf`访问`stage`的这些属性和方法。\n\n### 遍历显示列表\n\n一个`swf`文件能够访问从其他沙箱中加载的显示对象也受到一定的限制。如果需要能访问到其他沙箱中的`swf`文件，需要在目标文件中调用`allowDomain`授予相应的权限。\n\n### 事件安全性\n","summaryHtmlText":"<p>如果使用AS3.0编写的两个<code>swf</code>文件来自同一个域，那么它们是可以互相访问和修改另一个文件的变量、对象、属性和方法。反之则视为是跨脚本访问。</p>\n<p>在默认情况下，Flash Player不允许这种跨域的脚本访问。通过调用<code>Security.allowDomain</code>，可以授予其他域的<code>swf</code>文件编写其脚本的权限。例如：</p>\n<pre><code>Security.allowDomain(&quot;siteA.com&quot;);\n</code></pre><p>这样，这个<code>swf</code>文件就可以被<code>siteA.com</code>中的<code>swf</code>访问其变量、对象、属性和方法。</p>\n<p>注意，调用<code>Security.allowDomain</code>是不对称的，这个<code>swf</code>文件想要访问<code>siteA.com</code>中的<code>swf</code>文件需要在<code>siteA.com</code>的<code>swf</code>文件中也调用<code>allowDomain</code>。</p>\n<h3 id=\"stage-\">Stage安全性</h3>\n<p><code>stage</code>对象的所有者是地一个加载的<code>swf</code>文件。<code>stage</code>对象的一些属性和方法只能用于在所有者同一安全沙箱中的<code>swf</code>文件，例如<code>stage.align</code>或者<code>stage.addChild</code>等。</p>\n<p>在所这者的<code>swf</code>文件中调用<code>allowDomain</code>可以授予其他安全沙箱中的<code>swf</code>访问<code>stage</code>的这些属性和方法。</p>\n<h3 id=\"-\">遍历显示列表</h3>\n<p>一个<code>swf</code>文件能够访问从其他沙箱中加载的显示对象也受到一定的限制。如果需要能访问到其他沙箱中的<code>swf</code>文件，需要在目标文件中调用<code>allowDomain</code>授予相应的权限。</p>\n<h3 id=\"-\">事件安全性</h3>\n"}