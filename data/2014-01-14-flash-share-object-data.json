{"year":"2014","month":"01","day":"14","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2014/01/14/flash-share-object-data.html","fileName":"flash-share-object-data","layout":"post","title":"使用ShareObject中的data","description":"","tags":["Flash"],"markdownText":"\n\n\n昨天讨论了Flash中的“cookie”，`ShareObject`的简单使用方式，今天来讨论一下如何读写这个“cookie“中的数据。\n\n通常，我们会使用`ShareObject`的静态方法`getLocal`获取一个本地的共享对象：\n\n    var test:SharedObject = SharedObject.getLocal(\"test\");\n\n然后我们可以访问`test`的`data`属性，对这个共享对象的数据进行读写操作。注意，这个`data`本身是只读的，所以以下的代码是无效的：\n\n    test.data = \"someValue\";\n\n我们可以直接在`data`上存储一些数据，可以是任何ActionScript或者JavaScript类型的对象（数组、数字、布尔值、对象等）：\n\n    test.data.number = 1;\n    test.data.string = \"String\";\n    test.data.obj = {\"a\": 1, \"b\": \"string\"};\n    test.data.arr = [2, \"a\"];\n    test.data.sprite = new Sprite();\n\n当程序关闭的时候，这些数据会保存到本地文件中，下次只要使用同样名称的共享对象就可以把这些数据读取回来。\n\n要删除共享对象的数据，要使用`delete`运算符来删除：\n\n    delete test.data.number;\n\n而不能把这个值设置成`null`或者`undefined`，设置成这两个值不会删除这个属性。\n","htmlText":"<p>昨天讨论了Flash中的“cookie”，<code>ShareObject</code>的简单使用方式，今天来讨论一下如何读写这个“cookie“中的数据。</p>\n<p>通常，我们会使用<code>ShareObject</code>的静态方法<code>getLocal</code>获取一个本地的共享对象：</p>\n<pre><code>var test:SharedObject = SharedObject.getLocal(&quot;test&quot;);\n</code></pre><p>然后我们可以访问<code>test</code>的<code>data</code>属性，对这个共享对象的数据进行读写操作。注意，这个<code>data</code>本身是只读的，所以以下的代码是无效的：</p>\n<pre><code>test.data = &quot;someValue&quot;;\n</code></pre><p>我们可以直接在<code>data</code>上存储一些数据，可以是任何ActionScript或者JavaScript类型的对象（数组、数字、布尔值、对象等）：</p>\n<pre><code>test.data.number = 1;\ntest.data.string = &quot;String&quot;;\ntest.data.obj = {&quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;};\ntest.data.arr = [2, &quot;a&quot;];\ntest.data.sprite = new Sprite();\n</code></pre><p>当程序关闭的时候，这些数据会保存到本地文件中，下次只要使用同样名称的共享对象就可以把这些数据读取回来。</p>\n<p>要删除共享对象的数据，要使用<code>delete</code>运算符来删除：</p>\n<pre><code>delete test.data.number;\n</code></pre><p>而不能把这个值设置成<code>null</code>或者<code>undefined</code>，设置成这两个值不会删除这个属性。</p>\n","summaryMarkdownText":"\n\n\n昨天讨论了Flash中的“cookie”，`ShareObject`的简单使用方式，今天来讨论一下如何读写这个“cookie“中的数据。\n\n通常，我们会使用`ShareObject`的静态方法`getLocal`获取一个本地的共享对象：\n\n    var test:SharedObject = SharedObject.getLocal(\"test\");\n\n然后我们可以访问`test`的`data`属性，对这个共享对象的数据进行读写操作。注意，这个`data`本身是只读的，所以以下的代码是无效的：\n\n    test.data = \"someValue\";\n\n我们可以直接在`data`上存储一些数据，可以是任何ActionScript或者JavaScript类型的对象（数组、数字、布尔值、对象等）：\n\n    test.data.number = 1;\n    test.data.string = \"String\";\n    test.data.obj = {\"a\": 1, \"b\": \"string\"};\n    test.data.arr = [2, \"a\"];\n    test.data.sprite = new Sprite();\n\n当程序关闭的时候，这些数据会保存到本地文件中，下次只要使用同样名称的共享对象就可以把这些数据读取回来。\n\n要删除共享对象的数据，要使用`delete`运算符来删除：\n","summaryHtmlText":"<p>昨天讨论了Flash中的“cookie”，<code>ShareObject</code>的简单使用方式，今天来讨论一下如何读写这个“cookie“中的数据。</p>\n<p>通常，我们会使用<code>ShareObject</code>的静态方法<code>getLocal</code>获取一个本地的共享对象：</p>\n<pre><code>var test:SharedObject = SharedObject.getLocal(&quot;test&quot;);\n</code></pre><p>然后我们可以访问<code>test</code>的<code>data</code>属性，对这个共享对象的数据进行读写操作。注意，这个<code>data</code>本身是只读的，所以以下的代码是无效的：</p>\n<pre><code>test.data = &quot;someValue&quot;;\n</code></pre><p>我们可以直接在<code>data</code>上存储一些数据，可以是任何ActionScript或者JavaScript类型的对象（数组、数字、布尔值、对象等）：</p>\n<pre><code>test.data.number = 1;\ntest.data.string = &quot;String&quot;;\ntest.data.obj = {&quot;a&quot;: 1, &quot;b&quot;: &quot;string&quot;};\ntest.data.arr = [2, &quot;a&quot;];\ntest.data.sprite = new Sprite();\n</code></pre><p>当程序关闭的时候，这些数据会保存到本地文件中，下次只要使用同样名称的共享对象就可以把这些数据读取回来。</p>\n<p>要删除共享对象的数据，要使用<code>delete</code>运算符来删除：</p>\n"}