{"year":"2013","month":"10","day":"22","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/10/22/using-html5-audio-and-video-2.html","fileName":"using-html5-audio-and-video-2","layout":"post","title":"使用HTML5的audio和video（二）","description":"","tags":["html5"],"markdownText":"\n\n\n昨天讨论了如何加入一个媒体、如何进行简单控制等内容。今天继续来看一下关于html5内建媒体`audio`和`vedio`还有什么其他功能。\n\n除了控制媒体的播放、暂停和音量，通过`currentTime`我们还可以定位到具体的某个时间点。\n\n先通过`seekable`这个属性去获取媒体的范围：\n\n    var mediaElement = \n      document.getElementById('mediaElementID');\n    mediaElement.seekable.start();\n    mediaElement.seekable.end();\n\n其中`start`和`end`方法会返回整个媒体的开始和结束，单位是秒。然后我们就可以设置`currentTime`让媒体定位到指定的时间点：\n\n    mediaElement.currentTime = 122;\n\n除了以上的方法，我们还可以通过DOM上的`played`属性去获取媒体已经播放过的时间：\n\n    mediaElement.played.end();\n\n全部都以秒为单位。\n\n我们还可以指定媒体的播放范围。在URL后增加`#t=[starttime][,endtime]`参数即可。里面的参数可以是秒，也可以是类似`2:05:01`这样的字符串：\n\n    <video src=\"http://path/to/video#t=10,20\"></video>\n\n注意，这个功能只有基于Gecko的浏览器才实现了哦！\n\n由于不是所有的浏览器都支持内建的媒体（例如老版本的IE），如果我们也要支持这些浏览器，必须使用一个兼容的方案。其中最通用的应该就是使用Flash了：\n\n    <video src=\"video.ogv\" controls>\n      <object data=\"flvplayer.swf\" type=\"application/x-shockwave-flash\">\n        <param value=\"flvplayer.swf\" name=\"movie\"/>\n      </object>\n    </video>\n\n最后谈论一下错误处理。最常见的错误应该是浏览器不支持播放制定的媒体，例如在FireFox上播放MP4。现在的实现是，`video`本身不抛出错误，而当特定的`soruce`不能播放的时候，在该`source`元素上面抛出错误。\n\n所以现在只能够通过判断最后一个`source`是否播放成功来判断这个`video`是否能成功播放：\n\n    var v = document.querySelector('video'),\n        sources = v.querySelectorAll('source'),\n        lastsource = sources[sources.length-1];\n    lastsource.addEventListener('error', function(ev) { ... });\n","htmlText":"<p>昨天讨论了如何加入一个媒体、如何进行简单控制等内容。今天继续来看一下关于html5内建媒体<code>audio</code>和<code>vedio</code>还有什么其他功能。</p>\n<p>除了控制媒体的播放、暂停和音量，通过<code>currentTime</code>我们还可以定位到具体的某个时间点。</p>\n<p>先通过<code>seekable</code>这个属性去获取媒体的范围：</p>\n<pre><code>var mediaElement = \n  document.getElementById(&#39;mediaElementID&#39;);\nmediaElement.seekable.start();\nmediaElement.seekable.end();\n</code></pre><p>其中<code>start</code>和<code>end</code>方法会返回整个媒体的开始和结束，单位是秒。然后我们就可以设置<code>currentTime</code>让媒体定位到指定的时间点：</p>\n<pre><code>mediaElement.currentTime = 122;\n</code></pre><p>除了以上的方法，我们还可以通过DOM上的<code>played</code>属性去获取媒体已经播放过的时间：</p>\n<pre><code>mediaElement.played.end();\n</code></pre><p>全部都以秒为单位。</p>\n<p>我们还可以指定媒体的播放范围。在URL后增加<code>#t=[starttime][,endtime]</code>参数即可。里面的参数可以是秒，也可以是类似<code>2:05:01</code>这样的字符串：</p>\n<pre><code>&lt;video src=&quot;http://path/to/video#t=10,20&quot;&gt;&lt;/video&gt;\n</code></pre><p>注意，这个功能只有基于Gecko的浏览器才实现了哦！</p>\n<p>由于不是所有的浏览器都支持内建的媒体（例如老版本的IE），如果我们也要支持这些浏览器，必须使用一个兼容的方案。其中最通用的应该就是使用Flash了：</p>\n<pre><code>&lt;video src=&quot;video.ogv&quot; controls&gt;\n  &lt;object data=&quot;flvplayer.swf&quot; type=&quot;application/x-shockwave-flash&quot;&gt;\n    &lt;param value=&quot;flvplayer.swf&quot; name=&quot;movie&quot;/&gt;\n  &lt;/object&gt;\n&lt;/video&gt;\n</code></pre><p>最后谈论一下错误处理。最常见的错误应该是浏览器不支持播放制定的媒体，例如在FireFox上播放MP4。现在的实现是，<code>video</code>本身不抛出错误，而当特定的<code>soruce</code>不能播放的时候，在该<code>source</code>元素上面抛出错误。</p>\n<p>所以现在只能够通过判断最后一个<code>source</code>是否播放成功来判断这个<code>video</code>是否能成功播放：</p>\n<pre><code>var v = document.querySelector(&#39;video&#39;),\n    sources = v.querySelectorAll(&#39;source&#39;),\n    lastsource = sources[sources.length-1];\nlastsource.addEventListener(&#39;error&#39;, function(ev) { ... });\n</code></pre>","summaryMarkdownText":"\n\n\n昨天讨论了如何加入一个媒体、如何进行简单控制等内容。今天继续来看一下关于html5内建媒体`audio`和`vedio`还有什么其他功能。\n\n除了控制媒体的播放、暂停和音量，通过`currentTime`我们还可以定位到具体的某个时间点。\n\n先通过`seekable`这个属性去获取媒体的范围：\n\n    var mediaElement = \n      document.getElementById('mediaElementID');\n    mediaElement.seekable.start();\n    mediaElement.seekable.end();\n\n其中`start`和`end`方法会返回整个媒体的开始和结束，单位是秒。然后我们就可以设置`currentTime`让媒体定位到指定的时间点：\n\n    mediaElement.currentTime = 122;\n\n除了以上的方法，我们还可以通过DOM上的`played`属性去获取媒体已经播放过的时间：\n\n    mediaElement.played.end();\n\n全部都以秒为单位。\n\n我们还可以指定媒体的播放范围。在URL后增加`#t=[starttime][,endtime]`参数即可。里面的参数可以是秒，也可以是类似`2:05:01`这样的字符串：","summaryHtmlText":"<p>昨天讨论了如何加入一个媒体、如何进行简单控制等内容。今天继续来看一下关于html5内建媒体<code>audio</code>和<code>vedio</code>还有什么其他功能。</p>\n<p>除了控制媒体的播放、暂停和音量，通过<code>currentTime</code>我们还可以定位到具体的某个时间点。</p>\n<p>先通过<code>seekable</code>这个属性去获取媒体的范围：</p>\n<pre><code>var mediaElement = \n  document.getElementById(&#39;mediaElementID&#39;);\nmediaElement.seekable.start();\nmediaElement.seekable.end();\n</code></pre><p>其中<code>start</code>和<code>end</code>方法会返回整个媒体的开始和结束，单位是秒。然后我们就可以设置<code>currentTime</code>让媒体定位到指定的时间点：</p>\n<pre><code>mediaElement.currentTime = 122;\n</code></pre><p>除了以上的方法，我们还可以通过DOM上的<code>played</code>属性去获取媒体已经播放过的时间：</p>\n<pre><code>mediaElement.played.end();\n</code></pre><p>全部都以秒为单位。</p>\n<p>我们还可以指定媒体的播放范围。在URL后增加<code>#t=[starttime][,endtime]</code>参数即可。里面的参数可以是秒，也可以是类似<code>2:05:01</code>这样的字符串：</p>\n"}