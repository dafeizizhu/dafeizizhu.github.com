{"year":"2013","month":"08","day":"29","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/08/29/jquery-html.html","fileName":"jquery-html","layout":"post","title":"jQuery扫盲之.html","description":"","tags":["JavaScript","jQuery"],"markdownText":"\n\n\n今天工作中遇到了一个小问题：使用`.html`和`.append`往一个元素内部添加内容的时候，在IE7、IE8下有两种不同的表现：用`.append`往元素内部添加特定的HTML字符串，在IE7、8下面是空白的；用`.html`刷新元素内部的HTML，虽然显示的样式和结构有点异常，但是大部分元素还是正常显示出来了。原因是那段HTML字符串里面有反引号，而且是当反引号成对而且是特定结构的时候才会导致页面空白。到现在还没有查出为什么会有这个问题，今天先来看看`.html`的使用方法，往后会继续深入`.html`的源码、`append`的用法与源码以及两者的区别。\n\n> Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.\n\n`.html`有两种使用方法，分别对应`getter`和`setter`，它们按是否传入参数区分。\n\n### .html()\n____\n\n当没有传入任何参数的时候，`.html`以`getter`方式调用，返回匹配元素的内部HTML字符串。注意，**如果该jQuery对象包含的元素个数大于1，调用`.html`方法只会返回第一个元素的内部HTML字符串**。\n\n返回的字符串未必跟HTML中的代码完全一致，包括HTML标签的大小写或者属性上面的引号等等。\n\n### .html(HTMLString)或者.html(function(index, oldhtml))\n____\n\n当传入HTML字符串或者传入一个回调函数的时候，`.html`以`setter`方式调用，设置jQuery对象中所有元素内部的HTML。传入字符串的时候，会直接替换元素内部的HTML字符串；传入回调函数时，会使用回调函数返回的字符串替换元素内部的HTML字符串。\n\n回调函数接受两个参数，一个是元素的在jQuery对象中的索引，第二个是元素原来的内部HTML字符串。注意，**在调用回调函数之前元素的内部字符串会先被置空**。\n\n再替换完元素内部的HTML字符串之后，原来内部元素的一些`data`还有绑定的事件处理程序都会被删除哦。\n\n这里还有些小细节，在jQuery的文档里面特别指出的：\n\n1. 在IE8之前的版本，IE会自动把`href`属性转成绝对路径。\n2. 在IE9之前的版本，有可能不能正确处理HTML5的相关元素，请使用[html5shiv](http://code.google.com/p/html5shiv/)。\n\n最后，jQuery建议为了防止某些浏览器（特指IE9以及之前的版本），最好先调用`.empty`再调用`.html`，防止产生一些孤立的文本节点，如：\n\n    $(\"#id\").empty().html(htmlString);\n","htmlText":"<p>今天工作中遇到了一个小问题：使用<code>.html</code>和<code>.append</code>往一个元素内部添加内容的时候，在IE7、IE8下有两种不同的表现：用<code>.append</code>往元素内部添加特定的HTML字符串，在IE7、8下面是空白的；用<code>.html</code>刷新元素内部的HTML，虽然显示的样式和结构有点异常，但是大部分元素还是正常显示出来了。原因是那段HTML字符串里面有反引号，而且是当反引号成对而且是特定结构的时候才会导致页面空白。到现在还没有查出为什么会有这个问题，今天先来看看<code>.html</code>的使用方法，往后会继续深入<code>.html</code>的源码、<code>append</code>的用法与源码以及两者的区别。</p>\n<blockquote>\n<p>Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.</p>\n</blockquote>\n<p><code>.html</code>有两种使用方法，分别对应<code>getter</code>和<code>setter</code>，它们按是否传入参数区分。</p>\n<h3 id=\"-html-\">.html()</h3>\n<hr>\n<p>当没有传入任何参数的时候，<code>.html</code>以<code>getter</code>方式调用，返回匹配元素的内部HTML字符串。注意，<strong>如果该jQuery对象包含的元素个数大于1，调用<code>.html</code>方法只会返回第一个元素的内部HTML字符串</strong>。</p>\n<p>返回的字符串未必跟HTML中的代码完全一致，包括HTML标签的大小写或者属性上面的引号等等。</p>\n<h3 id=\"-html-htmlstring-html-function-index-oldhtml-\">.html(HTMLString)或者.html(function(index, oldhtml))</h3>\n<hr>\n<p>当传入HTML字符串或者传入一个回调函数的时候，<code>.html</code>以<code>setter</code>方式调用，设置jQuery对象中所有元素内部的HTML。传入字符串的时候，会直接替换元素内部的HTML字符串；传入回调函数时，会使用回调函数返回的字符串替换元素内部的HTML字符串。</p>\n<p>回调函数接受两个参数，一个是元素的在jQuery对象中的索引，第二个是元素原来的内部HTML字符串。注意，<strong>在调用回调函数之前元素的内部字符串会先被置空</strong>。</p>\n<p>再替换完元素内部的HTML字符串之后，原来内部元素的一些<code>data</code>还有绑定的事件处理程序都会被删除哦。</p>\n<p>这里还有些小细节，在jQuery的文档里面特别指出的：</p>\n<ol>\n<li>在IE8之前的版本，IE会自动把<code>href</code>属性转成绝对路径。</li>\n<li>在IE9之前的版本，有可能不能正确处理HTML5的相关元素，请使用<a href=\"http://code.google.com/p/html5shiv/\">html5shiv</a>。</li>\n</ol>\n<p>最后，jQuery建议为了防止某些浏览器（特指IE9以及之前的版本），最好先调用<code>.empty</code>再调用<code>.html</code>，防止产生一些孤立的文本节点，如：</p>\n<pre><code>$(&quot;#id&quot;).empty().html(htmlString);\n</code></pre>","summaryMarkdownText":"\n\n\n今天工作中遇到了一个小问题：使用`.html`和`.append`往一个元素内部添加内容的时候，在IE7、IE8下有两种不同的表现：用`.append`往元素内部添加特定的HTML字符串，在IE7、8下面是空白的；用`.html`刷新元素内部的HTML，虽然显示的样式和结构有点异常，但是大部分元素还是正常显示出来了。原因是那段HTML字符串里面有反引号，而且是当反引号成对而且是特定结构的时候才会导致页面空白。到现在还没有查出为什么会有这个问题，今天先来看看`.html`的使用方法，往后会继续深入`.html`的源码、`append`的用法与源码以及两者的区别。\n\n> Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.\n\n`.html`有两种使用方法，分别对应`getter`和`setter`，它们按是否传入参数区分。\n\n### .html()\n____\n\n当没有传入任何参数的时候，`.html`以`getter`方式调用，返回匹配元素的内部HTML字符串。注意，**如果该jQuery对象包含的元素个数大于1，调用`.html`方法只会返回第一个元素的内部HTML字符串**。\n\n返回的字符串未必跟HTML中的代码完全一致，包括HTML标签的大小写或者属性上面的引号等等。\n\n### .html(HTMLString)或者.html(function(index, oldhtml))\n____\n\n当传入HTML字符串或者传入一个回调函数的时候，`.html`以`setter`方式调用，设置jQuery对象中所有元素内部的HTML。传入字符串的时候，会直接替换元素内部的HTML字符串；传入回调函数时，会使用回调函数返回的字符串替换元素内部的HTML字符串。\n\n回调函数接受两个参数，一个是元素的在jQuery对象中的索引，第二个是元素原来的内部HTML字符串。注意，**在调用回调函数之前元素的内部字符串会先被置空**。\n\n再替换完元素内部的HTML字符串之后，原来内部元素的一些`data`还有绑定的事件处理程序都会被删除哦。\n","summaryHtmlText":"<p>今天工作中遇到了一个小问题：使用<code>.html</code>和<code>.append</code>往一个元素内部添加内容的时候，在IE7、IE8下有两种不同的表现：用<code>.append</code>往元素内部添加特定的HTML字符串，在IE7、8下面是空白的；用<code>.html</code>刷新元素内部的HTML，虽然显示的样式和结构有点异常，但是大部分元素还是正常显示出来了。原因是那段HTML字符串里面有反引号，而且是当反引号成对而且是特定结构的时候才会导致页面空白。到现在还没有查出为什么会有这个问题，今天先来看看<code>.html</code>的使用方法，往后会继续深入<code>.html</code>的源码、<code>append</code>的用法与源码以及两者的区别。</p>\n<blockquote>\n<p>Get the HTML contents of the first element in the set of matched elements or set the HTML contents of every matched element.</p>\n</blockquote>\n<p><code>.html</code>有两种使用方法，分别对应<code>getter</code>和<code>setter</code>，它们按是否传入参数区分。</p>\n<h3 id=\"-html-\">.html()</h3>\n<hr>\n<p>当没有传入任何参数的时候，<code>.html</code>以<code>getter</code>方式调用，返回匹配元素的内部HTML字符串。注意，<strong>如果该jQuery对象包含的元素个数大于1，调用<code>.html</code>方法只会返回第一个元素的内部HTML字符串</strong>。</p>\n<p>返回的字符串未必跟HTML中的代码完全一致，包括HTML标签的大小写或者属性上面的引号等等。</p>\n<h3 id=\"-html-htmlstring-html-function-index-oldhtml-\">.html(HTMLString)或者.html(function(index, oldhtml))</h3>\n<hr>\n<p>当传入HTML字符串或者传入一个回调函数的时候，<code>.html</code>以<code>setter</code>方式调用，设置jQuery对象中所有元素内部的HTML。传入字符串的时候，会直接替换元素内部的HTML字符串；传入回调函数时，会使用回调函数返回的字符串替换元素内部的HTML字符串。</p>\n<p>回调函数接受两个参数，一个是元素的在jQuery对象中的索引，第二个是元素原来的内部HTML字符串。注意，<strong>在调用回调函数之前元素的内部字符串会先被置空</strong>。</p>\n<p>再替换完元素内部的HTML字符串之后，原来内部元素的一些<code>data</code>还有绑定的事件处理程序都会被删除哦。</p>\n"}