{"year":"2013","month":"07","day":"03","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/07/03/a-tag.html","fileName":"a-tag","layout":"post","title":"HTML A 标签简析","description":"","tags":["html"],"markdownText":"\n\n\nHTML中的`A`标签，使用频率应该非常高。可以作为一个链接、一个锚点，甚至一些按钮（Extjs和dojo等框架）。先看看w3schools对`A`标签的定义是：\n\n> The a tag defines a hyperlink, which is used to link from one page to another.\n\n简单的说，`A`标签就是一个超链接。有趣的是，对于HTML4跟HTML5对`A`标签的定义又有所不同。\n\n> In HTML 4.01, the a tag could be either a hyperlink or an anchor. In HTML5, the a tag is always a hyperlink, but if it has no href attribute, it is only a placeholder for a hyperlink.\n\n在HTML4中，如果`A`标签没有`href`这个属性，则说明该`A`标签仅仅是个锚，可以供链接跳转到该位置，就像一个“书签”的作用。但是在HTML5中`A`标签**只是个链接**。\n\n最近在项目中发现有个奇怪的问题：在一个`A`标签的事件处理程序中，改变浏览器的hash，发现不生效，只是在浏览器的地址栏的末尾加上了“#\"。打断点调试后发现该行代码执行之后，浏览器的地址栏确实是改变了，可以看到代码设置的hash。但是在代码走完之后，浏览器的hash自动变成“#”，代码设置上去的hash被重置了。观察该事件在jQuery中的处理函数，只有一个事件处理函数，没有其他的事件处理函数被执行，也没有异步方法执行。究竟这个hash是怎么被重置回去了？\n\n观察该`A`标签的属性，发现有一行这样的代码：`href=\"#\"`。使用Chrome的调试工具，把其改成`href=\"#123\"`，神奇的事情发生了。单击按钮后地址栏上的hash被改成了“#123”。难道是`A`标签的默认行为重置了浏览器的hash？\n\n为了验证该问题，为一个`DIV`元素绑定了同样一个鼠标单击的事件处理函数，发现单击该`DIV`元素，地址栏上的hash被正确修改，没有被重置。\n\n重现该场景写了一个[测试代码](http://jsfiddle.net/Vy3W7/)：\n\n{% highlight html %}\n<a href=\"#123\">click me!</a>\n{% endhighlight %}\n\n{% highlight javascript %}\n$(function () {\n  $(\"a\").click(function (evt) {\n    window.location.hash = \"#456\";\n  });\n});\n{% endhighlight %}\n\n运行代码后发现地址栏上的hash变成了“#123”，而不是代码设置的“#456”。说明`A`标签的默认行为是发生在事件处理函数之后的。\n\n要防止以上的场景发生，可以采取以下几个手段：\n1. 把`href`的值改成是`javascript:void(0);`。JavaScript中void是一个操作符，该操作符指定要计算一个表达式但是不返回值，单击这个标签的默认行为就是什么都不做。\n2. 在事件处理函数中使用`evt.preventDefault()`阻止浏览器的默认行为，或者`return false`也行。\n\n尽量不要写`href=\"#\"`了，如果没有阻止浏览器的默认行为，这句代码不仅会重置地址栏的hash，还会让页面滚动到最上方，慎用慎用。\n","htmlText":"<p>HTML中的<code>A</code>标签，使用频率应该非常高。可以作为一个链接、一个锚点，甚至一些按钮（Extjs和dojo等框架）。先看看w3schools对<code>A</code>标签的定义是：</p>\n<blockquote>\n<p>The a tag defines a hyperlink, which is used to link from one page to another.</p>\n</blockquote>\n<p>简单的说，<code>A</code>标签就是一个超链接。有趣的是，对于HTML4跟HTML5对<code>A</code>标签的定义又有所不同。</p>\n<blockquote>\n<p>In HTML 4.01, the a tag could be either a hyperlink or an anchor. In HTML5, the a tag is always a hyperlink, but if it has no href attribute, it is only a placeholder for a hyperlink.</p>\n</blockquote>\n<p>在HTML4中，如果<code>A</code>标签没有<code>href</code>这个属性，则说明该<code>A</code>标签仅仅是个锚，可以供链接跳转到该位置，就像一个“书签”的作用。但是在HTML5中<code>A</code>标签<strong>只是个链接</strong>。</p>\n<p>最近在项目中发现有个奇怪的问题：在一个<code>A</code>标签的事件处理程序中，改变浏览器的hash，发现不生效，只是在浏览器的地址栏的末尾加上了“#&quot;。打断点调试后发现该行代码执行之后，浏览器的地址栏确实是改变了，可以看到代码设置的hash。但是在代码走完之后，浏览器的hash自动变成“#”，代码设置上去的hash被重置了。观察该事件在jQuery中的处理函数，只有一个事件处理函数，没有其他的事件处理函数被执行，也没有异步方法执行。究竟这个hash是怎么被重置回去了？</p>\n<p>观察该<code>A</code>标签的属性，发现有一行这样的代码：<code>href=&quot;#&quot;</code>。使用Chrome的调试工具，把其改成<code>href=&quot;#123&quot;</code>，神奇的事情发生了。单击按钮后地址栏上的hash被改成了“#123”。难道是<code>A</code>标签的默认行为重置了浏览器的hash？</p>\n<p>为了验证该问题，为一个<code>DIV</code>元素绑定了同样一个鼠标单击的事件处理函数，发现单击该<code>DIV</code>元素，地址栏上的hash被正确修改，没有被重置。</p>\n<p>重现该场景写了一个<a href=\"http://jsfiddle.net/Vy3W7/\">测试代码</a>：</p>\n<p>{% highlight html %}\n<a href=\"#123\">click me!</a>\n{% endhighlight %}</p>\n<p>{% highlight javascript %}\n$(function () {\n  $(&quot;a&quot;).click(function (evt) {\n    window.location.hash = &quot;#456&quot;;\n  });\n});\n{% endhighlight %}</p>\n<p>运行代码后发现地址栏上的hash变成了“#123”，而不是代码设置的“#456”。说明<code>A</code>标签的默认行为是发生在事件处理函数之后的。</p>\n<p>要防止以上的场景发生，可以采取以下几个手段：</p>\n<ol>\n<li>把<code>href</code>的值改成是<code>javascript:void(0);</code>。JavaScript中void是一个操作符，该操作符指定要计算一个表达式但是不返回值，单击这个标签的默认行为就是什么都不做。</li>\n<li>在事件处理函数中使用<code>evt.preventDefault()</code>阻止浏览器的默认行为，或者<code>return false</code>也行。</li>\n</ol>\n<p>尽量不要写<code>href=&quot;#&quot;</code>了，如果没有阻止浏览器的默认行为，这句代码不仅会重置地址栏的hash，还会让页面滚动到最上方，慎用慎用。</p>\n","summaryMarkdownText":"\n\n\nHTML中的`A`标签，使用频率应该非常高。可以作为一个链接、一个锚点，甚至一些按钮（Extjs和dojo等框架）。先看看w3schools对`A`标签的定义是：\n\n> The a tag defines a hyperlink, which is used to link from one page to another.\n\n简单的说，`A`标签就是一个超链接。有趣的是，对于HTML4跟HTML5对`A`标签的定义又有所不同。\n\n> In HTML 4.01, the a tag could be either a hyperlink or an anchor. In HTML5, the a tag is always a hyperlink, but if it has no href attribute, it is only a placeholder for a hyperlink.\n\n在HTML4中，如果`A`标签没有`href`这个属性，则说明该`A`标签仅仅是个锚，可以供链接跳转到该位置，就像一个“书签”的作用。但是在HTML5中`A`标签**只是个链接**。\n\n最近在项目中发现有个奇怪的问题：在一个`A`标签的事件处理程序中，改变浏览器的hash，发现不生效，只是在浏览器的地址栏的末尾加上了“#\"。打断点调试后发现该行代码执行之后，浏览器的地址栏确实是改变了，可以看到代码设置的hash。但是在代码走完之后，浏览器的hash自动变成“#”，代码设置上去的hash被重置了。观察该事件在jQuery中的处理函数，只有一个事件处理函数，没有其他的事件处理函数被执行，也没有异步方法执行。究竟这个hash是怎么被重置回去了？\n\n观察该`A`标签的属性，发现有一行这样的代码：`href=\"#\"`。使用Chrome的调试工具，把其改成`href=\"#123\"`，神奇的事情发生了。单击按钮后地址栏上的hash被改成了“#123”。难道是`A`标签的默认行为重置了浏览器的hash？\n\n为了验证该问题，为一个`DIV`元素绑定了同样一个鼠标单击的事件处理函数，发现单击该`DIV`元素，地址栏上的hash被正确修改，没有被重置。\n\n重现该场景写了一个[测试代码](http://jsfiddle.net/Vy3W7/)：\n\n{% highlight html %}\n<a href=\"#123\">click me!</a>\n{% endhighlight %}\n","summaryHtmlText":"<p>HTML中的<code>A</code>标签，使用频率应该非常高。可以作为一个链接、一个锚点，甚至一些按钮（Extjs和dojo等框架）。先看看w3schools对<code>A</code>标签的定义是：</p>\n<blockquote>\n<p>The a tag defines a hyperlink, which is used to link from one page to another.</p>\n</blockquote>\n<p>简单的说，<code>A</code>标签就是一个超链接。有趣的是，对于HTML4跟HTML5对<code>A</code>标签的定义又有所不同。</p>\n<blockquote>\n<p>In HTML 4.01, the a tag could be either a hyperlink or an anchor. In HTML5, the a tag is always a hyperlink, but if it has no href attribute, it is only a placeholder for a hyperlink.</p>\n</blockquote>\n<p>在HTML4中，如果<code>A</code>标签没有<code>href</code>这个属性，则说明该<code>A</code>标签仅仅是个锚，可以供链接跳转到该位置，就像一个“书签”的作用。但是在HTML5中<code>A</code>标签<strong>只是个链接</strong>。</p>\n<p>最近在项目中发现有个奇怪的问题：在一个<code>A</code>标签的事件处理程序中，改变浏览器的hash，发现不生效，只是在浏览器的地址栏的末尾加上了“#&quot;。打断点调试后发现该行代码执行之后，浏览器的地址栏确实是改变了，可以看到代码设置的hash。但是在代码走完之后，浏览器的hash自动变成“#”，代码设置上去的hash被重置了。观察该事件在jQuery中的处理函数，只有一个事件处理函数，没有其他的事件处理函数被执行，也没有异步方法执行。究竟这个hash是怎么被重置回去了？</p>\n<p>观察该<code>A</code>标签的属性，发现有一行这样的代码：<code>href=&quot;#&quot;</code>。使用Chrome的调试工具，把其改成<code>href=&quot;#123&quot;</code>，神奇的事情发生了。单击按钮后地址栏上的hash被改成了“#123”。难道是<code>A</code>标签的默认行为重置了浏览器的hash？</p>\n<p>为了验证该问题，为一个<code>DIV</code>元素绑定了同样一个鼠标单击的事件处理函数，发现单击该<code>DIV</code>元素，地址栏上的hash被正确修改，没有被重置。</p>\n<p>重现该场景写了一个<a href=\"http://jsfiddle.net/Vy3W7/\">测试代码</a>：</p>\n<p>{% highlight html %}\n<a href=\"#123\">click me!</a>\n{% endhighlight %}</p>\n"}