{"year":"2013","month":"08","day":"27","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/08/27/css-conflicting-absolute-positions.html","fileName":"css-conflicting-absolute-positions","layout":"post","title":"利用Absolute进行自适应布局","description":"","tags":["css"],"markdownText":"\n\n\n昨天做一个类似于幻灯片左右切换的功能，鼠标移动到容器的左边显示前一张的箭头，移动到右边显示后一张的箭头。最简单的实现方式是在容器上面加两个遮盖层，并在遮盖层上设置`cursor`样式，例如如下代码片段：\n\n    <div id=\"wrapper\">\n      <div id=\"left\"></div>\n      <div id=\"right\"></div>\n    </div>\n\nCSS：\n\n    #wrapper {\n      width: 100px;\n      height: 100px;\n      background: red;\n      position: relative;\n    }\n\n    #wrapper div {\n      width: 33.3333%;\n      top: 0;\n      bottom: 0;\n      position: absolute;\n      background: blue;\n    }\n\n    #right {\n      right: 0;\n    }\n\n实现的效果[参考这里](http://jsfiddle.net/KbH86/1/show/)。这里利用了一个`absolute`的特性，当同时指定了`top`、`bottom`，而宽度是`auto`的话，绝对定位的元素的宽度会根据`top`和`bottom`所限定的范围内自适应容器，同样的垂直方面也是一样的。这样，很容易就能做出一个能自适应容器的元素。\n\n现实永远是残酷的，又是IE。很遗憾，IE6的表现差强人意，上面的例子在IE6下面有很奇怪的行为，高度并没有撑开，而只有小小的一段。这个`absolute`的特性IE6并不支持。\n\n幸好，上述的需求还能有一个权宜的解决方案。\n\n1. 把高度设置到一个非常大的值（例如：`9999999px`），一般普通的应用是没有办法到达的高度。\n2. 把容器的`overflow`设置成`hidden`，这样，超出的部分就不会显示出来了。\n\n代码如下：\n\n    #wrapper {\n      _overflow: hidden;\n    }\n\n    #wrapper div {\n      _height: 999999px;\n    }\n\n运行结果[参考这里](http://jsfiddle.net/2T4X4/1/show/)。可以看到在IE6上面的表现也跟其他现代浏览器一致了，太happy了！\n\n美中不足的是这个解决方案只能解决上述的场景，即`bottom`为`0`的场景，当`bottom`不为`0`的时候，就不能使用上述的方案了。这个时候只能使用CSS表达式或者求助于JavaScript了。哎，IE6啊啊啊啊啊啊啊！\n","htmlText":"<p>昨天做一个类似于幻灯片左右切换的功能，鼠标移动到容器的左边显示前一张的箭头，移动到右边显示后一张的箭头。最简单的实现方式是在容器上面加两个遮盖层，并在遮盖层上设置<code>cursor</code>样式，例如如下代码片段：</p>\n<pre><code>&lt;div id=&quot;wrapper&quot;&gt;\n  &lt;div id=&quot;left&quot;&gt;&lt;/div&gt;\n  &lt;div id=&quot;right&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre><p>CSS：</p>\n<pre><code>#wrapper {\n  width: 100px;\n  height: 100px;\n  background: red;\n  position: relative;\n}\n\n#wrapper div {\n  width: 33.3333%;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  background: blue;\n}\n\n#right {\n  right: 0;\n}\n</code></pre><p>实现的效果<a href=\"http://jsfiddle.net/KbH86/1/show/\">参考这里</a>。这里利用了一个<code>absolute</code>的特性，当同时指定了<code>top</code>、<code>bottom</code>，而宽度是<code>auto</code>的话，绝对定位的元素的宽度会根据<code>top</code>和<code>bottom</code>所限定的范围内自适应容器，同样的垂直方面也是一样的。这样，很容易就能做出一个能自适应容器的元素。</p>\n<p>现实永远是残酷的，又是IE。很遗憾，IE6的表现差强人意，上面的例子在IE6下面有很奇怪的行为，高度并没有撑开，而只有小小的一段。这个<code>absolute</code>的特性IE6并不支持。</p>\n<p>幸好，上述的需求还能有一个权宜的解决方案。</p>\n<ol>\n<li>把高度设置到一个非常大的值（例如：<code>9999999px</code>），一般普通的应用是没有办法到达的高度。</li>\n<li>把容器的<code>overflow</code>设置成<code>hidden</code>，这样，超出的部分就不会显示出来了。</li>\n</ol>\n<p>代码如下：</p>\n<pre><code>#wrapper {\n  _overflow: hidden;\n}\n\n#wrapper div {\n  _height: 999999px;\n}\n</code></pre><p>运行结果<a href=\"http://jsfiddle.net/2T4X4/1/show/\">参考这里</a>。可以看到在IE6上面的表现也跟其他现代浏览器一致了，太happy了！</p>\n<p>美中不足的是这个解决方案只能解决上述的场景，即<code>bottom</code>为<code>0</code>的场景，当<code>bottom</code>不为<code>0</code>的时候，就不能使用上述的方案了。这个时候只能使用CSS表达式或者求助于JavaScript了。哎，IE6啊啊啊啊啊啊啊！</p>\n","summaryMarkdownText":"\n\n\n昨天做一个类似于幻灯片左右切换的功能，鼠标移动到容器的左边显示前一张的箭头，移动到右边显示后一张的箭头。最简单的实现方式是在容器上面加两个遮盖层，并在遮盖层上设置`cursor`样式，例如如下代码片段：\n\n    <div id=\"wrapper\">\n      <div id=\"left\"></div>\n      <div id=\"right\"></div>\n    </div>\n\nCSS：\n\n    #wrapper {\n      width: 100px;\n      height: 100px;\n      background: red;\n      position: relative;\n    }\n\n    #wrapper div {\n      width: 33.3333%;\n      top: 0;\n      bottom: 0;\n      position: absolute;\n      background: blue;","summaryHtmlText":"<p>昨天做一个类似于幻灯片左右切换的功能，鼠标移动到容器的左边显示前一张的箭头，移动到右边显示后一张的箭头。最简单的实现方式是在容器上面加两个遮盖层，并在遮盖层上设置<code>cursor</code>样式，例如如下代码片段：</p>\n<pre><code>&lt;div id=&quot;wrapper&quot;&gt;\n  &lt;div id=&quot;left&quot;&gt;&lt;/div&gt;\n  &lt;div id=&quot;right&quot;&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre><p>CSS：</p>\n<pre><code>#wrapper {\n  width: 100px;\n  height: 100px;\n  background: red;\n  position: relative;\n}\n\n#wrapper div {\n  width: 33.3333%;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  background: blue;\n</code></pre>"}