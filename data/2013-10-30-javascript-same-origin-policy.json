{"year":"2013","month":"10","day":"30","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/10/30/javascript-same-origin-policy.html","fileName":"javascript-same-origin-policy","layout":"post","title":"JavaScript同源策略","description":"","tags":["JavaScript"],"markdownText":"\n\n\n当一个不是当前页面的域下的脚本要跟当前页面进行交互，要受到这个同源策略的限制。这里的同源指的是页面和脚本路径的协议、端口和主机都一样。其中一项不一样都视作不同源，也就是我们常说的跨域：\n\n    http://store.company.com/dir/other.html\n    http://store.company.com/dir2/other.html // same\n    http://store.company.com:81/dir/other.html // not same\n\n一个页面还可以更改其所在的域，不过有很多限制。可以通过设置`document.domain`改变当前页面的域，但是只能够设置到当前域的后缀部分，例如：\n\n    // current domain: www.duowan.com\n    document.domain = \"duowan.com\"; // success\n    document.domain = \"u.duowan.com\"; // error\n\n设置了域之后的跨域检查都会使用设置后的值去计算。有一点需要注意的是，设置`document.domain`之后端口会被重置为`null`，所以`company.com:8080`和`company.com`要通讯，两个页面都需要设置`document.domain`，这样端口才能一致。\n\n跨域的访问通常可以分成三种：\n\n1. a跨域“写”，即链接、跳转和表单提交，这种行为是允许的。\n2. a跨域“嵌入”，即`script`、`link`、`img`、`video`、`object`、`embed`、`iframe`等，这些也是被允许的。\n3. a跨域“读”，例如`XMLHttpRequest`，一般是不允许的，需要设置CORS才能允许这些跨域访问。\n\n在JavaScript中，我们可以通过`iframe.contentWindow`、`window.parent`等API去访问页面中的其他文档。如果这些文档不在同一个域，访问这些文档的`winodw`和`location`会被禁止。如果需要跨域的`iframe`通讯，请使用HTML5提供的`postMessage`API或者使用一些框架去实现，例如[MessengerJS](https://github.com/biqing/MessengerJS)。\n","htmlText":"<p>当一个不是当前页面的域下的脚本要跟当前页面进行交互，要受到这个同源策略的限制。这里的同源指的是页面和脚本路径的协议、端口和主机都一样。其中一项不一样都视作不同源，也就是我们常说的跨域：</p>\n<pre><code>http://store.company.com/dir/other.html\nhttp://store.company.com/dir2/other.html // same\nhttp://store.company.com:81/dir/other.html // not same\n</code></pre><p>一个页面还可以更改其所在的域，不过有很多限制。可以通过设置<code>document.domain</code>改变当前页面的域，但是只能够设置到当前域的后缀部分，例如：</p>\n<pre><code>// current domain: www.duowan.com\ndocument.domain = &quot;duowan.com&quot;; // success\ndocument.domain = &quot;u.duowan.com&quot;; // error\n</code></pre><p>设置了域之后的跨域检查都会使用设置后的值去计算。有一点需要注意的是，设置<code>document.domain</code>之后端口会被重置为<code>null</code>，所以<code>company.com:8080</code>和<code>company.com</code>要通讯，两个页面都需要设置<code>document.domain</code>，这样端口才能一致。</p>\n<p>跨域的访问通常可以分成三种：</p>\n<ol>\n<li>a跨域“写”，即链接、跳转和表单提交，这种行为是允许的。</li>\n<li>a跨域“嵌入”，即<code>script</code>、<code>link</code>、<code>img</code>、<code>video</code>、<code>object</code>、<code>embed</code>、<code>iframe</code>等，这些也是被允许的。</li>\n<li>a跨域“读”，例如<code>XMLHttpRequest</code>，一般是不允许的，需要设置CORS才能允许这些跨域访问。</li>\n</ol>\n<p>在JavaScript中，我们可以通过<code>iframe.contentWindow</code>、<code>window.parent</code>等API去访问页面中的其他文档。如果这些文档不在同一个域，访问这些文档的<code>winodw</code>和<code>location</code>会被禁止。如果需要跨域的<code>iframe</code>通讯，请使用HTML5提供的<code>postMessage</code>API或者使用一些框架去实现，例如<a href=\"https://github.com/biqing/MessengerJS\">MessengerJS</a>。</p>\n","summaryMarkdownText":"\n\n\n当一个不是当前页面的域下的脚本要跟当前页面进行交互，要受到这个同源策略的限制。这里的同源指的是页面和脚本路径的协议、端口和主机都一样。其中一项不一样都视作不同源，也就是我们常说的跨域：\n\n    http://store.company.com/dir/other.html\n    http://store.company.com/dir2/other.html // same\n    http://store.company.com:81/dir/other.html // not same\n\n一个页面还可以更改其所在的域，不过有很多限制。可以通过设置`document.domain`改变当前页面的域，但是只能够设置到当前域的后缀部分，例如：\n\n    // current domain: www.duowan.com\n    document.domain = \"duowan.com\"; // success\n    document.domain = \"u.duowan.com\"; // error\n\n设置了域之后的跨域检查都会使用设置后的值去计算。有一点需要注意的是，设置`document.domain`之后端口会被重置为`null`，所以`company.com:8080`和`company.com`要通讯，两个页面都需要设置`document.domain`，这样端口才能一致。\n\n跨域的访问通常可以分成三种：\n\n1. a跨域“写”，即链接、跳转和表单提交，这种行为是允许的。\n2. a跨域“嵌入”，即`script`、`link`、`img`、`video`、`object`、`embed`、`iframe`等，这些也是被允许的。\n3. a跨域“读”，例如`XMLHttpRequest`，一般是不允许的，需要设置CORS才能允许这些跨域访问。\n\n在JavaScript中，我们可以通过`iframe.contentWindow`、`window.parent`等API去访问页面中的其他文档。如果这些文档不在同一个域，访问这些文档的`winodw`和`location`会被禁止。如果需要跨域的`iframe`通讯，请使用HTML5提供的`postMessage`API或者使用一些框架去实现，例如[MessengerJS](https://github.com/biqing/MessengerJS)。\n","summaryHtmlText":"<p>当一个不是当前页面的域下的脚本要跟当前页面进行交互，要受到这个同源策略的限制。这里的同源指的是页面和脚本路径的协议、端口和主机都一样。其中一项不一样都视作不同源，也就是我们常说的跨域：</p>\n<pre><code>http://store.company.com/dir/other.html\nhttp://store.company.com/dir2/other.html // same\nhttp://store.company.com:81/dir/other.html // not same\n</code></pre><p>一个页面还可以更改其所在的域，不过有很多限制。可以通过设置<code>document.domain</code>改变当前页面的域，但是只能够设置到当前域的后缀部分，例如：</p>\n<pre><code>// current domain: www.duowan.com\ndocument.domain = &quot;duowan.com&quot;; // success\ndocument.domain = &quot;u.duowan.com&quot;; // error\n</code></pre><p>设置了域之后的跨域检查都会使用设置后的值去计算。有一点需要注意的是，设置<code>document.domain</code>之后端口会被重置为<code>null</code>，所以<code>company.com:8080</code>和<code>company.com</code>要通讯，两个页面都需要设置<code>document.domain</code>，这样端口才能一致。</p>\n<p>跨域的访问通常可以分成三种：</p>\n<ol>\n<li>a跨域“写”，即链接、跳转和表单提交，这种行为是允许的。</li>\n<li>a跨域“嵌入”，即<code>script</code>、<code>link</code>、<code>img</code>、<code>video</code>、<code>object</code>、<code>embed</code>、<code>iframe</code>等，这些也是被允许的。</li>\n<li>a跨域“读”，例如<code>XMLHttpRequest</code>，一般是不允许的，需要设置CORS才能允许这些跨域访问。</li>\n</ol>\n<p>在JavaScript中，我们可以通过<code>iframe.contentWindow</code>、<code>window.parent</code>等API去访问页面中的其他文档。如果这些文档不在同一个域，访问这些文档的<code>winodw</code>和<code>location</code>会被禁止。如果需要跨域的<code>iframe</code>通讯，请使用HTML5提供的<code>postMessage</code>API或者使用一些框架去实现，例如<a href=\"https://github.com/biqing/MessengerJS\">MessengerJS</a>。</p>\n"}