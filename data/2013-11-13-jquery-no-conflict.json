{"year":"2013","month":"11","day":"13","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/11/13/jquery-no-conflict.html","fileName":"jquery-no-conflict","layout":"post","title":"jQuery扫盲之jQuery.noConflict","description":"","tags":["JavaScript","jQuery"],"markdownText":"\n\n\n这个方法通常在`$`这个变量已经被占用的情况下调用，例如我们的页面已经引用了Prototype等类库（Prototype使用`$`作为`document.getElementById`的快捷方式）：\n\n> Relinquish jQuery's control of the $ variable.\n\n这个方法接受一个参数`removeAll`，默认是`false`，表示只释放`$`这个全局变量。如果这个参数是`true`，则表示释放所有全局变量，包括`jQuery`：\n\n    $.noConflict();\n    alert($); // undefined\n    jQuery.noConflict(true);\n    alert(jQuery); // undefined\n\n这样就可以释放jQuery占用的所有全局变量了。那么要怎么用jQuery的方法呢？调用这个方法会返回一个函数，其实就是jQuery本身：\n\n    var myJQ = $.noConflict(true);\n    alert(myJQ(\"body\").length);\n\n还有一个方法获取jQuery的引用，就是在`jQuery.ready`的回调里面的参数：\n\n    $.noConflict();\n    jQuery( document ).ready(function( $ ) {\n      // Code that uses jQuery's $ can follow here.\n    });\n    // Code that uses other library's $ can follow here.\n\n回调的第一个参数就是jQuery的引用，所以在`jQuery.ready`里面就可以用这个参数使用jQuery，在外面`$`就可以表示其他的东西。\n","htmlText":"<p>这个方法通常在<code>$</code>这个变量已经被占用的情况下调用，例如我们的页面已经引用了Prototype等类库（Prototype使用<code>$</code>作为<code>document.getElementById</code>的快捷方式）：</p>\n<blockquote>\n<p>Relinquish jQuery&#39;s control of the $ variable.</p>\n</blockquote>\n<p>这个方法接受一个参数<code>removeAll</code>，默认是<code>false</code>，表示只释放<code>$</code>这个全局变量。如果这个参数是<code>true</code>，则表示释放所有全局变量，包括<code>jQuery</code>：</p>\n<pre><code>$.noConflict();\nalert($); // undefined\njQuery.noConflict(true);\nalert(jQuery); // undefined\n</code></pre><p>这样就可以释放jQuery占用的所有全局变量了。那么要怎么用jQuery的方法呢？调用这个方法会返回一个函数，其实就是jQuery本身：</p>\n<pre><code>var myJQ = $.noConflict(true);\nalert(myJQ(&quot;body&quot;).length);\n</code></pre><p>还有一个方法获取jQuery的引用，就是在<code>jQuery.ready</code>的回调里面的参数：</p>\n<pre><code>$.noConflict();\njQuery( document ).ready(function( $ ) {\n  // Code that uses jQuery&#39;s $ can follow here.\n});\n// Code that uses other library&#39;s $ can follow here.\n</code></pre><p>回调的第一个参数就是jQuery的引用，所以在<code>jQuery.ready</code>里面就可以用这个参数使用jQuery，在外面<code>$</code>就可以表示其他的东西。</p>\n","summaryMarkdownText":"\n\n\n这个方法通常在`$`这个变量已经被占用的情况下调用，例如我们的页面已经引用了Prototype等类库（Prototype使用`$`作为`document.getElementById`的快捷方式）：\n\n> Relinquish jQuery's control of the $ variable.\n\n这个方法接受一个参数`removeAll`，默认是`false`，表示只释放`$`这个全局变量。如果这个参数是`true`，则表示释放所有全局变量，包括`jQuery`：\n\n    $.noConflict();\n    alert($); // undefined\n    jQuery.noConflict(true);\n    alert(jQuery); // undefined\n\n这样就可以释放jQuery占用的所有全局变量了。那么要怎么用jQuery的方法呢？调用这个方法会返回一个函数，其实就是jQuery本身：\n\n    var myJQ = $.noConflict(true);\n    alert(myJQ(\"body\").length);\n\n还有一个方法获取jQuery的引用，就是在`jQuery.ready`的回调里面的参数：\n\n    $.noConflict();\n    jQuery( document ).ready(function( $ ) {\n      // Code that uses jQuery's $ can follow here.\n    });","summaryHtmlText":"<p>这个方法通常在<code>$</code>这个变量已经被占用的情况下调用，例如我们的页面已经引用了Prototype等类库（Prototype使用<code>$</code>作为<code>document.getElementById</code>的快捷方式）：</p>\n<blockquote>\n<p>Relinquish jQuery&#39;s control of the $ variable.</p>\n</blockquote>\n<p>这个方法接受一个参数<code>removeAll</code>，默认是<code>false</code>，表示只释放<code>$</code>这个全局变量。如果这个参数是<code>true</code>，则表示释放所有全局变量，包括<code>jQuery</code>：</p>\n<pre><code>$.noConflict();\nalert($); // undefined\njQuery.noConflict(true);\nalert(jQuery); // undefined\n</code></pre><p>这样就可以释放jQuery占用的所有全局变量了。那么要怎么用jQuery的方法呢？调用这个方法会返回一个函数，其实就是jQuery本身：</p>\n<pre><code>var myJQ = $.noConflict(true);\nalert(myJQ(&quot;body&quot;).length);\n</code></pre><p>还有一个方法获取jQuery的引用，就是在<code>jQuery.ready</code>的回调里面的参数：</p>\n<pre><code>$.noConflict();\njQuery( document ).ready(function( $ ) {\n  // Code that uses jQuery&#39;s $ can follow here.\n});\n</code></pre>"}