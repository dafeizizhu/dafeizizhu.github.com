{"year":"2013","month":"09","day":"30","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/09/30/about-yaml.html","fileName":"about-yaml","layout":"post","title":"简述YAML","description":"","tags":["前端"],"markdownText":"\n\n\n这个博客是使用Jekyll在Github上搭建的。而Jekyll使用了YAML作为其配置文件的格式。什么是YAML？它跟XML和JSON有什么不同？今天来简单介绍一下。\n\nYAML，有一个有意思的递归命名：\n\n    YAML isn't A Markup Language.\n\n这句话的意思是，YAML不是一个标记语言，它着重于数据而不是存储数据的格式。以下是Jekyll配置文件`_config.yml`的一个例子：\n\n    permalink: /:categories/:year/:month/:day/:title \n    exclude: [\".rvmrc\", \".rbenv-version\", \"README.md\", \"Rakefile\", \"changelog.md\"]\n    pygments: true\n    baseurl: \n\n是不是非常简单，而且可读性非常强。跟XML和JSON一样，YAML也需要表示数组（Array）和对象（Object）两种形式。在YAML中的语法大概是这样的：\n\n数组使用`-`去标识每一个元素，例如：\n\n    - Mark McGwire\n    - Sammy Sosa\n    - Ken Griffey\n\n对象使用`:`去划分键和值，例如：\n\n    hr:  65    # Home runs\n    avg: 0.278 # Batting average\n    rbi: 147   # Runs Batted In\n\n通过缩进来区分上下级关系：\n\n    american:\n      - Boston Red Sox\n      - Detroit Tigers\n      - New York Yankees\n    national:\n      - New York Mets\n      - Chicago Cubs\n      - Atlanta Braves\n\n有趣的是，YAML也支持类似于JSON的写法，例如：\n\n    Mark McGwire: {hr: 65, avg: 0.278}\n    Sammy Sosa: {\n      hr: 63,\n      avg: 0.288\n    }\n\n最后看看YAML支持的数据类型：\n\n1. `Integer`，整型，例如`12345`、`0x10`等。\n2. `Float`，浮点型，例如`1.2345`、`123.1e1`等。\n3. `Miscellaneous`，例如`null`、`true`、`false`还有各种字符串。\n4. `Timestamps`、时间日期，可以有多种格式，例如`2001-12-15T02:59:43.1Z`和`2001-12-14t21:59:43.10-05:00`。\n\nYAML有什么好处？首先是简单，嵌套不深的YAML文件对人十分友好。其次是由于结构的简单，程序实现起来也十分简单。所以YAML十分适合作为配置文件的格式，可读性十分好，而且对于JavaScript来说，由于JSON是使用JavaScript解析器去解析的，使用JSON作为配置文件有可能执行配置文件中的一些恶意代码（所以需要浏览器提供`JSON.parse`或者使用JSON2库，千万别直接`eval`）。而YAML则不含有任何可以执行代码的机会，在这方面YAML的安全性是比JSON要强一些的。\n","htmlText":"<p>这个博客是使用Jekyll在Github上搭建的。而Jekyll使用了YAML作为其配置文件的格式。什么是YAML？它跟XML和JSON有什么不同？今天来简单介绍一下。</p>\n<p>YAML，有一个有意思的递归命名：</p>\n<pre><code>YAML isn&#39;t A Markup Language.\n</code></pre><p>这句话的意思是，YAML不是一个标记语言，它着重于数据而不是存储数据的格式。以下是Jekyll配置文件<code>_config.yml</code>的一个例子：</p>\n<pre><code>permalink: /:categories/:year/:month/:day/:title \nexclude: [&quot;.rvmrc&quot;, &quot;.rbenv-version&quot;, &quot;README.md&quot;, &quot;Rakefile&quot;, &quot;changelog.md&quot;]\npygments: true\nbaseurl: \n</code></pre><p>是不是非常简单，而且可读性非常强。跟XML和JSON一样，YAML也需要表示数组（Array）和对象（Object）两种形式。在YAML中的语法大概是这样的：</p>\n<p>数组使用<code>-</code>去标识每一个元素，例如：</p>\n<pre><code>- Mark McGwire\n- Sammy Sosa\n- Ken Griffey\n</code></pre><p>对象使用<code>:</code>去划分键和值，例如：</p>\n<pre><code>hr:  65    # Home runs\navg: 0.278 # Batting average\nrbi: 147   # Runs Batted In\n</code></pre><p>通过缩进来区分上下级关系：</p>\n<pre><code>american:\n  - Boston Red Sox\n  - Detroit Tigers\n  - New York Yankees\nnational:\n  - New York Mets\n  - Chicago Cubs\n  - Atlanta Braves\n</code></pre><p>有趣的是，YAML也支持类似于JSON的写法，例如：</p>\n<pre><code>Mark McGwire: {hr: 65, avg: 0.278}\nSammy Sosa: {\n  hr: 63,\n  avg: 0.288\n}\n</code></pre><p>最后看看YAML支持的数据类型：</p>\n<ol>\n<li><code>Integer</code>，整型，例如<code>12345</code>、<code>0x10</code>等。</li>\n<li><code>Float</code>，浮点型，例如<code>1.2345</code>、<code>123.1e1</code>等。</li>\n<li><code>Miscellaneous</code>，例如<code>null</code>、<code>true</code>、<code>false</code>还有各种字符串。</li>\n<li><code>Timestamps</code>、时间日期，可以有多种格式，例如<code>2001-12-15T02:59:43.1Z</code>和<code>2001-12-14t21:59:43.10-05:00</code>。</li>\n</ol>\n<p>YAML有什么好处？首先是简单，嵌套不深的YAML文件对人十分友好。其次是由于结构的简单，程序实现起来也十分简单。所以YAML十分适合作为配置文件的格式，可读性十分好，而且对于JavaScript来说，由于JSON是使用JavaScript解析器去解析的，使用JSON作为配置文件有可能执行配置文件中的一些恶意代码（所以需要浏览器提供<code>JSON.parse</code>或者使用JSON2库，千万别直接<code>eval</code>）。而YAML则不含有任何可以执行代码的机会，在这方面YAML的安全性是比JSON要强一些的。</p>\n","summaryMarkdownText":"\n\n\n这个博客是使用Jekyll在Github上搭建的。而Jekyll使用了YAML作为其配置文件的格式。什么是YAML？它跟XML和JSON有什么不同？今天来简单介绍一下。\n\nYAML，有一个有意思的递归命名：\n\n    YAML isn't A Markup Language.\n\n这句话的意思是，YAML不是一个标记语言，它着重于数据而不是存储数据的格式。以下是Jekyll配置文件`_config.yml`的一个例子：\n\n    permalink: /:categories/:year/:month/:day/:title \n    exclude: [\".rvmrc\", \".rbenv-version\", \"README.md\", \"Rakefile\", \"changelog.md\"]\n    pygments: true\n    baseurl: \n\n是不是非常简单，而且可读性非常强。跟XML和JSON一样，YAML也需要表示数组（Array）和对象（Object）两种形式。在YAML中的语法大概是这样的：\n\n数组使用`-`去标识每一个元素，例如：\n\n    - Mark McGwire\n    - Sammy Sosa\n    - Ken Griffey\n\n对象使用`:`去划分键和值，例如：","summaryHtmlText":"<p>这个博客是使用Jekyll在Github上搭建的。而Jekyll使用了YAML作为其配置文件的格式。什么是YAML？它跟XML和JSON有什么不同？今天来简单介绍一下。</p>\n<p>YAML，有一个有意思的递归命名：</p>\n<pre><code>YAML isn&#39;t A Markup Language.\n</code></pre><p>这句话的意思是，YAML不是一个标记语言，它着重于数据而不是存储数据的格式。以下是Jekyll配置文件<code>_config.yml</code>的一个例子：</p>\n<pre><code>permalink: /:categories/:year/:month/:day/:title \nexclude: [&quot;.rvmrc&quot;, &quot;.rbenv-version&quot;, &quot;README.md&quot;, &quot;Rakefile&quot;, &quot;changelog.md&quot;]\npygments: true\nbaseurl: \n</code></pre><p>是不是非常简单，而且可读性非常强。跟XML和JSON一样，YAML也需要表示数组（Array）和对象（Object）两种形式。在YAML中的语法大概是这样的：</p>\n<p>数组使用<code>-</code>去标识每一个元素，例如：</p>\n<pre><code>- Mark McGwire\n- Sammy Sosa\n- Ken Griffey\n</code></pre><p>对象使用<code>:</code>去划分键和值，例如：</p>\n"}