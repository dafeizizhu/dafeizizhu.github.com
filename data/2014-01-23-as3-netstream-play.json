{"year":"2014","month":"01","day":"23","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2014/01/23/as3-netstream-play.html","fileName":"as3-netstream-play","layout":"post","title":"用NetStream播放视频，包括二进制数据哦！","description":"","tags":["Flash"],"markdownText":"\n\n\n昨天只是简单地将在Flash中播放视频的最基本的方法介绍了一遍。其实我们可以自己去下载视频的数据，然后通过`NetStream`的`appendBytes`方法把获取到的数据添加到流里面。这样，我们可以对数据的传输进行更精确的控制。\n\n`play`方法最简单的用法就是传入一个本地或者Web URL，后面的数据加载就交给`NetStream`的内部实现了。我们也可以传入一个`null`，这时`NetStream`就启动“数据生成模式”。在这个模式下面，调用`appendBytes`方法就可以把二进制数据添加到流中。\n\n要注意的是，在构造`NetStream`对象的时候需要在调用`NetConnection`的`connect`方法传入一个`null`。\n\n然后我们就可以从网络或者其他任意地方读取二进制数据，调用`appendBytes`把它们加入到这个流中播放：\n\n    var MyNC:NetConnection = new NetConnection();\n    MyNC.connect(null);\n \n    var MyNS:NetStream = new NetStream(MyNC);\n    MyVideo.attachNetStream(MyNS);\n    MyNS.play(null);\n    MyNS.appendBytes(ba);\n\n注意，在`appendBytes`执行后续调用之前，字节分析程序可能无法完整地解码对`appendBytes`的调用。\n\n通过这种播放方式，我们可以先把视频加载到内从，校验视频内容（MD5等），然后直接把这些二进制数据加载到流中播放，这样播放的时候就不需要再从网络或者本地文件系统中加载数据了。\n","htmlText":"<p>昨天只是简单地将在Flash中播放视频的最基本的方法介绍了一遍。其实我们可以自己去下载视频的数据，然后通过<code>NetStream</code>的<code>appendBytes</code>方法把获取到的数据添加到流里面。这样，我们可以对数据的传输进行更精确的控制。</p>\n<p><code>play</code>方法最简单的用法就是传入一个本地或者Web URL，后面的数据加载就交给<code>NetStream</code>的内部实现了。我们也可以传入一个<code>null</code>，这时<code>NetStream</code>就启动“数据生成模式”。在这个模式下面，调用<code>appendBytes</code>方法就可以把二进制数据添加到流中。</p>\n<p>要注意的是，在构造<code>NetStream</code>对象的时候需要在调用<code>NetConnection</code>的<code>connect</code>方法传入一个<code>null</code>。</p>\n<p>然后我们就可以从网络或者其他任意地方读取二进制数据，调用<code>appendBytes</code>把它们加入到这个流中播放：</p>\n<pre><code>var MyNC:NetConnection = new NetConnection();\nMyNC.connect(null);\n\nvar MyNS:NetStream = new NetStream(MyNC);\nMyVideo.attachNetStream(MyNS);\nMyNS.play(null);\nMyNS.appendBytes(ba);\n</code></pre><p>注意，在<code>appendBytes</code>执行后续调用之前，字节分析程序可能无法完整地解码对<code>appendBytes</code>的调用。</p>\n<p>通过这种播放方式，我们可以先把视频加载到内从，校验视频内容（MD5等），然后直接把这些二进制数据加载到流中播放，这样播放的时候就不需要再从网络或者本地文件系统中加载数据了。</p>\n","summaryMarkdownText":"\n\n\n昨天只是简单地将在Flash中播放视频的最基本的方法介绍了一遍。其实我们可以自己去下载视频的数据，然后通过`NetStream`的`appendBytes`方法把获取到的数据添加到流里面。这样，我们可以对数据的传输进行更精确的控制。\n\n`play`方法最简单的用法就是传入一个本地或者Web URL，后面的数据加载就交给`NetStream`的内部实现了。我们也可以传入一个`null`，这时`NetStream`就启动“数据生成模式”。在这个模式下面，调用`appendBytes`方法就可以把二进制数据添加到流中。\n\n要注意的是，在构造`NetStream`对象的时候需要在调用`NetConnection`的`connect`方法传入一个`null`。\n\n然后我们就可以从网络或者其他任意地方读取二进制数据，调用`appendBytes`把它们加入到这个流中播放：\n\n    var MyNC:NetConnection = new NetConnection();\n    MyNC.connect(null);\n \n    var MyNS:NetStream = new NetStream(MyNC);\n    MyVideo.attachNetStream(MyNS);\n    MyNS.play(null);\n    MyNS.appendBytes(ba);\n\n注意，在`appendBytes`执行后续调用之前，字节分析程序可能无法完整地解码对`appendBytes`的调用。\n\n通过这种播放方式，我们可以先把视频加载到内从，校验视频内容（MD5等），然后直接把这些二进制数据加载到流中播放，这样播放的时候就不需要再从网络或者本地文件系统中加载数据了。\n","summaryHtmlText":"<p>昨天只是简单地将在Flash中播放视频的最基本的方法介绍了一遍。其实我们可以自己去下载视频的数据，然后通过<code>NetStream</code>的<code>appendBytes</code>方法把获取到的数据添加到流里面。这样，我们可以对数据的传输进行更精确的控制。</p>\n<p><code>play</code>方法最简单的用法就是传入一个本地或者Web URL，后面的数据加载就交给<code>NetStream</code>的内部实现了。我们也可以传入一个<code>null</code>，这时<code>NetStream</code>就启动“数据生成模式”。在这个模式下面，调用<code>appendBytes</code>方法就可以把二进制数据添加到流中。</p>\n<p>要注意的是，在构造<code>NetStream</code>对象的时候需要在调用<code>NetConnection</code>的<code>connect</code>方法传入一个<code>null</code>。</p>\n<p>然后我们就可以从网络或者其他任意地方读取二进制数据，调用<code>appendBytes</code>把它们加入到这个流中播放：</p>\n<pre><code>var MyNC:NetConnection = new NetConnection();\nMyNC.connect(null);\n\nvar MyNS:NetStream = new NetStream(MyNC);\nMyVideo.attachNetStream(MyNS);\nMyNS.play(null);\nMyNS.appendBytes(ba);\n</code></pre><p>注意，在<code>appendBytes</code>执行后续调用之前，字节分析程序可能无法完整地解码对<code>appendBytes</code>的调用。</p>\n<p>通过这种播放方式，我们可以先把视频加载到内从，校验视频内容（MD5等），然后直接把这些二进制数据加载到流中播放，这样播放的时候就不需要再从网络或者本地文件系统中加载数据了。</p>\n"}