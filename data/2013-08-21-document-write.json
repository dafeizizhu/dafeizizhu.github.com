{"year":"2013","month":"08","day":"21","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/08/21/document-write.html","fileName":"document-write","layout":"post","title":"document.write","description":"","tags":["JavaScript"],"markdownText":"\n\n\n说到`document.write`，在之前的工作中都不会使用到，有几个原因：一个是不需要，可以通过DOM原生的或者jQuery的相关方法动态增加DOM元素；第二个原因是在文档已经被加载完毕之后再调用`document.write`会导致整个文档被重写，像以下的代码：\n\n    <div id=\"clickme\">Click me!</div>\n    <script>\n      document.write(\"<div>Hello World</div>\")\n      window.onload = function () {\n        document.getElementById(\"clickme\").onclick = function () {\n          document.write(\"<div>I write after document.loaded!</div>\");\n        };\n      }\n    </script>\n\n单击按钮之后之前写入的`Hello World`会被清除，只剩下调用`document.write`输出的那一行HTML代码。\n\n但是在展现型的页面，我发现经常都会使用这个方法来做一些输出，例如说广告、页脚等与页面内容关系不大的内容。这样做的好处可能是可以把一些与整个页面没有太大关系的内容独立到一个JavaScript文件里面去，类似于一些服务器脚本的`include`方法实现的效果。\n\n这个方法适用于各种类型的DOM（包括XML和HTML等）。\n\n> Writes a string of text to a document stream opened by document.open().\n\n这个方法接受一个参数（也可以是可变参数列表，会把所有参数都连接起来），就是要输出的字符串（可以包含标签）。\n\n为什么在文档完成加载的时候再调用`document.write`会导致文档内容被清除，是因为**调用`document.write`的之前没有调用`document.open`，`open`会被自动调用一次**。就是这个`open`导致文档内容被清除。有一个特例，当JavaScript代码是内嵌在`script`标签里面的话，`document.open`不会被执行。\n\n完成写入之后最好调用`document.close`来告诉浏览器写入完成。\n\n**注意，在MIME类型为`application/xhtml+xml`的情况下，调用`document.write`会抛出错误。**详细情况请[参考这里](http://www.w3.org/MarkUp/2004/xhtml-faq#docwrite)。\n\n最后是一个为了使调用`document.write`不要清除文档之前内容的例子，请[参考这里](http://www.cnblogs.com/hongcaomao/archive/2012/03/27/javascript_loadad.html)。\n","htmlText":"<p>说到<code>document.write</code>，在之前的工作中都不会使用到，有几个原因：一个是不需要，可以通过DOM原生的或者jQuery的相关方法动态增加DOM元素；第二个原因是在文档已经被加载完毕之后再调用<code>document.write</code>会导致整个文档被重写，像以下的代码：</p>\n<pre><code>&lt;div id=&quot;clickme&quot;&gt;Click me!&lt;/div&gt;\n&lt;script&gt;\n  document.write(&quot;&lt;div&gt;Hello World&lt;/div&gt;&quot;)\n  window.onload = function () {\n    document.getElementById(&quot;clickme&quot;).onclick = function () {\n      document.write(&quot;&lt;div&gt;I write after document.loaded!&lt;/div&gt;&quot;);\n    };\n  }\n&lt;/script&gt;\n</code></pre><p>单击按钮之后之前写入的<code>Hello World</code>会被清除，只剩下调用<code>document.write</code>输出的那一行HTML代码。</p>\n<p>但是在展现型的页面，我发现经常都会使用这个方法来做一些输出，例如说广告、页脚等与页面内容关系不大的内容。这样做的好处可能是可以把一些与整个页面没有太大关系的内容独立到一个JavaScript文件里面去，类似于一些服务器脚本的<code>include</code>方法实现的效果。</p>\n<p>这个方法适用于各种类型的DOM（包括XML和HTML等）。</p>\n<blockquote>\n<p>Writes a string of text to a document stream opened by document.open().</p>\n</blockquote>\n<p>这个方法接受一个参数（也可以是可变参数列表，会把所有参数都连接起来），就是要输出的字符串（可以包含标签）。</p>\n<p>为什么在文档完成加载的时候再调用<code>document.write</code>会导致文档内容被清除，是因为<strong>调用<code>document.write</code>的之前没有调用<code>document.open</code>，<code>open</code>会被自动调用一次</strong>。就是这个<code>open</code>导致文档内容被清除。有一个特例，当JavaScript代码是内嵌在<code>script</code>标签里面的话，<code>document.open</code>不会被执行。</p>\n<p>完成写入之后最好调用<code>document.close</code>来告诉浏览器写入完成。</p>\n<p><strong>注意，在MIME类型为<code>application/xhtml+xml</code>的情况下，调用<code>document.write</code>会抛出错误。</strong>详细情况请<a href=\"http://www.w3.org/MarkUp/2004/xhtml-faq#docwrite\">参考这里</a>。</p>\n<p>最后是一个为了使调用<code>document.write</code>不要清除文档之前内容的例子，请<a href=\"http://www.cnblogs.com/hongcaomao/archive/2012/03/27/javascript_loadad.html\">参考这里</a>。</p>\n","summaryMarkdownText":"\n\n\n说到`document.write`，在之前的工作中都不会使用到，有几个原因：一个是不需要，可以通过DOM原生的或者jQuery的相关方法动态增加DOM元素；第二个原因是在文档已经被加载完毕之后再调用`document.write`会导致整个文档被重写，像以下的代码：\n\n    <div id=\"clickme\">Click me!</div>\n    <script>\n      document.write(\"<div>Hello World</div>\")\n      window.onload = function () {\n        document.getElementById(\"clickme\").onclick = function () {\n          document.write(\"<div>I write after document.loaded!</div>\");\n        };\n      }\n    </script>\n\n单击按钮之后之前写入的`Hello World`会被清除，只剩下调用`document.write`输出的那一行HTML代码。\n\n但是在展现型的页面，我发现经常都会使用这个方法来做一些输出，例如说广告、页脚等与页面内容关系不大的内容。这样做的好处可能是可以把一些与整个页面没有太大关系的内容独立到一个JavaScript文件里面去，类似于一些服务器脚本的`include`方法实现的效果。\n\n这个方法适用于各种类型的DOM（包括XML和HTML等）。\n\n> Writes a string of text to a document stream opened by document.open().\n\n这个方法接受一个参数（也可以是可变参数列表，会把所有参数都连接起来），就是要输出的字符串（可以包含标签）。\n","summaryHtmlText":"<p>说到<code>document.write</code>，在之前的工作中都不会使用到，有几个原因：一个是不需要，可以通过DOM原生的或者jQuery的相关方法动态增加DOM元素；第二个原因是在文档已经被加载完毕之后再调用<code>document.write</code>会导致整个文档被重写，像以下的代码：</p>\n<pre><code>&lt;div id=&quot;clickme&quot;&gt;Click me!&lt;/div&gt;\n&lt;script&gt;\n  document.write(&quot;&lt;div&gt;Hello World&lt;/div&gt;&quot;)\n  window.onload = function () {\n    document.getElementById(&quot;clickme&quot;).onclick = function () {\n      document.write(&quot;&lt;div&gt;I write after document.loaded!&lt;/div&gt;&quot;);\n    };\n  }\n&lt;/script&gt;\n</code></pre><p>单击按钮之后之前写入的<code>Hello World</code>会被清除，只剩下调用<code>document.write</code>输出的那一行HTML代码。</p>\n<p>但是在展现型的页面，我发现经常都会使用这个方法来做一些输出，例如说广告、页脚等与页面内容关系不大的内容。这样做的好处可能是可以把一些与整个页面没有太大关系的内容独立到一个JavaScript文件里面去，类似于一些服务器脚本的<code>include</code>方法实现的效果。</p>\n<p>这个方法适用于各种类型的DOM（包括XML和HTML等）。</p>\n<blockquote>\n<p>Writes a string of text to a document stream opened by document.open().</p>\n</blockquote>\n<p>这个方法接受一个参数（也可以是可变参数列表，会把所有参数都连接起来），就是要输出的字符串（可以包含标签）。</p>\n"}