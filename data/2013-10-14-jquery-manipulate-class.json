{"year":"2013","month":"10","day":"14","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/10/14/jquery-manipulate-class.html","fileName":"jquery-manipulate-class","layout":"post","title":"jQuery扫盲之处理class","description":"","tags":["JavaScript","jQuery"],"markdownText":"\n\n\n这个class当然是指HTML上面的class了！今天看一些jQuery有关操作DOM的class的一些方法，就是增删改查它们！\n\n### jQuery.fn.addClass\n____\n\n> Adds the specified class(es) to each of the set of matched elements.\n\n为DOM加上特定的class，该方法接受一个参数，但是可以传入两种不同的参数：\n\n1. `className`，要增加的class的名字，可以是多个，用空格分开。\n2. `function(index, currentClass)`，一个回调函数，返回一个字符串，增加字符串指定的class。回调函数接受的参数，`index`是当前jQuery对象的索引，而`currentClass`则为当前的class，也可以有多个，用空格隔开。\n\n不用担心重复，jQuery已经做了这些工作，所以重复增加相同的class是没有问题的。\n\n### jQuery.fn.removeClass\n____\n\n> remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n这个方法接受的参数跟`addClass`一模一样。有一个要注意的是，如果什么都不传入，则会把元素上的所有class都删掉，如：\n\n    $(elem).removeClass(); // remove all class\n\n如果需要替换class，jQuery建议直接使用`jQuery.fn.attr`方法：\n\n    $(elem).attr( \"class\", \"newClass\" );\n\n### jQuery.fn.hasClass\n____\n\n> Determine whether any of the matched elements are assigned the given class.\n\n判断给定的class是否存在，接受一个参数，就是给定的class的名字，也可以是多个用空格隔开。只要存在这个class，则会返回`true`，无论是否有其他的class。\n\n### jQuery.fn.toggleClass\n____\n\n> Add or remove one or more classes from each element in the set of matched elements, depending on either the class's presence or the value of the switch argument.\n\n这个是最有趣的方法了，它会判断该元素是否有给定的class而决定是增加还是删除这些class。这个方法有四种传输参数的形式：\n\n1. `className`，一个或者多个class的名字。\n2. `className`和`switch`，其中`switch`表示这次操作是要增加还是删除class。注意，这个值要是布尔值而不仅仅是表示`true`或者`false`的值。\n3. `switch`，可选的，即可以不传任何参数调用`toggleClass`。只传入一个`switch`表示要toggle所有的class。\n4. `function(index, class, switch)`和`switch`，第一个参数是一个回调函数，返回需要toggle的class的名字。\n","htmlText":"<p>这个class当然是指HTML上面的class了！今天看一些jQuery有关操作DOM的class的一些方法，就是增删改查它们！</p>\n<h3 id=\"jquery-fn-addclass\">jQuery.fn.addClass</h3>\n<hr>\n<blockquote>\n<p>Adds the specified class(es) to each of the set of matched elements.</p>\n</blockquote>\n<p>为DOM加上特定的class，该方法接受一个参数，但是可以传入两种不同的参数：</p>\n<ol>\n<li><code>className</code>，要增加的class的名字，可以是多个，用空格分开。</li>\n<li><code>function(index, currentClass)</code>，一个回调函数，返回一个字符串，增加字符串指定的class。回调函数接受的参数，<code>index</code>是当前jQuery对象的索引，而<code>currentClass</code>则为当前的class，也可以有多个，用空格隔开。</li>\n</ol>\n<p>不用担心重复，jQuery已经做了这些工作，所以重复增加相同的class是没有问题的。</p>\n<h3 id=\"jquery-fn-removeclass\">jQuery.fn.removeClass</h3>\n<hr>\n<blockquote>\n<p>remove a single class, multiple classes, or all classes from each element in the set of matched elements.</p>\n</blockquote>\n<p>这个方法接受的参数跟<code>addClass</code>一模一样。有一个要注意的是，如果什么都不传入，则会把元素上的所有class都删掉，如：</p>\n<pre><code>$(elem).removeClass(); // remove all class\n</code></pre><p>如果需要替换class，jQuery建议直接使用<code>jQuery.fn.attr</code>方法：</p>\n<pre><code>$(elem).attr( &quot;class&quot;, &quot;newClass&quot; );\n</code></pre><h3 id=\"jquery-fn-hasclass\">jQuery.fn.hasClass</h3>\n<hr>\n<blockquote>\n<p>Determine whether any of the matched elements are assigned the given class.</p>\n</blockquote>\n<p>判断给定的class是否存在，接受一个参数，就是给定的class的名字，也可以是多个用空格隔开。只要存在这个class，则会返回<code>true</code>，无论是否有其他的class。</p>\n<h3 id=\"jquery-fn-toggleclass\">jQuery.fn.toggleClass</h3>\n<hr>\n<blockquote>\n<p>Add or remove one or more classes from each element in the set of matched elements, depending on either the class&#39;s presence or the value of the switch argument.</p>\n</blockquote>\n<p>这个是最有趣的方法了，它会判断该元素是否有给定的class而决定是增加还是删除这些class。这个方法有四种传输参数的形式：</p>\n<ol>\n<li><code>className</code>，一个或者多个class的名字。</li>\n<li><code>className</code>和<code>switch</code>，其中<code>switch</code>表示这次操作是要增加还是删除class。注意，这个值要是布尔值而不仅仅是表示<code>true</code>或者<code>false</code>的值。</li>\n<li><code>switch</code>，可选的，即可以不传任何参数调用<code>toggleClass</code>。只传入一个<code>switch</code>表示要toggle所有的class。</li>\n<li><code>function(index, class, switch)</code>和<code>switch</code>，第一个参数是一个回调函数，返回需要toggle的class的名字。</li>\n</ol>\n","summaryMarkdownText":"\n\n\n这个class当然是指HTML上面的class了！今天看一些jQuery有关操作DOM的class的一些方法，就是增删改查它们！\n\n### jQuery.fn.addClass\n____\n\n> Adds the specified class(es) to each of the set of matched elements.\n\n为DOM加上特定的class，该方法接受一个参数，但是可以传入两种不同的参数：\n\n1. `className`，要增加的class的名字，可以是多个，用空格分开。\n2. `function(index, currentClass)`，一个回调函数，返回一个字符串，增加字符串指定的class。回调函数接受的参数，`index`是当前jQuery对象的索引，而`currentClass`则为当前的class，也可以有多个，用空格隔开。\n\n不用担心重复，jQuery已经做了这些工作，所以重复增加相同的class是没有问题的。\n\n### jQuery.fn.removeClass\n____\n\n> remove a single class, multiple classes, or all classes from each element in the set of matched elements.\n\n这个方法接受的参数跟`addClass`一模一样。有一个要注意的是，如果什么都不传入，则会把元素上的所有class都删掉，如：\n\n    $(elem).removeClass(); // remove all class","summaryHtmlText":"<p>这个class当然是指HTML上面的class了！今天看一些jQuery有关操作DOM的class的一些方法，就是增删改查它们！</p>\n<h3 id=\"jquery-fn-addclass\">jQuery.fn.addClass</h3>\n<hr>\n<blockquote>\n<p>Adds the specified class(es) to each of the set of matched elements.</p>\n</blockquote>\n<p>为DOM加上特定的class，该方法接受一个参数，但是可以传入两种不同的参数：</p>\n<ol>\n<li><code>className</code>，要增加的class的名字，可以是多个，用空格分开。</li>\n<li><code>function(index, currentClass)</code>，一个回调函数，返回一个字符串，增加字符串指定的class。回调函数接受的参数，<code>index</code>是当前jQuery对象的索引，而<code>currentClass</code>则为当前的class，也可以有多个，用空格隔开。</li>\n</ol>\n<p>不用担心重复，jQuery已经做了这些工作，所以重复增加相同的class是没有问题的。</p>\n<h3 id=\"jquery-fn-removeclass\">jQuery.fn.removeClass</h3>\n<hr>\n<blockquote>\n<p>remove a single class, multiple classes, or all classes from each element in the set of matched elements.</p>\n</blockquote>\n<p>这个方法接受的参数跟<code>addClass</code>一模一样。有一个要注意的是，如果什么都不传入，则会把元素上的所有class都删掉，如：</p>\n<pre><code>$(elem).removeClass(); // remove all class\n</code></pre>"}