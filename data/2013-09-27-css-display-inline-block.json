{"year":"2013","month":"09","day":"27","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/09/27/css-display-inline-block.html","fileName":"css-display-inline-block","layout":"post","title":"消除display: inline-block引起的元素之间的缝隙","description":"","tags":["css"],"markdownText":"\n\n\n记得以前在看bootstrap的例子的时候，发现它的按钮之间都是有空隙的。检查元素的样式，发现并没有任何`margin`被设置了，那为什么会出现空隙呢？\n\n先来看看`display: inline-block`干了些什么。\n\n> The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would).\n\n简单地说就是一个行级的块元素，即像行内元素一样排版，但又可以像块元素一样设置元素的大小。我们可以尝试用`inline-block`去模拟一个浮动的效果：\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/embedded/result,html,css/\" frameborder=\"0\"> </iframe>\n\n惊讶地发现，元素之间竟然出现了缝隙！查看代码并没有任何`margin`被设置了，跟bootstrap中的情况一样。其实非常简单，就是元素被当成行内元素排版的时候，元素之间的空白符（空格、回车换行等）都会被浏览器处理，根据`white-space`的处理方式（默认是`normal`，合并多余空白），原来HTML代码中的回车换行被转成一个空白符，所以元素之间就出现了空隙。\n\n有时候加入这些空隙是好事，例如并排显示多个按钮，按钮之间留有一定空隙是比较好看的。但是，有时候为了完美地实现设计搞，元素之间的空隙都要精确限制。由于这个空隙是一个空白符，占用的空间跟父元素的`font-size`有之间关系，所以这个空隙的大小是不可控的。这时候，要先消除这些空隙，再根据设计搞设置精确的`margin`。\n\n上网查了一下，最有效的办法就是在父元素中设置`font-size: 0`，然后在子元素上重置正确的`font-size`：\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/1/embedded/result,html,css/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"> </iframe>\n\n又到了我们可爱的IE出场的时间了。很遗憾，虽然IE从5.5就开始支持`display: inline-block`，但是它的实现跟标准实现的表现是不一致的。我们需要以下的代码让IE的表现跟标准趋于一致：\n\n    display:inline-block; /* 现代浏览器 +IE6、7 inline 元素 */\n    *display:inline; /* IE6、7 block 元素 */\n    *zoom:1;\n\n其中`zoom`就是为了触发IE的`hasLayout`。以下这个例子能在IE6上实现类似的效果：\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/2/embedded/result,html,css/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"> </iframe>\n\n\n其实要消除这个空隙还有一个非常简单的方法，就是**把所有回车换行都删掉**！这样意味着这些代码都要写成一行！哎呀，这样牺牲可读性貌似有点大，所以可以这样：\n\n1. 使用以上的方法去消除元素之间的空隙。\n2. 在发布的时候用工具除去HTML的所有空白。这个方案意味着需要有一个类似watcher的东西，在开发的时候实时地进行预处理去查看效果。\n\n参考资料：\n\n1. [display](https://developer.mozilla.org/en-US/docs/Web/CSS/display)\n2. [inline-block 前世今生](http://www.iyunlu.com/view/css-xhtml/64.html)\n","htmlText":"<p>记得以前在看bootstrap的例子的时候，发现它的按钮之间都是有空隙的。检查元素的样式，发现并没有任何<code>margin</code>被设置了，那为什么会出现空隙呢？</p>\n<p>先来看看<code>display: inline-block</code>干了些什么。</p>\n<blockquote>\n<p>The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would).</p>\n</blockquote>\n<p>简单地说就是一个行级的块元素，即像行内元素一样排版，但又可以像块元素一样设置元素的大小。我们可以尝试用<code>inline-block</code>去模拟一个浮动的效果：</p>\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/embedded/result,html,css/\" frameborder=\"0\"> </iframe>\n\n<p>惊讶地发现，元素之间竟然出现了缝隙！查看代码并没有任何<code>margin</code>被设置了，跟bootstrap中的情况一样。其实非常简单，就是元素被当成行内元素排版的时候，元素之间的空白符（空格、回车换行等）都会被浏览器处理，根据<code>white-space</code>的处理方式（默认是<code>normal</code>，合并多余空白），原来HTML代码中的回车换行被转成一个空白符，所以元素之间就出现了空隙。</p>\n<p>有时候加入这些空隙是好事，例如并排显示多个按钮，按钮之间留有一定空隙是比较好看的。但是，有时候为了完美地实现设计搞，元素之间的空隙都要精确限制。由于这个空隙是一个空白符，占用的空间跟父元素的<code>font-size</code>有之间关系，所以这个空隙的大小是不可控的。这时候，要先消除这些空隙，再根据设计搞设置精确的<code>margin</code>。</p>\n<p>上网查了一下，最有效的办法就是在父元素中设置<code>font-size: 0</code>，然后在子元素上重置正确的<code>font-size</code>：</p>\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/1/embedded/result,html,css/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"> </iframe>\n\n<p>又到了我们可爱的IE出场的时间了。很遗憾，虽然IE从5.5就开始支持<code>display: inline-block</code>，但是它的实现跟标准实现的表现是不一致的。我们需要以下的代码让IE的表现跟标准趋于一致：</p>\n<pre><code>display:inline-block; /* 现代浏览器 +IE6、7 inline 元素 */\n*display:inline; /* IE6、7 block 元素 */\n*zoom:1;\n</code></pre><p>其中<code>zoom</code>就是为了触发IE的<code>hasLayout</code>。以下这个例子能在IE6上实现类似的效果：</p>\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/2/embedded/result,html,css/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"> </iframe>\n\n\n<p>其实要消除这个空隙还有一个非常简单的方法，就是<strong>把所有回车换行都删掉</strong>！这样意味着这些代码都要写成一行！哎呀，这样牺牲可读性貌似有点大，所以可以这样：</p>\n<ol>\n<li>使用以上的方法去消除元素之间的空隙。</li>\n<li>在发布的时候用工具除去HTML的所有空白。这个方案意味着需要有一个类似watcher的东西，在开发的时候实时地进行预处理去查看效果。</li>\n</ol>\n<p>参考资料：</p>\n<ol>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\">display</a></li>\n<li><a href=\"http://www.iyunlu.com/view/css-xhtml/64.html\">inline-block 前世今生</a></li>\n</ol>\n","summaryMarkdownText":"\n\n\n记得以前在看bootstrap的例子的时候，发现它的按钮之间都是有空隙的。检查元素的样式，发现并没有任何`margin`被设置了，那为什么会出现空隙呢？\n\n先来看看`display: inline-block`干了些什么。\n\n> The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would).\n\n简单地说就是一个行级的块元素，即像行内元素一样排版，但又可以像块元素一样设置元素的大小。我们可以尝试用`inline-block`去模拟一个浮动的效果：\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/embedded/result,html,css/\" frameborder=\"0\"> </iframe>\n\n惊讶地发现，元素之间竟然出现了缝隙！查看代码并没有任何`margin`被设置了，跟bootstrap中的情况一样。其实非常简单，就是元素被当成行内元素排版的时候，元素之间的空白符（空格、回车换行等）都会被浏览器处理，根据`white-space`的处理方式（默认是`normal`，合并多余空白），原来HTML代码中的回车换行被转成一个空白符，所以元素之间就出现了空隙。\n\n有时候加入这些空隙是好事，例如并排显示多个按钮，按钮之间留有一定空隙是比较好看的。但是，有时候为了完美地实现设计搞，元素之间的空隙都要精确限制。由于这个空隙是一个空白符，占用的空间跟父元素的`font-size`有之间关系，所以这个空隙的大小是不可控的。这时候，要先消除这些空隙，再根据设计搞设置精确的`margin`。\n\n上网查了一下，最有效的办法就是在父元素中设置`font-size: 0`，然后在子元素上重置正确的`font-size`：\n\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/1/embedded/result,html,css/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"> </iframe>\n\n又到了我们可爱的IE出场的时间了。很遗憾，虽然IE从5.5就开始支持`display: inline-block`，但是它的实现跟标准实现的表现是不一致的。我们需要以下的代码让IE的表现跟标准趋于一致：\n\n    display:inline-block; /* 现代浏览器 +IE6、7 inline 元素 */\n    *display:inline; /* IE6、7 block 元素 */","summaryHtmlText":"<p>记得以前在看bootstrap的例子的时候，发现它的按钮之间都是有空隙的。检查元素的样式，发现并没有任何<code>margin</code>被设置了，那为什么会出现空隙呢？</p>\n<p>先来看看<code>display: inline-block</code>干了些什么。</p>\n<blockquote>\n<p>The element generates a block element box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would).</p>\n</blockquote>\n<p>简单地说就是一个行级的块元素，即像行内元素一样排版，但又可以像块元素一样设置元素的大小。我们可以尝试用<code>inline-block</code>去模拟一个浮动的效果：</p>\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/embedded/result,html,css/\" frameborder=\"0\"> </iframe>\n\n<p>惊讶地发现，元素之间竟然出现了缝隙！查看代码并没有任何<code>margin</code>被设置了，跟bootstrap中的情况一样。其实非常简单，就是元素被当成行内元素排版的时候，元素之间的空白符（空格、回车换行等）都会被浏览器处理，根据<code>white-space</code>的处理方式（默认是<code>normal</code>，合并多余空白），原来HTML代码中的回车换行被转成一个空白符，所以元素之间就出现了空隙。</p>\n<p>有时候加入这些空隙是好事，例如并排显示多个按钮，按钮之间留有一定空隙是比较好看的。但是，有时候为了完美地实现设计搞，元素之间的空隙都要精确限制。由于这个空隙是一个空白符，占用的空间跟父元素的<code>font-size</code>有之间关系，所以这个空隙的大小是不可控的。这时候，要先消除这些空隙，再根据设计搞设置精确的<code>margin</code>。</p>\n<p>上网查了一下，最有效的办法就是在父元素中设置<code>font-size: 0</code>，然后在子元素上重置正确的<code>font-size</code>：</p>\n<iframe width=\"100%\" height=\"300\" src=\"http://jsfiddle.net/e6EQ9/1/embedded/result,html,css/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"> </iframe>\n\n<p>又到了我们可爱的IE出场的时间了。很遗憾，虽然IE从5.5就开始支持<code>display: inline-block</code>，但是它的实现跟标准实现的表现是不一致的。我们需要以下的代码让IE的表现跟标准趋于一致：</p>\n<pre><code>display:inline-block; /* 现代浏览器 +IE6、7 inline 元素 */\n*display:inline; /* IE6、7 block 元素 */\n</code></pre>"}