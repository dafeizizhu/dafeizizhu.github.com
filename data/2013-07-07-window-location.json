{"year":"2013","month":"07","day":"07","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/07/07/window-location.html","fileName":"window-location","layout":"post","title":"window.location 浅析","description":"","tags":["JavaScript"],"markdownText":"\n\n国际惯例，先看看`window.location`在w3schools的简单描述：\n\n> The window.location object can be used to get the current page address (URL) and to redirect the browser to a new page.\n\n简单地说，这个对象就是用来获取页面的URL，控制页面跳转等功能。\n\n### 属性\n\n可以通过以下属性获取关于当前页面路径的信息，也可以设置某些属性跳转到新的url上面。\n\n1. `hash`，url中跟着`#`的内容，包含`#`。注意，**如果`#`后面没用东西或者没有`#`，则这个属性的值是空字符串**。还可以绑定`hashchange`事件监听`hash`变化。\n2. `host`，由url的主机名称`hostname`跟端口`port`组成的字符串。\n3. `hostname`，url的主机名称。注意，**在Chrome跟Safari是包括括号的（IPv6的情况），而IE跟FireFox则不包括括号**。\n4. `href`，完整的url。\n5. `pathname`，相对于主机名的路径。\n6. `port`，url的端口号。如果使用的是默认端口（80），则这个属性的值是空字符串。\n7. `protocol`，url的协议。\n8. `search`，url中跟着`?`的内容，包含`?`。\n9. `orign`，由url的协议、主机名跟端口组成的字符串。目前只有Chrome跟FireFox 21支持这个属性。\n\n### 方法\n\n1. `assign(url)`，将当前页面跳转到指定的url。\n2. `reload(forceget)`，重新加载当前页面。如果`forceget`跟true，则会强制从服务器刷新，否则浏览器可能会读取缓存。\n3. `replace(url)`，与`assign`方法类似，唯一不同的是`replace`不会留下历史记录，意味着跳转后不能使用浏览器的后退功能返回前一个页面。\n4. `toString`，返回完整的url（`href`）。\n\n[参考这里](https://developer.mozilla.org/en-US/docs/Web/API/window.location#Properties)。\n\n说到`window.location`的作用，不得不提到Ajax。在Ajax泛滥的今天，影响最大之一的就是收藏夹。传统HTML页面，一个URL会对应一个页面，页面的内容是固定的。Ajax应用中，一个页面，可能会根据用户的行为而产生不同的内容（无论是形式上还是传统的内容上）。如何去收藏经过用户操作之后的Ajax应用页面呢？其中一个比较好的办法就是使用`window.location.hash`这个属性，记录用户的简单操作。当用户操作时，记录一个简单的hash。当页面初始化时，根据hash判断Ajax应用的状态，可以基本实现收藏夹的功能，下面举个例子（完整代码[参考这里](http://jsfiddle.net/GeYw8/1/show/)）：\n\n    <a id=\"a1\" href=\"#\">Click A1</a>\n    <a id=\"a2\" href=\"#\">Click A2</a>\n    <div id=\"content\"></div>\n    \n\n\n    var hash = window.location.hash || \"#status1\";\n    var text = \"\";\n        \n    switch (hash) {\n        case \"#status1\":\n            text = \"This is Status1\";\n            break;\n        case \"#status2\":\n            text = \"This is Status2\";\n            break;\n    }\n    \n    $(\"#content\").html(text);\n    \n    $(\"#a1\").click(function (evt) {\n        window.location.hash = \"#status1\";\n        $(\"#content\").html(\"This is Status1\");\n        evt.preventDefault();\n    });\n    \n    $(\"#a2\").click(function (evt) {\n        window.location.hash = \"#status2\";\n        $(\"#content\").html(\"This is Status2\");\n        evt.preventDefault();\n    });\n","htmlText":"<p>国际惯例，先看看<code>window.location</code>在w3schools的简单描述：</p>\n<blockquote>\n<p>The window.location object can be used to get the current page address (URL) and to redirect the browser to a new page.</p>\n</blockquote>\n<p>简单地说，这个对象就是用来获取页面的URL，控制页面跳转等功能。</p>\n<h3 id=\"-\">属性</h3>\n<p>可以通过以下属性获取关于当前页面路径的信息，也可以设置某些属性跳转到新的url上面。</p>\n<ol>\n<li><code>hash</code>，url中跟着<code>#</code>的内容，包含<code>#</code>。注意，<strong>如果<code>#</code>后面没用东西或者没有<code>#</code>，则这个属性的值是空字符串</strong>。还可以绑定<code>hashchange</code>事件监听<code>hash</code>变化。</li>\n<li><code>host</code>，由url的主机名称<code>hostname</code>跟端口<code>port</code>组成的字符串。</li>\n<li><code>hostname</code>，url的主机名称。注意，<strong>在Chrome跟Safari是包括括号的（IPv6的情况），而IE跟FireFox则不包括括号</strong>。</li>\n<li><code>href</code>，完整的url。</li>\n<li><code>pathname</code>，相对于主机名的路径。</li>\n<li><code>port</code>，url的端口号。如果使用的是默认端口（80），则这个属性的值是空字符串。</li>\n<li><code>protocol</code>，url的协议。</li>\n<li><code>search</code>，url中跟着<code>?</code>的内容，包含<code>?</code>。</li>\n<li><code>orign</code>，由url的协议、主机名跟端口组成的字符串。目前只有Chrome跟FireFox 21支持这个属性。</li>\n</ol>\n<h3 id=\"-\">方法</h3>\n<ol>\n<li><code>assign(url)</code>，将当前页面跳转到指定的url。</li>\n<li><code>reload(forceget)</code>，重新加载当前页面。如果<code>forceget</code>跟true，则会强制从服务器刷新，否则浏览器可能会读取缓存。</li>\n<li><code>replace(url)</code>，与<code>assign</code>方法类似，唯一不同的是<code>replace</code>不会留下历史记录，意味着跳转后不能使用浏览器的后退功能返回前一个页面。</li>\n<li><code>toString</code>，返回完整的url（<code>href</code>）。</li>\n</ol>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.location#Properties\">参考这里</a>。</p>\n<p>说到<code>window.location</code>的作用，不得不提到Ajax。在Ajax泛滥的今天，影响最大之一的就是收藏夹。传统HTML页面，一个URL会对应一个页面，页面的内容是固定的。Ajax应用中，一个页面，可能会根据用户的行为而产生不同的内容（无论是形式上还是传统的内容上）。如何去收藏经过用户操作之后的Ajax应用页面呢？其中一个比较好的办法就是使用<code>window.location.hash</code>这个属性，记录用户的简单操作。当用户操作时，记录一个简单的hash。当页面初始化时，根据hash判断Ajax应用的状态，可以基本实现收藏夹的功能，下面举个例子（完整代码<a href=\"http://jsfiddle.net/GeYw8/1/show/\">参考这里</a>）：</p>\n<pre><code>&lt;a id=&quot;a1&quot; href=&quot;#&quot;&gt;Click A1&lt;/a&gt;\n&lt;a id=&quot;a2&quot; href=&quot;#&quot;&gt;Click A2&lt;/a&gt;\n&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;\n\n\n\nvar hash = window.location.hash || &quot;#status1&quot;;\nvar text = &quot;&quot;;\n\nswitch (hash) {\n    case &quot;#status1&quot;:\n        text = &quot;This is Status1&quot;;\n        break;\n    case &quot;#status2&quot;:\n        text = &quot;This is Status2&quot;;\n        break;\n}\n\n$(&quot;#content&quot;).html(text);\n\n$(&quot;#a1&quot;).click(function (evt) {\n    window.location.hash = &quot;#status1&quot;;\n    $(&quot;#content&quot;).html(&quot;This is Status1&quot;);\n    evt.preventDefault();\n});\n\n$(&quot;#a2&quot;).click(function (evt) {\n    window.location.hash = &quot;#status2&quot;;\n    $(&quot;#content&quot;).html(&quot;This is Status2&quot;);\n    evt.preventDefault();\n});\n</code></pre>","summaryMarkdownText":"\n\n国际惯例，先看看`window.location`在w3schools的简单描述：\n\n> The window.location object can be used to get the current page address (URL) and to redirect the browser to a new page.\n\n简单地说，这个对象就是用来获取页面的URL，控制页面跳转等功能。\n\n### 属性\n\n可以通过以下属性获取关于当前页面路径的信息，也可以设置某些属性跳转到新的url上面。\n\n1. `hash`，url中跟着`#`的内容，包含`#`。注意，**如果`#`后面没用东西或者没有`#`，则这个属性的值是空字符串**。还可以绑定`hashchange`事件监听`hash`变化。\n2. `host`，由url的主机名称`hostname`跟端口`port`组成的字符串。\n3. `hostname`，url的主机名称。注意，**在Chrome跟Safari是包括括号的（IPv6的情况），而IE跟FireFox则不包括括号**。\n4. `href`，完整的url。\n5. `pathname`，相对于主机名的路径。\n6. `port`，url的端口号。如果使用的是默认端口（80），则这个属性的值是空字符串。\n7. `protocol`，url的协议。\n8. `search`，url中跟着`?`的内容，包含`?`。\n9. `orign`，由url的协议、主机名跟端口组成的字符串。目前只有Chrome跟FireFox 21支持这个属性。\n\n### 方法\n\n1. `assign(url)`，将当前页面跳转到指定的url。","summaryHtmlText":"<p>国际惯例，先看看<code>window.location</code>在w3schools的简单描述：</p>\n<blockquote>\n<p>The window.location object can be used to get the current page address (URL) and to redirect the browser to a new page.</p>\n</blockquote>\n<p>简单地说，这个对象就是用来获取页面的URL，控制页面跳转等功能。</p>\n<h3 id=\"-\">属性</h3>\n<p>可以通过以下属性获取关于当前页面路径的信息，也可以设置某些属性跳转到新的url上面。</p>\n<ol>\n<li><code>hash</code>，url中跟着<code>#</code>的内容，包含<code>#</code>。注意，<strong>如果<code>#</code>后面没用东西或者没有<code>#</code>，则这个属性的值是空字符串</strong>。还可以绑定<code>hashchange</code>事件监听<code>hash</code>变化。</li>\n<li><code>host</code>，由url的主机名称<code>hostname</code>跟端口<code>port</code>组成的字符串。</li>\n<li><code>hostname</code>，url的主机名称。注意，<strong>在Chrome跟Safari是包括括号的（IPv6的情况），而IE跟FireFox则不包括括号</strong>。</li>\n<li><code>href</code>，完整的url。</li>\n<li><code>pathname</code>，相对于主机名的路径。</li>\n<li><code>port</code>，url的端口号。如果使用的是默认端口（80），则这个属性的值是空字符串。</li>\n<li><code>protocol</code>，url的协议。</li>\n<li><code>search</code>，url中跟着<code>?</code>的内容，包含<code>?</code>。</li>\n<li><code>orign</code>，由url的协议、主机名跟端口组成的字符串。目前只有Chrome跟FireFox 21支持这个属性。</li>\n</ol>\n<h3 id=\"-\">方法</h3>\n<ol>\n<li><code>assign(url)</code>，将当前页面跳转到指定的url。</li>\n</ol>\n"}