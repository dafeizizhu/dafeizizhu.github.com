{"year":"2013","month":"12","day":"09","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/12/09/flash-crossdomain-xml.html","fileName":"flash-crossdomain-xml","layout":"post","title":"crossdomain.xml","description":"","tags":["Flash"],"markdownText":"\n\n\n`crossdomain.xml`是Flash授权一个客户端（Flash Player等）跨域访问数据的一个策略文件。当一个客户端请求不属于其所在域的资源时，远程服务器需要有一个`crossdomain.xml`文件去判断这个客户端所在的域是否有权限去访问这个资源。\n\n一个简单的`crossdomain.xml`的例子如下：\n\n    <?xml version=\"1.0\"?>\t\n    <!DOCTYPE cross-domain-policy SYSTEM \"http://www.adobe.com/xml/dtds/cross-domain-policy.dtd\">\n    <cross-domain-policy>\n      <site-control permitted-cross-domain-policies=\"master-only\"/>\n      <allow-access-from domain=\"*.example.com\"/>\n      <allow-access-from domain=\"www.example.com\"/>\n      <allow-http-request-headers-from domain=\"*.adobe.com\" headers=\"SOAPAction\"/>\n    </cross-domain-policy>\n\n其根元素是`cross-domain-policy`，它可以包含以下几个子元素：\n\n1. `site-control`，声明该域接受哪些策略文件。该元素只有一个特性，就是`permitted-cross-domain-policies`，它可以接受以下几个取值：\n    1. `none`，不接受任何策略文件，包括自己。\n    2. `master-only`，只接受主策略文件，即定位在`http://your.domain/`的根下面的`crossdomain.xml`。\n    3. `by-content-type`，所有`Content-Type`为`text/x-cross-domain-policy`都视为可接受的策略文件。\n    4. `by-ftp-filename`，所有文件名为`crossdomain.xml`的都视为可接受的策略文件。\n    5. `all`，所有策略文件都可以被接受。\n2. `allow-access-from`，声明这个域能被访问的策略。这个元素有以下几个特性：\n    1. `domain`，声明能访问这个域的域，例如上例的`*.example.com`。这个特性支持使用`*`作为通配符，例如`*`就代表所有域都可以访问这个域的资源。\n    2. `to-ports`，只适用于Socket，表示允许从哪些端口访问，例如`10001,10002`。\n    3. `secure`，只适用于HTTP，当这个特性的值为`true`的时候表示只允许使用HTTPS来访问这个域的资源。\n3. `allow-http-request-headers-from`，声明其它域能发送什么HTTP头。这个元素有以下几个特性：\n    1. `domain`，声明发送请求的域，与`allow-access-from`的`domain`特性类似。\n    2. `headers`，声明能发送的HTTP头，如上例的`SOAPAction`。\n    3. `secure`，与`allow-access-from`的`secure`特性类似。\n\n最常用的用法就是在容器的根目录下面放置一个`crossdomain.xml`，根据我们的需要配置允许访问和允许发送请求的域。下面是两个极端的例子，第一个是最松散的策略：\n\n    <?xml version=\"1.0\"?>\n    <!DOCTYPE cross-domain-policy SYSTEM \"http://www.adobe.com/xml/dtds/cross-domain-policy.dtd\">\n    <cross-domain-policy>\n      <site-control permitted-cross-domain-policies=\"all\"/>\n      <allow-access-from domain=\"*\" secure=\"false\"/>\n      <allow-http-request-headers-from domain=\"*\" headers=\"*\" secure=\"false\"/>\n    </cross-domain-policy>\n\n接受所有策略文件、允许所有域的访问、允许向所有域发送请求。第二个是最严格的策略：\n\n    <?xml version=\"1.0\"?>\n    <!DOCTYPE cross-domain-policy SYSTEM \"http://www.adobe.com/xml/dtds/cross-domain-policy.dtd\">\n    <cross-domain-policy>\n      <site-control permitted-cross-domain-policies=\"none\"/>\n    </cross-domain-policy>\n\n所有策略文件都失效，包括自己。这种配置完了之后，就不能跨域访问这个域的资源了。\n","htmlText":"<p><code>crossdomain.xml</code>是Flash授权一个客户端（Flash Player等）跨域访问数据的一个策略文件。当一个客户端请求不属于其所在域的资源时，远程服务器需要有一个<code>crossdomain.xml</code>文件去判断这个客户端所在的域是否有权限去访问这个资源。</p>\n<p>一个简单的<code>crossdomain.xml</code>的例子如下：</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;    \n&lt;!DOCTYPE cross-domain-policy SYSTEM &quot;http://www.adobe.com/xml/dtds/cross-domain-policy.dtd&quot;&gt;\n&lt;cross-domain-policy&gt;\n  &lt;site-control permitted-cross-domain-policies=&quot;master-only&quot;/&gt;\n  &lt;allow-access-from domain=&quot;*.example.com&quot;/&gt;\n  &lt;allow-access-from domain=&quot;www.example.com&quot;/&gt;\n  &lt;allow-http-request-headers-from domain=&quot;*.adobe.com&quot; headers=&quot;SOAPAction&quot;/&gt;\n&lt;/cross-domain-policy&gt;\n</code></pre><p>其根元素是<code>cross-domain-policy</code>，它可以包含以下几个子元素：</p>\n<ol>\n<li><code>site-control</code>，声明该域接受哪些策略文件。该元素只有一个特性，就是<code>permitted-cross-domain-policies</code>，它可以接受以下几个取值：<ol>\n<li><code>none</code>，不接受任何策略文件，包括自己。</li>\n<li><code>master-only</code>，只接受主策略文件，即定位在<code>http://your.domain/</code>的根下面的<code>crossdomain.xml</code>。</li>\n<li><code>by-content-type</code>，所有<code>Content-Type</code>为<code>text/x-cross-domain-policy</code>都视为可接受的策略文件。</li>\n<li><code>by-ftp-filename</code>，所有文件名为<code>crossdomain.xml</code>的都视为可接受的策略文件。</li>\n<li><code>all</code>，所有策略文件都可以被接受。</li>\n</ol>\n</li>\n<li><code>allow-access-from</code>，声明这个域能被访问的策略。这个元素有以下几个特性：<ol>\n<li><code>domain</code>，声明能访问这个域的域，例如上例的<code>*.example.com</code>。这个特性支持使用<code>*</code>作为通配符，例如<code>*</code>就代表所有域都可以访问这个域的资源。</li>\n<li><code>to-ports</code>，只适用于Socket，表示允许从哪些端口访问，例如<code>10001,10002</code>。</li>\n<li><code>secure</code>，只适用于HTTP，当这个特性的值为<code>true</code>的时候表示只允许使用HTTPS来访问这个域的资源。</li>\n</ol>\n</li>\n<li><code>allow-http-request-headers-from</code>，声明其它域能发送什么HTTP头。这个元素有以下几个特性：<ol>\n<li><code>domain</code>，声明发送请求的域，与<code>allow-access-from</code>的<code>domain</code>特性类似。</li>\n<li><code>headers</code>，声明能发送的HTTP头，如上例的<code>SOAPAction</code>。</li>\n<li><code>secure</code>，与<code>allow-access-from</code>的<code>secure</code>特性类似。</li>\n</ol>\n</li>\n</ol>\n<p>最常用的用法就是在容器的根目录下面放置一个<code>crossdomain.xml</code>，根据我们的需要配置允许访问和允许发送请求的域。下面是两个极端的例子，第一个是最松散的策略：</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE cross-domain-policy SYSTEM &quot;http://www.adobe.com/xml/dtds/cross-domain-policy.dtd&quot;&gt;\n&lt;cross-domain-policy&gt;\n  &lt;site-control permitted-cross-domain-policies=&quot;all&quot;/&gt;\n  &lt;allow-access-from domain=&quot;*&quot; secure=&quot;false&quot;/&gt;\n  &lt;allow-http-request-headers-from domain=&quot;*&quot; headers=&quot;*&quot; secure=&quot;false&quot;/&gt;\n&lt;/cross-domain-policy&gt;\n</code></pre><p>接受所有策略文件、允许所有域的访问、允许向所有域发送请求。第二个是最严格的策略：</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;!DOCTYPE cross-domain-policy SYSTEM &quot;http://www.adobe.com/xml/dtds/cross-domain-policy.dtd&quot;&gt;\n&lt;cross-domain-policy&gt;\n  &lt;site-control permitted-cross-domain-policies=&quot;none&quot;/&gt;\n&lt;/cross-domain-policy&gt;\n</code></pre><p>所有策略文件都失效，包括自己。这种配置完了之后，就不能跨域访问这个域的资源了。</p>\n","summaryMarkdownText":"\n\n\n`crossdomain.xml`是Flash授权一个客户端（Flash Player等）跨域访问数据的一个策略文件。当一个客户端请求不属于其所在域的资源时，远程服务器需要有一个`crossdomain.xml`文件去判断这个客户端所在的域是否有权限去访问这个资源。\n\n一个简单的`crossdomain.xml`的例子如下：\n\n    <?xml version=\"1.0\"?>\t\n    <!DOCTYPE cross-domain-policy SYSTEM \"http://www.adobe.com/xml/dtds/cross-domain-policy.dtd\">\n    <cross-domain-policy>\n      <site-control permitted-cross-domain-policies=\"master-only\"/>\n      <allow-access-from domain=\"*.example.com\"/>\n      <allow-access-from domain=\"www.example.com\"/>\n      <allow-http-request-headers-from domain=\"*.adobe.com\" headers=\"SOAPAction\"/>\n    </cross-domain-policy>\n\n其根元素是`cross-domain-policy`，它可以包含以下几个子元素：\n\n1. `site-control`，声明该域接受哪些策略文件。该元素只有一个特性，就是`permitted-cross-domain-policies`，它可以接受以下几个取值：\n    1. `none`，不接受任何策略文件，包括自己。\n    2. `master-only`，只接受主策略文件，即定位在`http://your.domain/`的根下面的`crossdomain.xml`。\n    3. `by-content-type`，所有`Content-Type`为`text/x-cross-domain-policy`都视为可接受的策略文件。\n    4. `by-ftp-filename`，所有文件名为`crossdomain.xml`的都视为可接受的策略文件。\n    5. `all`，所有策略文件都可以被接受。\n2. `allow-access-from`，声明这个域能被访问的策略。这个元素有以下几个特性：","summaryHtmlText":"<p><code>crossdomain.xml</code>是Flash授权一个客户端（Flash Player等）跨域访问数据的一个策略文件。当一个客户端请求不属于其所在域的资源时，远程服务器需要有一个<code>crossdomain.xml</code>文件去判断这个客户端所在的域是否有权限去访问这个资源。</p>\n<p>一个简单的<code>crossdomain.xml</code>的例子如下：</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;    \n&lt;!DOCTYPE cross-domain-policy SYSTEM &quot;http://www.adobe.com/xml/dtds/cross-domain-policy.dtd&quot;&gt;\n&lt;cross-domain-policy&gt;\n  &lt;site-control permitted-cross-domain-policies=&quot;master-only&quot;/&gt;\n  &lt;allow-access-from domain=&quot;*.example.com&quot;/&gt;\n  &lt;allow-access-from domain=&quot;www.example.com&quot;/&gt;\n  &lt;allow-http-request-headers-from domain=&quot;*.adobe.com&quot; headers=&quot;SOAPAction&quot;/&gt;\n&lt;/cross-domain-policy&gt;\n</code></pre><p>其根元素是<code>cross-domain-policy</code>，它可以包含以下几个子元素：</p>\n<ol>\n<li><code>site-control</code>，声明该域接受哪些策略文件。该元素只有一个特性，就是<code>permitted-cross-domain-policies</code>，它可以接受以下几个取值：<ol>\n<li><code>none</code>，不接受任何策略文件，包括自己。</li>\n<li><code>master-only</code>，只接受主策略文件，即定位在<code>http://your.domain/</code>的根下面的<code>crossdomain.xml</code>。</li>\n<li><code>by-content-type</code>，所有<code>Content-Type</code>为<code>text/x-cross-domain-policy</code>都视为可接受的策略文件。</li>\n<li><code>by-ftp-filename</code>，所有文件名为<code>crossdomain.xml</code>的都视为可接受的策略文件。</li>\n<li><code>all</code>，所有策略文件都可以被接受。</li>\n</ol>\n</li>\n<li><code>allow-access-from</code>，声明这个域能被访问的策略。这个元素有以下几个特性：</li>\n</ol>\n"}