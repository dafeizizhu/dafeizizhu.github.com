{"year":"2013","month":"11","day":"18","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/11/18/jquery-css.html","fileName":"jquery-css","layout":"post","title":"jQuery扫盲之css","description":"","tags":["JavaScript","jQuery"],"markdownText":"\n\n\n这个也是我们日常使用频率比较高的jQuery方法了。这个方法跟`attr`类似，也是`geter`和`setter`一体的方法。\n\n### getter\n\n> Get the value of style properties for the first element in the set of matched elements.\n\n如果只传入一个参数（不是对象），则视为是`getter`调用。只会获取jQuery对象中第一个元素的CSS属性值。有两种传参的形式：\n\n1. `propertyName`，表示要获取CSS属性名称的字符串。\n2. `propertyNames`，表示获取多个CSS属性名称的一个数组。\n\n`css`方法是一个十分方便的方法，它封装了不同浏览器对于获取元素当前样式所提供的API，例如IE的`elem.currentStyle`和标准的`getComputedStyle`等。它还统一了不同浏览器对于某些CSS属性名，例如`float`，在IE里面是`styleFloat`，而标准则是`cssFloat`，现在我们可以这么获取`float`的值：\n\n    $(elem).css(\"float\");\n\n这个方法还提供了驼峰大小写和`-`连接两种形式去写我们的CSS属性，例如以下两个语句返回的结果是一样的：\n\n    $(elem).css(\"backgroundColor\");\n    $(elem).css(\"background-color\");\n\n值得注意的是，jQuery不支持获取复合属性，例如`border`、`background`等，需要获取这些属性要提供他们所有属性的完整的名称：\n\n    $(elem).css(\"border-top-width\");\n\n在1.9之后，我们还可以传入一个数组获取多个CSS属性，会返回一个键值对表示每个属性对应的值：\n\n    $( elem ).css([ \"borderTopWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderLeftWidth\" ]).\n\n### setter\n\n> Set one or more CSS properties for the set of matched elements.\n\n如果传入两个参数，或者一个对象，则视为是`setter`调用。会设置jQuery对象中所有元素的对应的CSS属性的值。有三种传参的形式：\n\n1. `propertyName`和`value`，对应的CSS属性名和值。\n2. `propertyName`和`function(index, value)`，第一个参数是属性名，第二个回调函数会传入当前元素在jQuery对象中的索引以及原来的属性值，回调函数返回的值将作为新值设置到对应的CSS属性上。\n3. `properties`，一个对象，包含要设置的CSS属性的键值对。\n\n与`getter`不一样的是，对于复合属性`setter`也可以设置了，例如：\n\n    $(elem).css(\"background\", \"white\");\n    $(elem).css(\"border\", \"1px solid black\");\n\n可以通过设置一个CSS属性为空字符串删除该条CSS属性：\n\n    $(elem).css(\"color\", \"\");\n\n在1.6之后，我们可以使用`+=`或者`-=`去设置CSS属性，跟脚本中的`+=`和`-=`是一样的，例如：\n\n    $(elem).css(\"padding-left\", \"+=15\");\n\n这样会使得`elem`的`padding-left`增加15像素。\n\n以上的这个例子还可以使用回调函数来实现同样的效果：\n\n    $(elem).css(\"padding-left\", function (i, paddingLeft) {\n      return paddingLeft + 15;\n    });\n\n当回调函数不返回任何东西的时候将不会为CSS属性设置新值哦。\n","htmlText":"<p>这个也是我们日常使用频率比较高的jQuery方法了。这个方法跟<code>attr</code>类似，也是<code>geter</code>和<code>setter</code>一体的方法。</p>\n<h3 id=\"getter\">getter</h3>\n<blockquote>\n<p>Get the value of style properties for the first element in the set of matched elements.</p>\n</blockquote>\n<p>如果只传入一个参数（不是对象），则视为是<code>getter</code>调用。只会获取jQuery对象中第一个元素的CSS属性值。有两种传参的形式：</p>\n<ol>\n<li><code>propertyName</code>，表示要获取CSS属性名称的字符串。</li>\n<li><code>propertyNames</code>，表示获取多个CSS属性名称的一个数组。</li>\n</ol>\n<p><code>css</code>方法是一个十分方便的方法，它封装了不同浏览器对于获取元素当前样式所提供的API，例如IE的<code>elem.currentStyle</code>和标准的<code>getComputedStyle</code>等。它还统一了不同浏览器对于某些CSS属性名，例如<code>float</code>，在IE里面是<code>styleFloat</code>，而标准则是<code>cssFloat</code>，现在我们可以这么获取<code>float</code>的值：</p>\n<pre><code>$(elem).css(&quot;float&quot;);\n</code></pre><p>这个方法还提供了驼峰大小写和<code>-</code>连接两种形式去写我们的CSS属性，例如以下两个语句返回的结果是一样的：</p>\n<pre><code>$(elem).css(&quot;backgroundColor&quot;);\n$(elem).css(&quot;background-color&quot;);\n</code></pre><p>值得注意的是，jQuery不支持获取复合属性，例如<code>border</code>、<code>background</code>等，需要获取这些属性要提供他们所有属性的完整的名称：</p>\n<pre><code>$(elem).css(&quot;border-top-width&quot;);\n</code></pre><p>在1.9之后，我们还可以传入一个数组获取多个CSS属性，会返回一个键值对表示每个属性对应的值：</p>\n<pre><code>$( elem ).css([ &quot;borderTopWidth&quot;, &quot;borderRightWidth&quot;, &quot;borderBottomWidth&quot;, &quot;borderLeftWidth&quot; ]).\n</code></pre><h3 id=\"setter\">setter</h3>\n<blockquote>\n<p>Set one or more CSS properties for the set of matched elements.</p>\n</blockquote>\n<p>如果传入两个参数，或者一个对象，则视为是<code>setter</code>调用。会设置jQuery对象中所有元素的对应的CSS属性的值。有三种传参的形式：</p>\n<ol>\n<li><code>propertyName</code>和<code>value</code>，对应的CSS属性名和值。</li>\n<li><code>propertyName</code>和<code>function(index, value)</code>，第一个参数是属性名，第二个回调函数会传入当前元素在jQuery对象中的索引以及原来的属性值，回调函数返回的值将作为新值设置到对应的CSS属性上。</li>\n<li><code>properties</code>，一个对象，包含要设置的CSS属性的键值对。</li>\n</ol>\n<p>与<code>getter</code>不一样的是，对于复合属性<code>setter</code>也可以设置了，例如：</p>\n<pre><code>$(elem).css(&quot;background&quot;, &quot;white&quot;);\n$(elem).css(&quot;border&quot;, &quot;1px solid black&quot;);\n</code></pre><p>可以通过设置一个CSS属性为空字符串删除该条CSS属性：</p>\n<pre><code>$(elem).css(&quot;color&quot;, &quot;&quot;);\n</code></pre><p>在1.6之后，我们可以使用<code>+=</code>或者<code>-=</code>去设置CSS属性，跟脚本中的<code>+=</code>和<code>-=</code>是一样的，例如：</p>\n<pre><code>$(elem).css(&quot;padding-left&quot;, &quot;+=15&quot;);\n</code></pre><p>这样会使得<code>elem</code>的<code>padding-left</code>增加15像素。</p>\n<p>以上的这个例子还可以使用回调函数来实现同样的效果：</p>\n<pre><code>$(elem).css(&quot;padding-left&quot;, function (i, paddingLeft) {\n  return paddingLeft + 15;\n});\n</code></pre><p>当回调函数不返回任何东西的时候将不会为CSS属性设置新值哦。</p>\n","summaryMarkdownText":"\n\n\n这个也是我们日常使用频率比较高的jQuery方法了。这个方法跟`attr`类似，也是`geter`和`setter`一体的方法。\n\n### getter\n\n> Get the value of style properties for the first element in the set of matched elements.\n\n如果只传入一个参数（不是对象），则视为是`getter`调用。只会获取jQuery对象中第一个元素的CSS属性值。有两种传参的形式：\n\n1. `propertyName`，表示要获取CSS属性名称的字符串。\n2. `propertyNames`，表示获取多个CSS属性名称的一个数组。\n\n`css`方法是一个十分方便的方法，它封装了不同浏览器对于获取元素当前样式所提供的API，例如IE的`elem.currentStyle`和标准的`getComputedStyle`等。它还统一了不同浏览器对于某些CSS属性名，例如`float`，在IE里面是`styleFloat`，而标准则是`cssFloat`，现在我们可以这么获取`float`的值：\n\n    $(elem).css(\"float\");\n\n这个方法还提供了驼峰大小写和`-`连接两种形式去写我们的CSS属性，例如以下两个语句返回的结果是一样的：\n\n    $(elem).css(\"backgroundColor\");\n    $(elem).css(\"background-color\");\n\n值得注意的是，jQuery不支持获取复合属性，例如`border`、`background`等，需要获取这些属性要提供他们所有属性的完整的名称：\n","summaryHtmlText":"<p>这个也是我们日常使用频率比较高的jQuery方法了。这个方法跟<code>attr</code>类似，也是<code>geter</code>和<code>setter</code>一体的方法。</p>\n<h3 id=\"getter\">getter</h3>\n<blockquote>\n<p>Get the value of style properties for the first element in the set of matched elements.</p>\n</blockquote>\n<p>如果只传入一个参数（不是对象），则视为是<code>getter</code>调用。只会获取jQuery对象中第一个元素的CSS属性值。有两种传参的形式：</p>\n<ol>\n<li><code>propertyName</code>，表示要获取CSS属性名称的字符串。</li>\n<li><code>propertyNames</code>，表示获取多个CSS属性名称的一个数组。</li>\n</ol>\n<p><code>css</code>方法是一个十分方便的方法，它封装了不同浏览器对于获取元素当前样式所提供的API，例如IE的<code>elem.currentStyle</code>和标准的<code>getComputedStyle</code>等。它还统一了不同浏览器对于某些CSS属性名，例如<code>float</code>，在IE里面是<code>styleFloat</code>，而标准则是<code>cssFloat</code>，现在我们可以这么获取<code>float</code>的值：</p>\n<pre><code>$(elem).css(&quot;float&quot;);\n</code></pre><p>这个方法还提供了驼峰大小写和<code>-</code>连接两种形式去写我们的CSS属性，例如以下两个语句返回的结果是一样的：</p>\n<pre><code>$(elem).css(&quot;backgroundColor&quot;);\n$(elem).css(&quot;background-color&quot;);\n</code></pre><p>值得注意的是，jQuery不支持获取复合属性，例如<code>border</code>、<code>background</code>等，需要获取这些属性要提供他们所有属性的完整的名称：</p>\n"}