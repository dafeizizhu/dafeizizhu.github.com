{"year":"2013","month":"09","day":"25","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/09/25/jquery-ajax-setup-ajax-transport.html","fileName":"jquery-ajax-setup-ajax-transport","layout":"post","title":"jQuery扫盲之ajaxSetup和ajaxTransport","description":"","tags":["JavaScript","jQuery"],"markdownText":"\n\n\nAjax系列的最后一篇文档翻译。今天讨论的是Ajax的全局配置`jQuery.ajaxSetup`和配置真正传输对象`jQuery.ajaxTransport`。\n\n### jQuery.ajaxSetup\n____\n\n> Set default values for future Ajax requests. Its use is not recommended.\n\n这个方法十分简单，就是配置Ajax默认的参数。这个方法接受一个参数，跟`jQuery.ajax`的配置参数一模一样。调用`jQuery.ajax`的时候，会合并传入的参数和默认的参数，传入的参数优先级较高。其他所有的快捷方式，例如`jQuery.get`，都会使用这些默认的参数。\n\njQuery文档强烈建议我们不要使用这个方法配置默认参数，以防发生难以预料的错误，例如改变了一个快捷方式的默认行为。\n\n### jQuery.ajaxTransport\n____\n\n> Creates an object that handles the actual transmission of Ajax data.\n\n这个方法比较有趣，可以更改Ajax数据真正的传输方式。我们知道，默认的Ajax是使用XMLHttpRequest去把数据发送到服务器。jQuery提供了这个方法，供我们改变数据传输的方式。\n\n这个方法接受两个参数：\n\n1. `dataType`，声明该传输对象只对特定的数据类型生效。\n2. `handler`，一个回调函数，接受三个参数，与`jQuery.ajaxPrefilter`一致。该回调函数返回的对象就是作为数据的传输对象。\n\n回调函数返回的传输对象有两个方法：\n\n1. `send`，发送数据的方法，接受两个参数，第一个是HTTP头信息，第二个是请求完成后的回调函数。\n2. `abort`，取消请求的方法，不接受任何参数。\n\n`jQuery.ajaxTransport`应该是我们可以操作的最底层的方法了，建议在`jQuery.ajaxPrefilter`和`ajaxSetting.converters`都没办法实现的功能时才使用这个最强大的方法。\n\n其中`send`的第二个参数，请求完成后的回调函数需要传入以下几个参数：\n\n1. `status`，HTTP状态码。\n2. `statusText`，HTTP状态的文字描述。\n3. `response`，返回的数据，是一个对象，其中的键是数据类型，例如`xml`、`text`等，值就是对应类型的数据。\n4. `headers`，经过处理后的HTML头信息。\n\n通过这个方法，我们可以改变发送数据的方式，不仅仅是使用XMLHttpRequest，甚至可以使用`img`标签、`script`标签、`link`标签和`iframe`来发送数据到服务端。jQuery文档上有个例子就是使用`img`标签去发送数据的，有兴趣的小伙伴可以去参考一下，我自己写了一个简单的DEMO，使用`setTimeout`模拟发送请求的过程，例子[参考这里](http://jsfiddle.net/vx528/1/)。\n","htmlText":"<p>Ajax系列的最后一篇文档翻译。今天讨论的是Ajax的全局配置<code>jQuery.ajaxSetup</code>和配置真正传输对象<code>jQuery.ajaxTransport</code>。</p>\n<h3 id=\"jquery-ajaxsetup\">jQuery.ajaxSetup</h3>\n<hr>\n<blockquote>\n<p>Set default values for future Ajax requests. Its use is not recommended.</p>\n</blockquote>\n<p>这个方法十分简单，就是配置Ajax默认的参数。这个方法接受一个参数，跟<code>jQuery.ajax</code>的配置参数一模一样。调用<code>jQuery.ajax</code>的时候，会合并传入的参数和默认的参数，传入的参数优先级较高。其他所有的快捷方式，例如<code>jQuery.get</code>，都会使用这些默认的参数。</p>\n<p>jQuery文档强烈建议我们不要使用这个方法配置默认参数，以防发生难以预料的错误，例如改变了一个快捷方式的默认行为。</p>\n<h3 id=\"jquery-ajaxtransport\">jQuery.ajaxTransport</h3>\n<hr>\n<blockquote>\n<p>Creates an object that handles the actual transmission of Ajax data.</p>\n</blockquote>\n<p>这个方法比较有趣，可以更改Ajax数据真正的传输方式。我们知道，默认的Ajax是使用XMLHttpRequest去把数据发送到服务器。jQuery提供了这个方法，供我们改变数据传输的方式。</p>\n<p>这个方法接受两个参数：</p>\n<ol>\n<li><code>dataType</code>，声明该传输对象只对特定的数据类型生效。</li>\n<li><code>handler</code>，一个回调函数，接受三个参数，与<code>jQuery.ajaxPrefilter</code>一致。该回调函数返回的对象就是作为数据的传输对象。</li>\n</ol>\n<p>回调函数返回的传输对象有两个方法：</p>\n<ol>\n<li><code>send</code>，发送数据的方法，接受两个参数，第一个是HTTP头信息，第二个是请求完成后的回调函数。</li>\n<li><code>abort</code>，取消请求的方法，不接受任何参数。</li>\n</ol>\n<p><code>jQuery.ajaxTransport</code>应该是我们可以操作的最底层的方法了，建议在<code>jQuery.ajaxPrefilter</code>和<code>ajaxSetting.converters</code>都没办法实现的功能时才使用这个最强大的方法。</p>\n<p>其中<code>send</code>的第二个参数，请求完成后的回调函数需要传入以下几个参数：</p>\n<ol>\n<li><code>status</code>，HTTP状态码。</li>\n<li><code>statusText</code>，HTTP状态的文字描述。</li>\n<li><code>response</code>，返回的数据，是一个对象，其中的键是数据类型，例如<code>xml</code>、<code>text</code>等，值就是对应类型的数据。</li>\n<li><code>headers</code>，经过处理后的HTML头信息。</li>\n</ol>\n<p>通过这个方法，我们可以改变发送数据的方式，不仅仅是使用XMLHttpRequest，甚至可以使用<code>img</code>标签、<code>script</code>标签、<code>link</code>标签和<code>iframe</code>来发送数据到服务端。jQuery文档上有个例子就是使用<code>img</code>标签去发送数据的，有兴趣的小伙伴可以去参考一下，我自己写了一个简单的DEMO，使用<code>setTimeout</code>模拟发送请求的过程，例子<a href=\"http://jsfiddle.net/vx528/1/\">参考这里</a>。</p>\n","summaryMarkdownText":"\n\n\nAjax系列的最后一篇文档翻译。今天讨论的是Ajax的全局配置`jQuery.ajaxSetup`和配置真正传输对象`jQuery.ajaxTransport`。\n\n### jQuery.ajaxSetup\n____\n\n> Set default values for future Ajax requests. Its use is not recommended.\n\n这个方法十分简单，就是配置Ajax默认的参数。这个方法接受一个参数，跟`jQuery.ajax`的配置参数一模一样。调用`jQuery.ajax`的时候，会合并传入的参数和默认的参数，传入的参数优先级较高。其他所有的快捷方式，例如`jQuery.get`，都会使用这些默认的参数。\n\njQuery文档强烈建议我们不要使用这个方法配置默认参数，以防发生难以预料的错误，例如改变了一个快捷方式的默认行为。\n\n### jQuery.ajaxTransport\n____\n\n> Creates an object that handles the actual transmission of Ajax data.\n\n这个方法比较有趣，可以更改Ajax数据真正的传输方式。我们知道，默认的Ajax是使用XMLHttpRequest去把数据发送到服务器。jQuery提供了这个方法，供我们改变数据传输的方式。\n\n这个方法接受两个参数：\n\n1. `dataType`，声明该传输对象只对特定的数据类型生效。\n2. `handler`，一个回调函数，接受三个参数，与`jQuery.ajaxPrefilter`一致。该回调函数返回的对象就是作为数据的传输对象。","summaryHtmlText":"<p>Ajax系列的最后一篇文档翻译。今天讨论的是Ajax的全局配置<code>jQuery.ajaxSetup</code>和配置真正传输对象<code>jQuery.ajaxTransport</code>。</p>\n<h3 id=\"jquery-ajaxsetup\">jQuery.ajaxSetup</h3>\n<hr>\n<blockquote>\n<p>Set default values for future Ajax requests. Its use is not recommended.</p>\n</blockquote>\n<p>这个方法十分简单，就是配置Ajax默认的参数。这个方法接受一个参数，跟<code>jQuery.ajax</code>的配置参数一模一样。调用<code>jQuery.ajax</code>的时候，会合并传入的参数和默认的参数，传入的参数优先级较高。其他所有的快捷方式，例如<code>jQuery.get</code>，都会使用这些默认的参数。</p>\n<p>jQuery文档强烈建议我们不要使用这个方法配置默认参数，以防发生难以预料的错误，例如改变了一个快捷方式的默认行为。</p>\n<h3 id=\"jquery-ajaxtransport\">jQuery.ajaxTransport</h3>\n<hr>\n<blockquote>\n<p>Creates an object that handles the actual transmission of Ajax data.</p>\n</blockquote>\n<p>这个方法比较有趣，可以更改Ajax数据真正的传输方式。我们知道，默认的Ajax是使用XMLHttpRequest去把数据发送到服务器。jQuery提供了这个方法，供我们改变数据传输的方式。</p>\n<p>这个方法接受两个参数：</p>\n<ol>\n<li><code>dataType</code>，声明该传输对象只对特定的数据类型生效。</li>\n<li><code>handler</code>，一个回调函数，接受三个参数，与<code>jQuery.ajaxPrefilter</code>一致。该回调函数返回的对象就是作为数据的传输对象。</li>\n</ol>\n"}