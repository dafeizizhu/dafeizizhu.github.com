{"year":"2013","month":"07","day":"13","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/07/13/http-status-code.html","fileName":"http-status-code","layout":"post","title":"HTTP协议之HTTP状态码","description":"","tags":["http"],"markdownText":"\n\n\n继续HTTP协议科普贴。讲一下HTTP状态码，这个已经被人问过N次了。记得上次只能答出200、304、404、503等，然后被深深的鄙视。HTTP状态码表示该HTTP响应状态的三位数字代码，所有状态的第一个数字表示的是同一类的状态。\n\n### 1XX\n\n这类的响应指的是服务器已经接受到客户端的请求，在继续处理。**由于HTTP协议没有定义1XX的状态码，除非在某些试验的情况下，不应该向客户端发送该类响应的状态码。**\n\n1. 100 Continue，表示客户端应该继续发送剩余的请求部分。服务器必须在请求完成后返回一个最终的请求结果。\n2. 101 Switch Protocol，表示客户端应该使用不同的协议继续完成这个请求。只能转移到比现在这个协议更加好的协议上去。\n3. 103 Processing，WebDAV定义的状态码，表示处理将继续进行。\n\n### 2XX\n\n这类的响应指的是请求已经被正确接收并理解，是正确的状态。\n\n1. 200 OK，请求成功，并根据不同的HTTP Method返回不同的信息。\n2. 201 Created，请求已经被实现，而且有一个新的资源已经依据请求的需要而创建，且其URI已经随Location头信息返回。假如需要的资源无法及时创建的话，应当返回'202 Accepted'。\n3. 202 Accepted，表示请求已经被接受，但是还没有处理。这个状态码特别适合某种异步操作的场景，当服务器操作可能比较慢的场景下，可以通过发送202状态码通知客户端，不需要客户端继续保持与服务器的这个HTTP连接。\n4. 203 Non-Authoritative Information，表示这个请求已经成功处理了，但是entity-header的信息在当前服务器上没有有效的确定集合，可能存在本地或者第三方的某个拷贝。\n5. 204 No Content，表示返回的响应没有内容。\n6. 205 Reset Content，表示返回的响应没有内容。与204不一样，205会重置文档视图，即会重置表单的输入域的值。\n7. 206 Partial Content，表示只返回了部分响应的内容，这个状态码在分块下载的时候非常有用，以后会单独进行分析。\n8. 207 Multi-Status，WebDAV定义的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。\n\n### 3XX\n\n这类响应指的是需要客户端进行进一步的操作才能处理。\n\n1. 300 Multiple Choices，被请求的资源有一系列可供选择的回馈信息，可供客户端自行选择该如何操作。\n2. 301 Moved Permanently，请求的资源已经被永久移动到新位置，新位置应该在Location头里面指定。\n3. 302 Found，请求的资源临时定位到另一个位置，由于是临时的，客户端下次发出这个请求时应该还是从原来的URL中获取该资源。\n4. 303 See Other，这个请求在另一个位置上找到，指示客户端应该使用GET在那个位置上获取该资源。\n5. 304 Not Modified，这个请求的资源没有发生过变化，指示客户端可以使用本地缓存。\n6. 305 Use Proxy，这个请求必须通过代理服务器访问。\n7. 306 Switch Proxy，这个状态码已废弃。\n8. 307 Temporary Redirect，于302类似。\n\n### 4XX\n\n这类响应指的是请求错误，表示客户端发生了错误导致请求失败。\n\n1. 400 Bad Request，表示由于客户端的错误（例如语法错误）导致请求失败。\n2. 401 Unauthorized，表示该请求需要认证才能处理。\n3. 402 Payment Required，这个状态码为将来的需求预留。\n4. 403 Forbidden，表示服务器已经接收到请求，但是拒绝处理。可以在响应的实体里面反馈究竟是为啥不响应这个请求。\n5. 404 Not Found，表示请求的资源在服务器上没有找到。\n6. 405 Method Not Allowed，表示该请求所使用的方法是不允许的。例如在一些不支持`PUT`的Web服务器使用`PUT`方法。\n7. 406 Not Acceptable，请求的资源的内容特性无法满足请求头中的条件。\n8. 407 Proxy Authentication Required，表示必须通过代理服务器的认证。\n9. 408 Request Timeout，请求超时。\n10. 409 Conflict，由于和被请求的资源的当前状态之间存在冲突，请求无法完成。\n11. 410 Gone，与404类似，区别是410是永远找不到这个位置的资源，而404则无法确认是临时的还是永远的。\n12. 411 Length Required，必须在头里面声明Content-Length。\n13. 412 Precondition Failed，先决条件失败。\n14. 413 Request Entity Too Large，请求的实体大小太大。可以通过Retry-After的响应头指示客户端应该何时进行重试。\n15. 414 Request-URI Too Long，请求的URI太长，超出服务器的处理范围。\n16. 415 Unsupported Media Type，不支持这个请求的媒体类型。\n17. 416 Requested Range Not Satisfiable，如果请求中包含了Range请求头，并且Range中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义If-Range请求头。\n18. 417 Expectation Failed，在请求头Expect中指定的预期内容无法被服务器满足。\n\n### 5XX\n\n这类响应指的是服务器错误。\n\n1. 500 Internal Server Error，服务器内部错误，通常是程序出错的时候后会返回这个错误码。\n2. 501 Not Implemented，服务器无法处理这个HTTP方法。\n3. 502 Bad Gateway，网关或者代理服务器错误。\n4. 503 Service Unavailable，服务器临时不能处理这个请求，可以通过Retry-After的相应头指示客户端应该何时进行重试。\n5. 504 Gateway Timeout，网关或者代理服务器超时。\n6. 505 HTTP Version Not Supported，服务器不支持该HTTP版本。\n\n今天只是简单罗列一下HTTP状态码，对于某些重要的状态码需要以后进一步分析。\n\n今天参加了阿里D2论坛，接收到不少干货。感受到阿里的一些企业文化，确实比较吸引重视技术的人材。还是希望有一天，我司也能搞出这么一个技术论坛，可以吸引到这么多人来共同参与分享大家的知识，共同进步，祝福我司。\n","htmlText":"<p>继续HTTP协议科普贴。讲一下HTTP状态码，这个已经被人问过N次了。记得上次只能答出200、304、404、503等，然后被深深的鄙视。HTTP状态码表示该HTTP响应状态的三位数字代码，所有状态的第一个数字表示的是同一类的状态。</p>\n<h3 id=\"1xx\">1XX</h3>\n<p>这类的响应指的是服务器已经接受到客户端的请求，在继续处理。<strong>由于HTTP协议没有定义1XX的状态码，除非在某些试验的情况下，不应该向客户端发送该类响应的状态码。</strong></p>\n<ol>\n<li>100 Continue，表示客户端应该继续发送剩余的请求部分。服务器必须在请求完成后返回一个最终的请求结果。</li>\n<li>101 Switch Protocol，表示客户端应该使用不同的协议继续完成这个请求。只能转移到比现在这个协议更加好的协议上去。</li>\n<li>103 Processing，WebDAV定义的状态码，表示处理将继续进行。</li>\n</ol>\n<h3 id=\"2xx\">2XX</h3>\n<p>这类的响应指的是请求已经被正确接收并理解，是正确的状态。</p>\n<ol>\n<li>200 OK，请求成功，并根据不同的HTTP Method返回不同的信息。</li>\n<li>201 Created，请求已经被实现，而且有一个新的资源已经依据请求的需要而创建，且其URI已经随Location头信息返回。假如需要的资源无法及时创建的话，应当返回&#39;202 Accepted&#39;。</li>\n<li>202 Accepted，表示请求已经被接受，但是还没有处理。这个状态码特别适合某种异步操作的场景，当服务器操作可能比较慢的场景下，可以通过发送202状态码通知客户端，不需要客户端继续保持与服务器的这个HTTP连接。</li>\n<li>203 Non-Authoritative Information，表示这个请求已经成功处理了，但是entity-header的信息在当前服务器上没有有效的确定集合，可能存在本地或者第三方的某个拷贝。</li>\n<li>204 No Content，表示返回的响应没有内容。</li>\n<li>205 Reset Content，表示返回的响应没有内容。与204不一样，205会重置文档视图，即会重置表单的输入域的值。</li>\n<li>206 Partial Content，表示只返回了部分响应的内容，这个状态码在分块下载的时候非常有用，以后会单独进行分析。</li>\n<li>207 Multi-Status，WebDAV定义的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</li>\n</ol>\n<h3 id=\"3xx\">3XX</h3>\n<p>这类响应指的是需要客户端进行进一步的操作才能处理。</p>\n<ol>\n<li>300 Multiple Choices，被请求的资源有一系列可供选择的回馈信息，可供客户端自行选择该如何操作。</li>\n<li>301 Moved Permanently，请求的资源已经被永久移动到新位置，新位置应该在Location头里面指定。</li>\n<li>302 Found，请求的资源临时定位到另一个位置，由于是临时的，客户端下次发出这个请求时应该还是从原来的URL中获取该资源。</li>\n<li>303 See Other，这个请求在另一个位置上找到，指示客户端应该使用GET在那个位置上获取该资源。</li>\n<li>304 Not Modified，这个请求的资源没有发生过变化，指示客户端可以使用本地缓存。</li>\n<li>305 Use Proxy，这个请求必须通过代理服务器访问。</li>\n<li>306 Switch Proxy，这个状态码已废弃。</li>\n<li>307 Temporary Redirect，于302类似。</li>\n</ol>\n<h3 id=\"4xx\">4XX</h3>\n<p>这类响应指的是请求错误，表示客户端发生了错误导致请求失败。</p>\n<ol>\n<li>400 Bad Request，表示由于客户端的错误（例如语法错误）导致请求失败。</li>\n<li>401 Unauthorized，表示该请求需要认证才能处理。</li>\n<li>402 Payment Required，这个状态码为将来的需求预留。</li>\n<li>403 Forbidden，表示服务器已经接收到请求，但是拒绝处理。可以在响应的实体里面反馈究竟是为啥不响应这个请求。</li>\n<li>404 Not Found，表示请求的资源在服务器上没有找到。</li>\n<li>405 Method Not Allowed，表示该请求所使用的方法是不允许的。例如在一些不支持<code>PUT</code>的Web服务器使用<code>PUT</code>方法。</li>\n<li>406 Not Acceptable，请求的资源的内容特性无法满足请求头中的条件。</li>\n<li>407 Proxy Authentication Required，表示必须通过代理服务器的认证。</li>\n<li>408 Request Timeout，请求超时。</li>\n<li>409 Conflict，由于和被请求的资源的当前状态之间存在冲突，请求无法完成。</li>\n<li>410 Gone，与404类似，区别是410是永远找不到这个位置的资源，而404则无法确认是临时的还是永远的。</li>\n<li>411 Length Required，必须在头里面声明Content-Length。</li>\n<li>412 Precondition Failed，先决条件失败。</li>\n<li>413 Request Entity Too Large，请求的实体大小太大。可以通过Retry-After的响应头指示客户端应该何时进行重试。</li>\n<li>414 Request-URI Too Long，请求的URI太长，超出服务器的处理范围。</li>\n<li>415 Unsupported Media Type，不支持这个请求的媒体类型。</li>\n<li>416 Requested Range Not Satisfiable，如果请求中包含了Range请求头，并且Range中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义If-Range请求头。</li>\n<li>417 Expectation Failed，在请求头Expect中指定的预期内容无法被服务器满足。</li>\n</ol>\n<h3 id=\"5xx\">5XX</h3>\n<p>这类响应指的是服务器错误。</p>\n<ol>\n<li>500 Internal Server Error，服务器内部错误，通常是程序出错的时候后会返回这个错误码。</li>\n<li>501 Not Implemented，服务器无法处理这个HTTP方法。</li>\n<li>502 Bad Gateway，网关或者代理服务器错误。</li>\n<li>503 Service Unavailable，服务器临时不能处理这个请求，可以通过Retry-After的相应头指示客户端应该何时进行重试。</li>\n<li>504 Gateway Timeout，网关或者代理服务器超时。</li>\n<li>505 HTTP Version Not Supported，服务器不支持该HTTP版本。</li>\n</ol>\n<p>今天只是简单罗列一下HTTP状态码，对于某些重要的状态码需要以后进一步分析。</p>\n<p>今天参加了阿里D2论坛，接收到不少干货。感受到阿里的一些企业文化，确实比较吸引重视技术的人材。还是希望有一天，我司也能搞出这么一个技术论坛，可以吸引到这么多人来共同参与分享大家的知识，共同进步，祝福我司。</p>\n","summaryMarkdownText":"\n\n\n继续HTTP协议科普贴。讲一下HTTP状态码，这个已经被人问过N次了。记得上次只能答出200、304、404、503等，然后被深深的鄙视。HTTP状态码表示该HTTP响应状态的三位数字代码，所有状态的第一个数字表示的是同一类的状态。\n\n### 1XX\n\n这类的响应指的是服务器已经接受到客户端的请求，在继续处理。**由于HTTP协议没有定义1XX的状态码，除非在某些试验的情况下，不应该向客户端发送该类响应的状态码。**\n\n1. 100 Continue，表示客户端应该继续发送剩余的请求部分。服务器必须在请求完成后返回一个最终的请求结果。\n2. 101 Switch Protocol，表示客户端应该使用不同的协议继续完成这个请求。只能转移到比现在这个协议更加好的协议上去。\n3. 103 Processing，WebDAV定义的状态码，表示处理将继续进行。\n\n### 2XX\n\n这类的响应指的是请求已经被正确接收并理解，是正确的状态。\n\n1. 200 OK，请求成功，并根据不同的HTTP Method返回不同的信息。\n2. 201 Created，请求已经被实现，而且有一个新的资源已经依据请求的需要而创建，且其URI已经随Location头信息返回。假如需要的资源无法及时创建的话，应当返回'202 Accepted'。\n3. 202 Accepted，表示请求已经被接受，但是还没有处理。这个状态码特别适合某种异步操作的场景，当服务器操作可能比较慢的场景下，可以通过发送202状态码通知客户端，不需要客户端继续保持与服务器的这个HTTP连接。\n4. 203 Non-Authoritative Information，表示这个请求已经成功处理了，但是entity-header的信息在当前服务器上没有有效的确定集合，可能存在本地或者第三方的某个拷贝。\n5. 204 No Content，表示返回的响应没有内容。\n6. 205 Reset Content，表示返回的响应没有内容。与204不一样，205会重置文档视图，即会重置表单的输入域的值。\n7. 206 Partial Content，表示只返回了部分响应的内容，这个状态码在分块下载的时候非常有用，以后会单独进行分析。\n8. 207 Multi-Status，WebDAV定义的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。","summaryHtmlText":"<p>继续HTTP协议科普贴。讲一下HTTP状态码，这个已经被人问过N次了。记得上次只能答出200、304、404、503等，然后被深深的鄙视。HTTP状态码表示该HTTP响应状态的三位数字代码，所有状态的第一个数字表示的是同一类的状态。</p>\n<h3 id=\"1xx\">1XX</h3>\n<p>这类的响应指的是服务器已经接受到客户端的请求，在继续处理。<strong>由于HTTP协议没有定义1XX的状态码，除非在某些试验的情况下，不应该向客户端发送该类响应的状态码。</strong></p>\n<ol>\n<li>100 Continue，表示客户端应该继续发送剩余的请求部分。服务器必须在请求完成后返回一个最终的请求结果。</li>\n<li>101 Switch Protocol，表示客户端应该使用不同的协议继续完成这个请求。只能转移到比现在这个协议更加好的协议上去。</li>\n<li>103 Processing，WebDAV定义的状态码，表示处理将继续进行。</li>\n</ol>\n<h3 id=\"2xx\">2XX</h3>\n<p>这类的响应指的是请求已经被正确接收并理解，是正确的状态。</p>\n<ol>\n<li>200 OK，请求成功，并根据不同的HTTP Method返回不同的信息。</li>\n<li>201 Created，请求已经被实现，而且有一个新的资源已经依据请求的需要而创建，且其URI已经随Location头信息返回。假如需要的资源无法及时创建的话，应当返回&#39;202 Accepted&#39;。</li>\n<li>202 Accepted，表示请求已经被接受，但是还没有处理。这个状态码特别适合某种异步操作的场景，当服务器操作可能比较慢的场景下，可以通过发送202状态码通知客户端，不需要客户端继续保持与服务器的这个HTTP连接。</li>\n<li>203 Non-Authoritative Information，表示这个请求已经成功处理了，但是entity-header的信息在当前服务器上没有有效的确定集合，可能存在本地或者第三方的某个拷贝。</li>\n<li>204 No Content，表示返回的响应没有内容。</li>\n<li>205 Reset Content，表示返回的响应没有内容。与204不一样，205会重置文档视图，即会重置表单的输入域的值。</li>\n<li>206 Partial Content，表示只返回了部分响应的内容，这个状态码在分块下载的时候非常有用，以后会单独进行分析。</li>\n<li>207 Multi-Status，WebDAV定义的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</li>\n</ol>\n"}