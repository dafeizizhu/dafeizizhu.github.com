{"year":"2013","month":"10","day":"29","filePath":"/home/dafeizizhu/workspace/github/dafeizizhu/dafeizizhu.github.com/site/posts/2013/10/29/document-cookie.html","fileName":"document-cookie","layout":"post","title":"document.cookie","description":"","tags":["JavaScript"],"markdownText":"\n\n\n什么是cookie？\n\n> cookie 是存储于访问者的计算机中的变量。每当同一台计算机通过浏览器请求某个页面时，就会发送这个 cookie。你可以使用 JavaScript 来创建和取回 cookie 的值。\n\n对应的JavaScript API就是`document.cookie`。这是一个非常奇怪的属性，我们可以通过访问这个属性得到当前页面的所有cookie：\n\n    allCookies = document.cookie;\n\n返回的字符串是一系列的键值对，用`;`隔开，键值用`=`连接：\n\n    key1=value1;key2=value2\n\n我们需要使用一个正则表达式去把这个字符串转成JavaScript对象（摘自[arale/cookie](https://github.com/aralejs/cookie/blob/master/src/cookie.js)）：\n\n    var cookieParts = document.cookie.split(/;\\s/g);\n    for (var i = 0, len = cookieParts.length; i < len; i++) {\n      var cookieNameValue = cookieParts[i].match(/([^=]+)=/i);\n      if (cookieNameValue) {\n        var cookieName = decodeURIComponent(cookieNameValue[1]);\n\t\tvar cookieValue = decodeURIComponent(cookieParts[i]\n          .substring(cookieNameValue[1].length + 1));\n        result[cookieName] = cookieValue;\n      }\n    }\n\n设置的话我们可以直接设置一个新的键值对，浏览器会自动判断是增加还是更新一个cookie的值：\n\n    document.cookie = \"key1=value1\"; // insert\n    document.cookie = \"key1=value2\"; // update\n\n在设置cookie的时候可以在字符串后附加一些信息，例如：\n\n1. `;path=path`，声明这个cookie的路径，默认是当前页面的路径。\n2. `;domain=domain`，声明这个cookie适用的域，默认是当前页面的域（`window.location.host`）。\n3. `;max-age=max-age-in-seconds`，声明cookie的最长有效时间。\n4. `;expires=date-in-GMTString-format`，声明cookie的过期时间，默认是在这个session失效之后失效，例如`;expires=Mon, 03 Jul 2006 21:44:38 GMT`。\n5. `secure`，声明这个cookie只有在安全的通道（例如`https`）才会被传输。\n\n由于cookie是使用以上的格式存储在一个字符串中，所以当cookie的值包含了`;`或者`=`的时候可能会扰乱整个解码过程，所以在设置的时候最好调用`encodeURIComponent`进行URL编码：\n\n    document.cookie = encodeURIComponent(key) + \"=\" + \n      encodeURIComponent(value);\n\n最后要注意的是：\n\n1. 现在有比cookie更好的客户端存储方案（`LocalStorage`等），如果这些信息不需要与服务端交互请尽量使用新的存储方案。\n2. 如果要删除一个cookie可以简单把过期时间设置为`0`。\n3. 由于cookie会随着请求发送到服务器，请时刻留意cookie的大小以免请求过大。\n","htmlText":"<p>什么是cookie？</p>\n<blockquote>\n<p>cookie 是存储于访问者的计算机中的变量。每当同一台计算机通过浏览器请求某个页面时，就会发送这个 cookie。你可以使用 JavaScript 来创建和取回 cookie 的值。</p>\n</blockquote>\n<p>对应的JavaScript API就是<code>document.cookie</code>。这是一个非常奇怪的属性，我们可以通过访问这个属性得到当前页面的所有cookie：</p>\n<pre><code>allCookies = document.cookie;\n</code></pre><p>返回的字符串是一系列的键值对，用<code>;</code>隔开，键值用<code>=</code>连接：</p>\n<pre><code>key1=value1;key2=value2\n</code></pre><p>我们需要使用一个正则表达式去把这个字符串转成JavaScript对象（摘自<a href=\"https://github.com/aralejs/cookie/blob/master/src/cookie.js\">arale/cookie</a>）：</p>\n<pre><code>var cookieParts = document.cookie.split(/;\\s/g);\nfor (var i = 0, len = cookieParts.length; i &lt; len; i++) {\n  var cookieNameValue = cookieParts[i].match(/([^=]+)=/i);\n  if (cookieNameValue) {\n    var cookieName = decodeURIComponent(cookieNameValue[1]);\n    var cookieValue = decodeURIComponent(cookieParts[i]\n      .substring(cookieNameValue[1].length + 1));\n    result[cookieName] = cookieValue;\n  }\n}\n</code></pre><p>设置的话我们可以直接设置一个新的键值对，浏览器会自动判断是增加还是更新一个cookie的值：</p>\n<pre><code>document.cookie = &quot;key1=value1&quot;; // insert\ndocument.cookie = &quot;key1=value2&quot;; // update\n</code></pre><p>在设置cookie的时候可以在字符串后附加一些信息，例如：</p>\n<ol>\n<li><code>;path=path</code>，声明这个cookie的路径，默认是当前页面的路径。</li>\n<li><code>;domain=domain</code>，声明这个cookie适用的域，默认是当前页面的域（<code>window.location.host</code>）。</li>\n<li><code>;max-age=max-age-in-seconds</code>，声明cookie的最长有效时间。</li>\n<li><code>;expires=date-in-GMTString-format</code>，声明cookie的过期时间，默认是在这个session失效之后失效，例如<code>;expires=Mon, 03 Jul 2006 21:44:38 GMT</code>。</li>\n<li><code>secure</code>，声明这个cookie只有在安全的通道（例如<code>https</code>）才会被传输。</li>\n</ol>\n<p>由于cookie是使用以上的格式存储在一个字符串中，所以当cookie的值包含了<code>;</code>或者<code>=</code>的时候可能会扰乱整个解码过程，所以在设置的时候最好调用<code>encodeURIComponent</code>进行URL编码：</p>\n<pre><code>document.cookie = encodeURIComponent(key) + &quot;=&quot; + \n  encodeURIComponent(value);\n</code></pre><p>最后要注意的是：</p>\n<ol>\n<li>现在有比cookie更好的客户端存储方案（<code>LocalStorage</code>等），如果这些信息不需要与服务端交互请尽量使用新的存储方案。</li>\n<li>如果要删除一个cookie可以简单把过期时间设置为<code>0</code>。</li>\n<li>由于cookie会随着请求发送到服务器，请时刻留意cookie的大小以免请求过大。</li>\n</ol>\n","summaryMarkdownText":"\n\n\n什么是cookie？\n\n> cookie 是存储于访问者的计算机中的变量。每当同一台计算机通过浏览器请求某个页面时，就会发送这个 cookie。你可以使用 JavaScript 来创建和取回 cookie 的值。\n\n对应的JavaScript API就是`document.cookie`。这是一个非常奇怪的属性，我们可以通过访问这个属性得到当前页面的所有cookie：\n\n    allCookies = document.cookie;\n\n返回的字符串是一系列的键值对，用`;`隔开，键值用`=`连接：\n\n    key1=value1;key2=value2\n\n我们需要使用一个正则表达式去把这个字符串转成JavaScript对象（摘自[arale/cookie](https://github.com/aralejs/cookie/blob/master/src/cookie.js)）：\n\n    var cookieParts = document.cookie.split(/;\\s/g);\n    for (var i = 0, len = cookieParts.length; i < len; i++) {\n      var cookieNameValue = cookieParts[i].match(/([^=]+)=/i);\n      if (cookieNameValue) {\n        var cookieName = decodeURIComponent(cookieNameValue[1]);\n\t\tvar cookieValue = decodeURIComponent(cookieParts[i]\n          .substring(cookieNameValue[1].length + 1));\n        result[cookieName] = cookieValue;","summaryHtmlText":"<p>什么是cookie？</p>\n<blockquote>\n<p>cookie 是存储于访问者的计算机中的变量。每当同一台计算机通过浏览器请求某个页面时，就会发送这个 cookie。你可以使用 JavaScript 来创建和取回 cookie 的值。</p>\n</blockquote>\n<p>对应的JavaScript API就是<code>document.cookie</code>。这是一个非常奇怪的属性，我们可以通过访问这个属性得到当前页面的所有cookie：</p>\n<pre><code>allCookies = document.cookie;\n</code></pre><p>返回的字符串是一系列的键值对，用<code>;</code>隔开，键值用<code>=</code>连接：</p>\n<pre><code>key1=value1;key2=value2\n</code></pre><p>我们需要使用一个正则表达式去把这个字符串转成JavaScript对象（摘自<a href=\"https://github.com/aralejs/cookie/blob/master/src/cookie.js\">arale/cookie</a>）：</p>\n<pre><code>var cookieParts = document.cookie.split(/;\\s/g);\nfor (var i = 0, len = cookieParts.length; i &lt; len; i++) {\n  var cookieNameValue = cookieParts[i].match(/([^=]+)=/i);\n  if (cookieNameValue) {\n    var cookieName = decodeURIComponent(cookieNameValue[1]);\n    var cookieValue = decodeURIComponent(cookieParts[i]\n      .substring(cookieNameValue[1].length + 1));\n    result[cookieName] = cookieValue;\n</code></pre>"}